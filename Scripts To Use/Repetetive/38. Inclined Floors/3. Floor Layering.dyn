{
  "Uuid": "22fb74f5-2c70-4b0e-b900-764593cf3d1a",
  "IsCustomNode": false,
  "Description": null,
  "Name": "3. Floor Layering",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 234,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "331b29fe79ca47c1a96f3e0057daa7b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "916ba2820c5244e5aeedf33a4f51af1c",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "494ee12d7ddd487483b5f8fe232cca25",
      "Inputs": [
        {
          "Id": "d5009daca9a746e799c7e9bc491bd136",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ced9cf6a8ba74190b9b9d05ce23856a4",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "c5d939435a49487c8c2a40711e196ae0",
      "Inputs": [
        {
          "Id": "75f321ac21be498485e3c81c2b983ad9",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8eb170da230948229be4e6479e93bbfd",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "866d3fbcf0fa4e5e938c09169a68eb6b",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Elevation at Top\";",
      "Id": "b37cdc4a89a944b3bd76598fd00586a9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a1567e5aeeb84809b1ce308dd6590714",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nfloors=IN[0]\r\nelev=IN[1]\r\nfloorf=[]\r\nfor ind, i in enumerate(elev):\r\n\tif i!=None and i!=[] and type(i)!=int and type(i)!=float:\r\n\t\tfloorf.append(ind)\r\nOUT= floorf",
      "VariableInputPorts": true,
      "Id": "bb545f97f1da444ebd179332a1a52874",
      "Inputs": [
        {
          "Id": "d9112eb3457e451796b54e4a15a7d046",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ff9e11f946c41ada49db608e682b23a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3c06ec3ead7461ba86f4e9c190fd0be",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b058b45749c140f28614ff7b5471f42b",
      "Inputs": [
        {
          "Id": "12cfc17aff8f415fbefb32c6629c87b6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76eb3b70ad7e4de29d5475c7d4424341",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05e70f37b2744365a1417c59d47f173d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Topology.Faces",
      "Id": "82c46f9cf5a646f69d8f41c9c52d48a7",
      "Inputs": [
        {
          "Id": "7fd40b54a5c44360b927c0a552fa51ff",
          "Name": "topology",
          "Description": "Autodesk.DesignScript.Geometry.Topology",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0e390b35a894528a98d5a0e14f7f62d",
          "Name": "Face[]",
          "Description": "Face[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces of the Topology\n\nTopology.Faces: Face[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Face.SurfaceGeometry",
      "Id": "f89f3a15c0d14000b875b45aa8b66100",
      "Inputs": [
        {
          "Id": "98d120c4b7b547d5a2fa1362726b67f8",
          "Name": "face",
          "Description": "Autodesk.DesignScript.Geometry.Face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2010956ffe254073bf453c1f669399a8",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The underlying Surface making up the Face\n\nFace.SurfaceGeometry ( ): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "df05b0dda33a4bd29b8e8bddcbf3571f",
      "Inputs": [
        {
          "Id": "4652c1fe8c434f4db89df85ae0c3aa77",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b71a757cf18c477eb7fb058ddeed6145",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nsurface=IN[0]\r\nareas=IN[1]\r\nbot_top_surf=IN[2]\r\nsurface_interest=[]\r\n\r\n\r\nfor ind, i in enumerate(surface):\r\n\tsub=[]\r\n\tarea=areas[ind]\r\n\tfor ind1, j in enumerate(area):\r\n\t\tif j in bot_top_surf[ind]:\t\r\n\t\t\tsub.append(i[ind1])\r\n\tsurface_interest.append(sub)\r\n\t\r\ntop=[]\r\nbottom=[]\r\nfor i in surface_interest:\r\n\ttop.append(i[1])\r\n\tbottom.append(i[0])\r\nOUT=top, bottom",
      "VariableInputPorts": true,
      "Id": "302a85fc4d85494ba08a5585e0c4c2a0",
      "Inputs": [
        {
          "Id": "ff0568b6ead64f24ae83150902622629",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30652a8a50b9439fa5602e0a0e9b76bb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a69b31c465064d6cb053bbf6f6c36db5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "791eeaeef5af421882327cd805ee18fd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\npoints=IN[0]\r\n\r\npoints=[sorted(i) for i in points]\r\npoints_sub=[i[(len(i)-2)::] for i in points]\r\n\r\nOUT=points_sub",
      "VariableInputPorts": true,
      "Id": "0b061d729f12459a8261f9c8592b1548",
      "Inputs": [
        {
          "Id": "16cf2bcafce3431a8806465a7c5ad62e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38519c1415a043c190cf00c6c1b4645b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "bf65e86beda84514a9649b3ecb8fe4c1",
      "Inputs": [
        {
          "Id": "8b5d3bfa4b624ca485251a1b4dcef42a",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b25c18c25974d889e8da6439e07c881",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[1];",
      "Id": "0a51af373c8d47e6b6e42646b58421d5",
      "Inputs": [
        {
          "Id": "fedc4cc6943f4a7cb8823650d6e2d885",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41120f1b310b4c04a498354b88f482e9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "fba9d8e4-0358-49e1-b306-da38076bf26d",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "f564b150ab8a4b98b5f5548e3d322cf8",
      "Inputs": [
        {
          "Id": "0a17026e1c5a4cadb47e872ce3557e8f",
          "Name": "InputSurfaces",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f90ec01c201941a5a346980b8705d135",
          "Name": "Planes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "(Sastrugi_Geometry) This node will extract a plane that best fits a surface."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "fba9d8e4-0358-49e1-b306-da38076bf26d",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "86bcf11786a14f88abe3682f36c558a0",
      "Inputs": [
        {
          "Id": "b123ad3aa37046f690a2261feae6fe8e",
          "Name": "InputSurfaces",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53495b51526747cdaeb02294aaf2c247",
          "Name": "Planes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "(Sastrugi_Geometry) This node will extract a plane that best fits a surface."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Solids",
      "Id": "3b84cc6f5c004dfdba12a1cda89b8000",
      "Inputs": [
        {
          "Id": "1d5839b6f2fa41389df7380c383d8a1b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5599bfa376174719aa65397d90f77454",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this Element\n\nElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "5f7fa975d97d419cab104e3ee33498a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e1441a91e6d4d45b2a90e2e1e5e3fbc",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr #This is .NET's Common Language Runtime. It's an execution environment\r\n#that is able to execute code from several different languages.\r\nimport sys #sys is a fundamental Python library - here, we're using it to load in\r\n#the standard IronPython libraries\r\nsys.path.append('C:\\Program Files (x86)\\IronPython 2.7\\Lib') #Imports the\r\n#standard IronPython libraries, which cover everything from servers and\r\n#encryption through to regular expressions.\r\nimport System #The System namespace at the root of .NET\r\nfrom System import Array #.NET class for handling array information\r\nfrom System.Collections.Generic import * #Lets you handle generics. Revit's API\r\n#sometimes wants hard-typed 'generic' lists, called ILists. If you don't need\r\n#these you can delete this line.\r\nclr.AddReference('ProtoGeometry')  #A Dynamo library for its proxy geometry\r\n#classes. You'll only need this if you're interacting with geometry.\r\nfrom Autodesk.DesignScript.Geometry import * #Loads everything in Dynamo's\r\n#geometry library\r\nclr.AddReference(\"RevitNodes\") #Dynamo's nodes for Revit\r\nimport Revit #Loads in the Revit namespace in RevitNodes\r\nclr.ImportExtensions(Revit.Elements) #More loading of Dynamo's Revit libraries\r\nclr.ImportExtensions(Revit.GeometryConversion) #More loading of Dynamo's\r\n#Revit libraries. You'll only need this if you're interacting with geometry.\r\nclr.AddReference(\"RevitServices\") #Dynamo's classes for handling Revit documents\r\nimport RevitServices \r\nfrom RevitServices.Persistence import DocumentManager #An internal Dynamo class\r\n#that keeps track of the document that Dynamo is currently attached to\r\nfrom RevitServices.Transactions import TransactionManager #A Dynamo class for\r\n#opening and closing transactions to change the Revit document's database\r\n\r\nclr.AddReference(\"RevitAPI\") #Adding reference to Revit's API DLLs\r\nclr.AddReference(\"RevitAPIUI\") #Adding reference to Revit's API DLLs\r\n\r\nimport Autodesk #Loads the Autodesk namespace\r\nfrom Autodesk.Revit.DB import * #Loading Revit's API classes\r\nfrom Autodesk.Revit.UI import * #Loading Revit's API UI classes  \r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument #Finally, setting up handles to the active Revit document\r\nuiapp = DocumentManager.Instance.CurrentUIApplication #Setting a handle to the active Revit UI document\r\napp = uiapp.Application  #Setting a handle to the currently-open instance of the Revit application\r\nuidoc = uiapp.ActiveUIDocument #Setting a handle to the currently-open instance of the Revit UI application\r\n\r\nplanes=IN[0]\r\noffset=IN[1]\r\nplanes_offset=[]\r\nfor ind, i in enumerate(planes):\r\n\tsub=[]\r\n\tfor j in range(len(offset)):\r\n\t\tnew=i.Offset(offset[j])\r\n\t\tsub.append(new)\r\n\tplanes_offset.append(sub)\r\nOUT=planes_offset",
      "VariableInputPorts": true,
      "Id": "94491c229e41497e87d3fe3ec9a1b34f",
      "Inputs": [
        {
          "Id": "b0d168d9541b4b89bf26dd1933beada3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c048096cda97459d9cd8955085e0a09e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38aa7892acc24a548d926337c348fd38",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0cbe80466cbc43c0b0441536ade800cd",
      "Inputs": [
        {
          "Id": "449244a626a24ac7a9b3bf7e70563010",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eda6e91792534faaa341c92ae8886e5f",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a172577d782a4f0fa410ea8a3284c7bb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[50,100,150,200,250];",
      "Id": "0d0dc9f069ba4866bff71bcdff02690e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de789a6e8f4d4a969900db53ee5ab8d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr #This is .NET's Common Language Runtime. It's an execution environment\r\n#that is able to execute code from several different languages.\r\nimport sys #sys is a fundamental Python library - here, we're using it to load in\r\n#the standard IronPython libraries\r\nsys.path.append('C:\\Program Files (x86)\\IronPython 2.7\\Lib') #Imports the\r\n#standard IronPython libraries, which cover everything from servers and\r\n#encryption through to regular expressions.\r\nimport System #The System namespace at the root of .NET\r\nfrom System import Array #.NET class for handling array information\r\nfrom System.Collections.Generic import * #Lets you handle generics. Revit's API\r\n#sometimes wants hard-typed 'generic' lists, called ILists. If you don't need\r\n#these you can delete this line.\r\nclr.AddReference('ProtoGeometry')  #A Dynamo library for its proxy geometry\r\n#classes. You'll only need this if you're interacting with geometry.\r\nfrom Autodesk.DesignScript.Geometry import * #Loads everything in Dynamo's\r\n#geometry library\r\nclr.AddReference(\"RevitNodes\") #Dynamo's nodes for Revit\r\nimport Revit #Loads in the Revit namespace in RevitNodes\r\nclr.ImportExtensions(Revit.Elements) #More loading of Dynamo's Revit libraries\r\nclr.ImportExtensions(Revit.GeometryConversion) #More loading of Dynamo's\r\n#Revit libraries. You'll only need this if you're interacting with geometry.\r\nclr.AddReference(\"RevitServices\") #Dynamo's classes for handling Revit documents\r\nimport RevitServices \r\nfrom RevitServices.Persistence import DocumentManager #An internal Dynamo class\r\n#that keeps track of the document that Dynamo is currently attached to\r\nfrom RevitServices.Transactions import TransactionManager #A Dynamo class for\r\n#opening and closing transactions to change the Revit document's database\r\n\r\nclr.AddReference(\"RevitAPI\") #Adding reference to Revit's API DLLs\r\nclr.AddReference(\"RevitAPIUI\") #Adding reference to Revit's API DLLs\r\n\r\nimport Autodesk #Loads the Autodesk namespace\r\nfrom Autodesk.Revit.DB import * #Loading Revit's API classes\r\nfrom Autodesk.Revit.UI import * #Loading Revit's API UI classes  \r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument #Finally, setting up handles to the active Revit document\r\nuiapp = DocumentManager.Instance.CurrentUIApplication #Setting a handle to the active Revit UI document\r\napp = uiapp.Application  #Setting a handle to the currently-open instance of the Revit application\r\nuidoc = uiapp.ActiveUIDocument #Setting a handle to the currently-open instance of the Revit UI application\r\n\r\ninp=[UnwrapElement(i) for i in IN[0]]\r\n\r\n\r\nsize=len(inp)\r\n\r\nname_general=IN[1]\r\nnew=[]\r\nfor i in inp:\r\n\tnew.append(name_general)\r\n\t\r\n\r\nOUT=new",
      "VariableInputPorts": true,
      "Id": "6cca888e79c44a1b89305e44e8d3a5f8",
      "Inputs": [
        {
          "Id": "f20cf3bd206246d0a090f924088aaa1d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "813b4258aba64452a4023565d4468249",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4b5cf2431484750be9f9d4553ab9add",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.SetParameterByNameTypeOrInstance@Revit.Elements.Element,string,var",
      "Id": "0b3634952da541219e78601511153aa7",
      "Inputs": [
        {
          "Id": "a81d7f0487bb4fe2a8292bcef6989759",
          "Name": "element",
          "Description": "The element to set parameter to.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4890a6c96443416c99c080c44f3a8ce9",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fe0181ede8c469ca4682b64abbed514",
          "Name": "value",
          "Description": "The value to set.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b9befda9afc4177aa811d1e3ef24fad",
          "Name": "element",
          "Description": "The element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters. Instance if it is instance or type if type.\n\nElements.SetParameterByNameTypeOrInstance (element: Element, parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Orchid.E.RevitMaterial.Material, OrchidRE",
      "SelectedIndex": 68,
      "SelectedString": "Glass",
      "NodeType": "ExtensionNode",
      "Id": "1108ef98a19c4c5f9a3f32511c92e041",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bdf5a08d7c545b7b6da0b76c86a3f53",
          "Name": "Material",
          "Description": "The selected Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Dropdown for materials"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Mark\";",
      "Id": "e775be35ae70438c9a60336b58883897",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c952aee850944d8aa74cf289c3c6c30",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 234,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "d164a056071d460bb0c3a5b24d20fa91",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a204df81d37a47dd989b509ffb000617",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "14680e1cc18a4bc0a33dbf6ac6fe862f",
      "Inputs": [
        {
          "Id": "ff09afba283343bc80b73bc5f0ea0e79",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b740457bf7484540a3ab442238e95396",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63e64a6446414327a685c22326a220da",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e7e55284249a43ca9b62d5b4d0b39a51",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf48ca7c17bc45afbf6040a93acf1dea",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport sys\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n\r\nsolids1=IN[0]\r\nplanes1=IN[1]\r\nsolids=[]\r\nfor ind, solid in enumerate(solids1):\r\n\tsolid_sub=[]\r\n\tplanes=planes1[ind]\r\n\tfor ind, i in enumerate(planes):\r\n\t\tsol1=Geometry.Split(solid, i)\r\n\t\tif len(sol1)==2 and ind<len(planes)-1:\r\n\t\t\tboo1=str(sol1[0].DoesIntersect(planes[ind+1]))\r\n\t\t\tif boo1==\"True\":\r\n\t\t\t\tsolid=sol1[0]\r\n\t\t\t\tsolid_sub.append(sol1[1])\r\n\t\t\telse:\r\n\t\t\t\tsolid=sol1[1]\r\n\t\t\t\tsolid_sub.append(sol1[0])\r\n\t\telse:\r\n\t\t\tsolid_sub.append(solid)\r\n\t\t\r\n\tsolids1=Geometry.Split(solid_sub[-1], planes[-1])\r\n\tif len(solids1)==2:\r\n\t\tsolid_sub[-1]=solids1[0]\r\n\t\tsolid_sub.append(solids1[1])\r\n\tsolids.append(solid_sub)\r\n\r\nOUT=solids\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "2e3cfa5acaae40cb97f79388402ccaf3",
      "Inputs": [
        {
          "Id": "53af7c3ea3824a248d7a1e478d8b8827",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc98525539814eb0b283fa04f531806a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36403d498c8a42589dffa4e2236650cd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c6e3dfedc2cf4b8a8836071dcbacb2b4",
      "Inputs": [
        {
          "Id": "831027a4263f449bb3219e36236b0cb0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "def0e9c7b89e4c0b824b33b3f4a9f76d",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4901e0a4b85d412a8f7a3d17af6300f8",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Oak Flooring\",\"Asphalt, Bitumen\", \"Brick, Common\", \"Concrete\", \"Damp-proofing\", \"Glass\"];",
      "Id": "6267aa5a6ca64dcfa7ccf3ad908fb265",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96219ad0da914f058566d350dffda779",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Material.ByName@string",
      "Id": "c14a4789ad4545708e3bac48d55db03b",
      "Inputs": [
        {
          "Id": "6e6c77049d1b4d08ad53b205943c6be2",
          "Name": "name",
          "Description": "The name of the material\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7de1d22adfbf468a9f84795cca9bdd48",
          "Name": "Material",
          "Description": "Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select a material from the current document by the name\n\nMaterial.ByName (name: string): Material"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Volume",
      "Id": "337a5f2afe724c3faa9723394ea8213a",
      "Inputs": [
        {
          "Id": "e5daa1ad39f84bfca8af9f2a0712ce10",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "537c07c7675145198e2913125097d799",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total volume of the Solid\n\nSolid.Volume: double"
    }
  ],
  "Connectors": [
    {
      "Start": "916ba2820c5244e5aeedf33a4f51af1c",
      "End": "d5009daca9a746e799c7e9bc491bd136",
      "Id": "f6fc6fd8f211420cb3ebaa42d2d6da6c"
    },
    {
      "Start": "ced9cf6a8ba74190b9b9d05ce23856a4",
      "End": "75f321ac21be498485e3c81c2b983ad9",
      "Id": "a990b16fe772406594c0884a873725c9"
    },
    {
      "Start": "ced9cf6a8ba74190b9b9d05ce23856a4",
      "End": "d9112eb3457e451796b54e4a15a7d046",
      "Id": "b647aafa1d9f4d5fbc256a8811ac4c36"
    },
    {
      "Start": "ced9cf6a8ba74190b9b9d05ce23856a4",
      "End": "12cfc17aff8f415fbefb32c6629c87b6",
      "Id": "7d9bbf12f2c74ae7b6afdb4f87db719c"
    },
    {
      "Start": "866d3fbcf0fa4e5e938c09169a68eb6b",
      "End": "6ff9e11f946c41ada49db608e682b23a",
      "Id": "e5990d728d1c4a849ed3bcef345bd248"
    },
    {
      "Start": "a1567e5aeeb84809b1ce308dd6590714",
      "End": "8eb170da230948229be4e6479e93bbfd",
      "Id": "3706a0b1c8f64755851cebd33b28cb4a"
    },
    {
      "Start": "e3c06ec3ead7461ba86f4e9c190fd0be",
      "End": "76eb3b70ad7e4de29d5475c7d4424341",
      "Id": "bb38a2a724994ae18ee6542d5ffd0767"
    },
    {
      "Start": "05e70f37b2744365a1417c59d47f173d",
      "End": "1d5839b6f2fa41389df7380c383d8a1b",
      "Id": "d969e52339dc4c07a850fbc6d5f51352"
    },
    {
      "Start": "d0e390b35a894528a98d5a0e14f7f62d",
      "End": "98d120c4b7b547d5a2fa1362726b67f8",
      "Id": "ce95816486034534a405b6addfba80b5"
    },
    {
      "Start": "2010956ffe254073bf453c1f669399a8",
      "End": "4652c1fe8c434f4db89df85ae0c3aa77",
      "Id": "03220674654c47d6b8832cfc4140e455"
    },
    {
      "Start": "2010956ffe254073bf453c1f669399a8",
      "End": "ff0568b6ead64f24ae83150902622629",
      "Id": "50fdfb9d8afa40839cfed10fd04cdcf1"
    },
    {
      "Start": "b71a757cf18c477eb7fb058ddeed6145",
      "End": "30652a8a50b9439fa5602e0a0e9b76bb",
      "Id": "ed311a1e329b4cdd8d3357d7c597d993"
    },
    {
      "Start": "b71a757cf18c477eb7fb058ddeed6145",
      "End": "16cf2bcafce3431a8806465a7c5ad62e",
      "Id": "d3bca6d2271e4a9484ff7d4ac5c1e7f9"
    },
    {
      "Start": "791eeaeef5af421882327cd805ee18fd",
      "End": "8b5d3bfa4b624ca485251a1b4dcef42a",
      "Id": "07d018bd820b477095312a805a3ffa5b"
    },
    {
      "Start": "791eeaeef5af421882327cd805ee18fd",
      "End": "fedc4cc6943f4a7cb8823650d6e2d885",
      "Id": "f96e0e2e55d44e5cb6f7ac1ebfcf9ab6"
    },
    {
      "Start": "38519c1415a043c190cf00c6c1b4645b",
      "End": "a69b31c465064d6cb053bbf6f6c36db5",
      "Id": "db2fa69642c84299aac1fd4def6a7b82"
    },
    {
      "Start": "2b25c18c25974d889e8da6439e07c881",
      "End": "0a17026e1c5a4cadb47e872ce3557e8f",
      "Id": "dfc036d8973e44d280c7be65909144ee"
    },
    {
      "Start": "41120f1b310b4c04a498354b88f482e9",
      "End": "b123ad3aa37046f690a2261feae6fe8e",
      "Id": "e0b74f83a07949c0980033754a39037e"
    },
    {
      "Start": "f90ec01c201941a5a346980b8705d135",
      "End": "449244a626a24ac7a9b3bf7e70563010",
      "Id": "651a2ea02e3643ac88974c948a62a855"
    },
    {
      "Start": "5599bfa376174719aa65397d90f77454",
      "End": "7fd40b54a5c44360b927c0a552fa51ff",
      "Id": "1e1c99f9bafc4b6b8d15da5efb637dcf"
    },
    {
      "Start": "5599bfa376174719aa65397d90f77454",
      "End": "831027a4263f449bb3219e36236b0cb0",
      "Id": "7a230c779842454f9f2d8ea42a0db714"
    },
    {
      "Start": "38aa7892acc24a548d926337c348fd38",
      "End": "cc98525539814eb0b283fa04f531806a",
      "Id": "12b3454b1cf440e1bee659844d21259d"
    },
    {
      "Start": "a172577d782a4f0fa410ea8a3284c7bb",
      "End": "b0d168d9541b4b89bf26dd1933beada3",
      "Id": "c102c003f3fc41c38411be9192e3875a"
    },
    {
      "Start": "de789a6e8f4d4a969900db53ee5ab8d9",
      "End": "c048096cda97459d9cd8955085e0a09e",
      "Id": "1a3f7ea97cef485193ae88def0d77fca"
    },
    {
      "Start": "a4b5cf2431484750be9f9d4553ab9add",
      "End": "0fe0181ede8c469ca4682b64abbed514",
      "Id": "8aab6f9c994f4bd0bc64ababa7ceec6a"
    },
    {
      "Start": "a4b5cf2431484750be9f9d4553ab9add",
      "End": "e7e55284249a43ca9b62d5b4d0b39a51",
      "Id": "653214ac189d4f4b8e0a37f0fd1cfde6"
    },
    {
      "Start": "9c952aee850944d8aa74cf289c3c6c30",
      "End": "4890a6c96443416c99c080c44f3a8ce9",
      "Id": "04e783fbc7804f1d8019c02c1d8df648"
    },
    {
      "Start": "a204df81d37a47dd989b509ffb000617",
      "End": "b740457bf7484540a3ab442238e95396",
      "Id": "04e618527bab4314aa662e4eda3e4916"
    },
    {
      "Start": "cf48ca7c17bc45afbf6040a93acf1dea",
      "End": "a81d7f0487bb4fe2a8292bcef6989759",
      "Id": "ecda4df96002412d80c354cdd4c397f6"
    },
    {
      "Start": "36403d498c8a42589dffa4e2236650cd",
      "End": "f20cf3bd206246d0a090f924088aaa1d",
      "Id": "aac354c8c8ee47368156198ac7e59567"
    },
    {
      "Start": "36403d498c8a42589dffa4e2236650cd",
      "End": "ff09afba283343bc80b73bc5f0ea0e79",
      "Id": "9821a2bef6114572b45bc0c1f470b91a"
    },
    {
      "Start": "36403d498c8a42589dffa4e2236650cd",
      "End": "e5daa1ad39f84bfca8af9f2a0712ce10",
      "Id": "29c75e80911a4ba1bbf8c74eeb60e6f4"
    },
    {
      "Start": "4901e0a4b85d412a8f7a3d17af6300f8",
      "End": "53af7c3ea3824a248d7a1e478d8b8827",
      "Id": "deee23c33d324a1a912f555c79ae5b4c"
    },
    {
      "Start": "96219ad0da914f058566d350dffda779",
      "End": "813b4258aba64452a4023565d4468249",
      "Id": "b3b44739de5241ab81271fa3cdc7d6ac"
    },
    {
      "Start": "96219ad0da914f058566d350dffda779",
      "End": "6e6c77049d1b4d08ad53b205943c6be2",
      "Id": "2ace65b727e843af93d057aae002df9a"
    },
    {
      "Start": "7de1d22adfbf468a9f84795cca9bdd48",
      "End": "63e64a6446414327a685c22326a220da",
      "Id": "a4455b994c1a42db80a6840cb7144744"
    }
  ],
  "Dependencies": [
    "fba9d8e4-0358-49e1-b306-da38076bf26d"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Rhythm",
      "Version": "2021.4.2",
      "ReferenceType": "Package",
      "Nodes": [
        "c5d939435a49487c8c2a40711e196ae0",
        "0b3634952da541219e78601511153aa7"
      ]
    },
    {
      "Name": "Sastrugi",
      "Version": "2.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "f564b150ab8a4b98b5f5548e3d322cf8",
        "86bcf11786a14f88abe3682f36c558a0"
      ]
    },
    {
      "Name": "Orchid",
      "Version": "206.3.0.7800",
      "ReferenceType": "Package",
      "Nodes": [
        "1108ef98a19c4c5f9a3f32511c92e041"
      ]
    }
  ],
  "Bindings": [
    {
      "NodeId": "14680e1c-c18a-4bc0-a33d-bf6ac6fe862f",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_14680e1c-c18a-4bc0-a33d-bf6ac6fe862f": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 26373.635041287533,
      "EyeY": 5742.4021405162221,
      "EyeZ": 28891.160733387449,
      "LookX": -5840.7280872005795,
      "LookY": -8244.6419970580373,
      "LookZ": -25685.999997881256,
      "UpX": -0.019324992797665141,
      "UpY": 0.99619469809174721,
      "UpZ": -0.084986282112268774
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "331b29fe79ca47c1a96f3e0057daa7b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -596.99351143220065,
        "Y": 1137.924810515748
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "494ee12d7ddd487483b5f8fe232cca25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -225.99351143220065,
        "Y": 1136.924810515748
      },
      {
        "ShowGeometry": true,
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "Id": "c5d939435a49487c8c2a40711e196ae0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15.227971385471164,
        "Y": 1260.0351104923652
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b37cdc4a89a944b3bd76598fd00586a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -258.79516017543892,
        "Y": 1290.2587914513711
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "bb545f97f1da444ebd179332a1a52874",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 576.6576079479571,
        "Y": 1235.243677783953
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "b058b45749c140f28614ff7b5471f42b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 792.93420415337232,
        "Y": 1143.4338707249283
      },
      {
        "ShowGeometry": false,
        "Name": "Topology.Faces",
        "Id": "82c46f9cf5a646f69d8f41c9c52d48a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1452.4075559127771,
        "Y": 1117.6998779975092
      },
      {
        "ShowGeometry": false,
        "Name": "Face.SurfaceGeometry",
        "Id": "f89f3a15c0d14000b875b45aa8b66100",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1730.2986986601134,
        "Y": 1117.6998779975088
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.Area",
        "Id": "df05b0dda33a4bd29b8e8bddcbf3571f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1982.2727632976748,
        "Y": 1237.1800745484009
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "302a85fc4d85494ba08a5585e0c4c2a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2556.3605799503407,
        "Y": 1116.4630841419212
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "0b061d729f12459a8261f9c8592b1548",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2314.4160634181753,
        "Y": 1275.2983473819584
      },
      {
        "ShowGeometry": true,
        "Name": "Top",
        "Id": "bf65e86beda84514a9649b3ecb8fe4c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2724.5979181809084,
        "Y": 1074.645177401509
      },
      {
        "ShowGeometry": true,
        "Name": "Bottom",
        "Id": "0a51af373c8d47e6b6e42646b58421d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2724.8090778405171,
        "Y": 1162.3668115514
      },
      {
        "ShowGeometry": true,
        "Name": "❄_Surface Plane",
        "Id": "f564b150ab8a4b98b5f5548e3d322cf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2967.6993343600566,
        "Y": 1070.7186247434408
      },
      {
        "ShowGeometry": true,
        "Name": "❄_Surface Plane",
        "Id": "86bcf11786a14f88abe3682f36c558a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2965.4793280861663,
        "Y": 1160.7330982824442
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Solids",
        "Id": "3b84cc6f5c004dfdba12a1cda89b8000",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1137.18778663967,
        "Y": 1117.5894158697
      },
      {
        "ShowGeometry": true,
        "Name": "Select Model Elements",
        "Id": "5f7fa975d97d419cab104e3ee33498a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 788.4241258900048,
        "Y": 955.48433102457386
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "94491c229e41497e87d3fe3ec9a1b34f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3650.2199429355651,
        "Y": 1166.8842241303448
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "0cbe80466cbc43c0b0441536ade800cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3321.3359859355792,
        "Y": 1069.6509917416113
      },
      {
        "ShowGeometry": true,
        "Name": "Offset from base Incline",
        "Id": "0d0dc9f069ba4866bff71bcdff02690e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3280.5479375883187,
        "Y": 1270.8896823347131
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "6cca888e79c44a1b89305e44e8d3a5f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4433.1808071662208,
        "Y": 1527.4065868216276
      },
      {
        "ShowGeometry": true,
        "Name": "ʳʰʸᵗʰᵐ|Elements.SetParameterByNameTypeOrInstance",
        "Id": "0b3634952da541219e78601511153aa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5677.8089625376351,
        "Y": 1248.8831566248193
      },
      {
        "ShowGeometry": true,
        "Name": "Materials",
        "Id": "1108ef98a19c4c5f9a3f32511c92e041",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4443.4879150199431,
        "Y": 1242.0375413878946
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e775be35ae70438c9a60336b58883897",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5184.3861201018308,
        "Y": 1220.037210206634
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "d164a056071d460bb0c3a5b24d20fa91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4439.4218288513248,
        "Y": 1156.5184147513082
      },
      {
        "ShowGeometry": false,
        "Name": "DirectShape.ByGeometry",
        "Id": "14680e1cc18a4bc0a33dbf6ac6fe862f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5049.4894779489505,
        "Y": 1034.7068808770018
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2e3cfa5acaae40cb97f79388402ccaf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4068.8308520315832,
        "Y": 1029.3836193247387
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "c6e3dfedc2cf4b8a8836071dcbacb2b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3597.5254469560477,
        "Y": 916.21417694704166
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6267aa5a6ca64dcfa7ccf3ad908fb265",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3412.1776292860914,
        "Y": 1372.8813819553914
      },
      {
        "ShowGeometry": true,
        "Name": "Material.ByName",
        "Id": "c14a4789ad4545708e3bac48d55db03b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4401.7645439055414,
        "Y": 1334.329100293008
      },
      {
        "ShowGeometry": true,
        "Name": "Solid.Volume",
        "Id": "337a5f2afe724c3faa9723394ea8213a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4368.5426238366972,
        "Y": 771.32479043657577
      }
    ],
    "Annotations": [
      {
        "Id": "98cb6a8fa70f48d5a5a48b4774f570a1",
        "Title": "All Inclined Floors",
        "Nodes": [
          "331b29fe79ca47c1a96f3e0057daa7b6",
          "494ee12d7ddd487483b5f8fe232cca25",
          "c5d939435a49487c8c2a40711e196ae0",
          "b37cdc4a89a944b3bd76598fd00586a9",
          "bb545f97f1da444ebd179332a1a52874",
          "b058b45749c140f28614ff7b5471f42b"
        ],
        "Left": -606.99351143220065,
        "Top": 1083.924810515748,
        "Width": 1588.927715585573,
        "Height": 299.333980935623,
        "FontSize": 36.0,
        "InitialTop": 1136.924810515748,
        "InitialHeight": 298.333980935623,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "10a98d383b9246738364eccdfcb18891",
        "Title": "Select Floor if not all inclined floors are to be taken",
        "Nodes": [
          "5f7fa975d97d419cab104e3ee33498a7"
        ],
        "Left": 778.4241258900048,
        "Top": 729.48433102457386,
        "Width": 195.0,
        "Height": 345.0,
        "FontSize": 36.0,
        "InitialTop": 955.48433102457386,
        "InitialHeight": 145.0,
        "TextblockHeight": 216.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4c7d09b6536c4bbdbc48e917aa32b6b0",
        "Title": "Generating names ",
        "Nodes": [
          "6cca888e79c44a1b89305e44e8d3a5f8"
        ],
        "Left": 4423.1808071662208,
        "Top": 1431.4065868216276,
        "Width": 186.05,
        "Height": 215.0,
        "FontSize": 36.0,
        "InitialTop": 1527.4065868216276,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4c43d4aa86834413b93dffddbb7ec85a",
        "Title": "Setting \"Mark\" parameter with names of solids",
        "Nodes": [
          "0b3634952da541219e78601511153aa7"
        ],
        "Left": 5667.8089625376351,
        "Top": 1152.8831566248193,
        "Width": 410.0,
        "Height": 241.0,
        "FontSize": 36.0,
        "InitialTop": 1248.8831566248193,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "159fa837cb444b5483e20e9cdd3d3567",
        "Title": "Splitting Elements",
        "Nodes": [
          "2e3cfa5acaae40cb97f79388402ccaf3"
        ],
        "Left": 4058.8308520315832,
        "Top": 933.38361932473867,
        "Width": 144.0,
        "Height": 215.0,
        "FontSize": 36.0,
        "InitialTop": 1029.3836193247387,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -130.92296468517787,
    "Y": -32.37676559384704,
    "Zoom": 0.29956924191136752
  }
}