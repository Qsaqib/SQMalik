{
  "Uuid": "1b5d244b-9ca2-44f0-bd99-9138f3e94fb1",
  "IsCustomNode": false,
  "Description": null,
  "Name": "v5",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00678d3c",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067903e",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00679341",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00679644",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00679947",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00679c49",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00679f4b",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067a24d",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067a54f",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067a851",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067ab53",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067ae55",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067b158",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067b45b",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067b75e",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0067ff97",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00680299",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00680ea2",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006811a4",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006814a7",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006817a9",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00681aab",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00681dad",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006820af",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006823b1",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006826b3",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006829b5",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00682cb7",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00682fba",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006832bc",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006835be",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006838c0",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00683bc2",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00683ec4",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006841c6",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006844c8",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006847ca",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00684acc",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00684dce",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006856d4",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006859d6",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00685fda",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006862dc",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006865de",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006868e0",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00686be2",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00686ee4",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006871e6",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006874e8",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006877ea",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00687aec",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00687dee",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006892fd",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-006895ff",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00689901",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00689c03",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-00689f05",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0068a207",
        "05644b91-4946-45fa-83c9-d1e9a07662f4-0068a509",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070bd0c",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070c00f",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070c312",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070c615",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070c918",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070cc1b",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070cf1e",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070d221",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070d524",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070d827",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070db2a",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070de2d",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070e130",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070e433",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070e736",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070ea39",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070ed3c",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070f03f",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070f342",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070f645",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070f948",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070fc4b",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0070ff4e",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00710251",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00710554",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00710857",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00710b5a",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00710e5d",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00711160",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00711463",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00711766",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00711a69",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00711d6c",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0071206f",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00712372",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00712675",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00712978",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00712c7b",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00712f7e",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00713281",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00713584",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00713887",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00713b8a",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00713e8d",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00714190",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00714493",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00714796",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00714a99",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-00714d9c",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-0071509f",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-007153a2",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-007156a5",
        "8ccdacae-acf3-47c3-b290-5cb11af98221-007159a8",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071ce02",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071d105",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071d408",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071d70b",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071da0e",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071dd11",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071e014",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071e317",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071e61a",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071e91d",
        "80ff214e-c4bd-44c3-a65d-5072c970d676-0071ec20",
        "87865204-5a55-4762-8111-f74738e743a9-007913e4",
        "87865204-5a55-4762-8111-f74738e743a9-007916e7",
        "87865204-5a55-4762-8111-f74738e743a9-007919ea",
        "87865204-5a55-4762-8111-f74738e743a9-00791ced",
        "87865204-5a55-4762-8111-f74738e743a9-00791ff0",
        "87865204-5a55-4762-8111-f74738e743a9-007922f3",
        "87865204-5a55-4762-8111-f74738e743a9-007925f6",
        "87865204-5a55-4762-8111-f74738e743a9-007928f9",
        "87865204-5a55-4762-8111-f74738e743a9-00792bfc",
        "87865204-5a55-4762-8111-f74738e743a9-00792eff",
        "87865204-5a55-4762-8111-f74738e743a9-00793202",
        "87865204-5a55-4762-8111-f74738e743a9-00793505",
        "87865204-5a55-4762-8111-f74738e743a9-00793808",
        "87865204-5a55-4762-8111-f74738e743a9-00793b0b",
        "87865204-5a55-4762-8111-f74738e743a9-00793e0e",
        "87865204-5a55-4762-8111-f74738e743a9-00794111",
        "87865204-5a55-4762-8111-f74738e743a9-00794414",
        "87865204-5a55-4762-8111-f74738e743a9-00794717",
        "87865204-5a55-4762-8111-f74738e743a9-00794a1a",
        "87865204-5a55-4762-8111-f74738e743a9-00794d1d",
        "87865204-5a55-4762-8111-f74738e743a9-00795020",
        "87865204-5a55-4762-8111-f74738e743a9-00795323",
        "87865204-5a55-4762-8111-f74738e743a9-00795626",
        "87865204-5a55-4762-8111-f74738e743a9-00795929",
        "87865204-5a55-4762-8111-f74738e743a9-00795c2c",
        "87865204-5a55-4762-8111-f74738e743a9-00795f2f",
        "87865204-5a55-4762-8111-f74738e743a9-00796232",
        "87865204-5a55-4762-8111-f74738e743a9-00796535",
        "87865204-5a55-4762-8111-f74738e743a9-00796838",
        "87865204-5a55-4762-8111-f74738e743a9-00796b3b",
        "87865204-5a55-4762-8111-f74738e743a9-00796e3e",
        "87865204-5a55-4762-8111-f74738e743a9-00797141",
        "87865204-5a55-4762-8111-f74738e743a9-00797444",
        "87865204-5a55-4762-8111-f74738e743a9-00797747",
        "87865204-5a55-4762-8111-f74738e743a9-00797a4a",
        "87865204-5a55-4762-8111-f74738e743a9-00797d4d",
        "87865204-5a55-4762-8111-f74738e743a9-00798050",
        "87865204-5a55-4762-8111-f74738e743a9-00798353",
        "9e352ef7-94fe-4429-8154-f9c7c32f009d-007b1e84",
        "9e352ef7-94fe-4429-8154-f9c7c32f009d-007b1e85",
        "9e352ef7-94fe-4429-8154-f9c7c32f009d-007b1e86",
        "2ac8fd0f-366b-4879-8860-f97985b5a53e-007fc636",
        "2ac8fd0f-366b-4879-8860-f97985b5a53e-007fc939",
        "2ac8fd0f-366b-4879-8860-f97985b5a53e-007fcc3c",
        "2ac8fd0f-366b-4879-8860-f97985b5a53e-007fcf3f",
        "2ac8fd0f-366b-4879-8860-f97985b5a53e-007fe15f",
        "2ac8fd0f-366b-4879-8860-f97985b5a53e-007fe462",
        "f356774d-31d8-492b-aacd-ab1acaf0986a-00803c9c",
        "f356774d-31d8-492b-aacd-ab1acaf0986a-00803f9e",
        "3478d919-c166-4208-b810-3196bfce182c-0080c264",
        "3478d919-c166-4208-b810-3196bfce182c-0080c567",
        "3478d919-c166-4208-b810-3196bfce182c-0080c86a",
        "3478d919-c166-4208-b810-3196bfce182c-0080ce6f",
        "3478d919-c166-4208-b810-3196bfce182c-0080d172",
        "3478d919-c166-4208-b810-3196bfce182c-0080d475",
        "3478d919-c166-4208-b810-3196bfce182c-0080d778",
        "3478d919-c166-4208-b810-3196bfce182c-0080da7b",
        "3478d919-c166-4208-b810-3196bfce182c-0080e081",
        "3478d919-c166-4208-b810-3196bfce182c-0080e384",
        "3478d919-c166-4208-b810-3196bfce182c-0080e687",
        "3478d919-c166-4208-b810-3196bfce182c-0080e98a",
        "3478d919-c166-4208-b810-3196bfce182c-0080ec8d",
        "3478d919-c166-4208-b810-3196bfce182c-0080fe9f",
        "3478d919-c166-4208-b810-3196bfce182c-008107a7",
        "3478d919-c166-4208-b810-3196bfce182c-00810aaa",
        "3478d919-c166-4208-b810-3196bfce182c-00810dad",
        "3478d919-c166-4208-b810-3196bfce182c-008110b0",
        "3478d919-c166-4208-b810-3196bfce182c-008113b3",
        "3478d919-c166-4208-b810-3196bfce182c-008119b9",
        "3478d919-c166-4208-b810-3196bfce182c-00811cbc",
        "3478d919-c166-4208-b810-3196bfce182c-008128c7",
        "3478d919-c166-4208-b810-3196bfce182c-00812bc9",
        "3478d919-c166-4208-b810-3196bfce182c-00812ecc",
        "3478d919-c166-4208-b810-3196bfce182c-008131cf",
        "3478d919-c166-4208-b810-3196bfce182c-008137d4",
        "3478d919-c166-4208-b810-3196bfce182c-00813ad7",
        "3478d919-c166-4208-b810-3196bfce182c-00813dda",
        "3478d919-c166-4208-b810-3196bfce182c-008140dd",
        "3478d919-c166-4208-b810-3196bfce182c-008143e0",
        "3478d919-c166-4208-b810-3196bfce182c-00814fec",
        "3478d919-c166-4208-b810-3196bfce182c-008152ef",
        "3478d919-c166-4208-b810-3196bfce182c-008155f2",
        "3478d919-c166-4208-b810-3196bfce182c-008161fe",
        "3478d919-c166-4208-b810-3196bfce182c-0081831f",
        "3478d919-c166-4208-b810-3196bfce182c-00818622",
        "3478d919-c166-4208-b810-3196bfce182c-00818c28",
        "3478d919-c166-4208-b810-3196bfce182c-00819e35",
        "3478d919-c166-4208-b810-3196bfce182c-0081a439",
        "3478d919-c166-4208-b810-3196bfce182c-0081a73c",
        "3478d919-c166-4208-b810-3196bfce182c-0081aa3f",
        "3478d919-c166-4208-b810-3196bfce182c-0081ad42",
        "3478d919-c166-4208-b810-3196bfce182c-0081b044",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081b34a",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081bc53",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081bf56",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081c259",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081c85f",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081e077",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081e37a",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081e67d",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081e980",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081ec83",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081ef86",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081f289",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0081f58c",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00820198",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0082049b",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0082079e",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00820aa1",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00820da4",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008210a7",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008216ad",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008219b0",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00821cb3",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00821fb6",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008222b9",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008225bc",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008228bf",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00822bc2",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008237ce",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00823ad1",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00823dd4",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008255ec",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008258ef",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00825bf2",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00825ef5",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008261f8",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008264fb",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-008267fe",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00826b01",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00826e04",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-00827107",
        "b1272854-a80f-4cc9-ba49-5c086119cea5-0082770c",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00828626",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00828c2c",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00828f2f",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00829232",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00829535",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00829838",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-00829b3b",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082aa4a",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082b050",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082b353",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082b656",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082b959",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082bc5c",
        "7ceb87ac-380a-40a1-97b5-a283ee0fa148-0082bf5f",
        "4e65cee5-463f-4f91-948b-c76efd88d04f-00879a68",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a13de",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a16e1",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a19e4",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a1ce6",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a1fe8",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a22ea",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a25ec",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a28ee",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a2bf0",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a2ef2",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a31f4",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a34f6",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a37f8",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a3afa",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a3dfc",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a40fe",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a4703",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a4a05",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a4d07",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a500a",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a5610",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a5913",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a5c16",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a5f19",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a6822",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a6b25",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a6e28",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a712b",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a742e",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a7a34",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a7d37",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a803a",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a833d",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a8640",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a8943",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a8c46",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a8f48",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a924a",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a954d",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a9850",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a9b53",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008a9e56",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008aa159",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008aa75f",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008aaa62",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008aad65",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008ab068",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008ab36b",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008ab66e",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008ab971",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008abc74",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008abf77",
        "959574d0-98df-4c14-9792-5fe1cea27a69-008ac27a",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b08df",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b11e8",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b14eb",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b17ee",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b1af0",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b1df3",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b20f6",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b23f9",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b26fc",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b29ff",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b3c0e",
        "5f1556e3-1261-4250-988d-c19d7c2da497-008b3f10",
        "5a11c04b-23f7-49b4-b88d-724af34952ff-008b45c4",
        "5a11c04b-23f7-49b4-b88d-724af34952ff-008b48d1",
        "7c389a26-8527-42a4-8299-1d8c7364cdbc-008b56de",
        "7c389a26-8527-42a4-8299-1d8c7364cdbc-008b59ee",
        "7c389a26-8527-42a4-8299-1d8c7364cdbc-008b5cf3",
        "0592451d-ed3c-427f-b79b-ef03e550d65b-008b7fd7",
        "0592451d-ed3c-427f-b79b-ef03e550d65b-008b82d9",
        "7aca94dd-c7e7-4c93-aa5e-ca9cd5cf3b11-009b5b13",
        "7aca94dd-c7e7-4c93-aa5e-ca9cd5cf3b11-009b5e1d",
        "0296d39c-5960-451d-a54c-9f4f89f5d6a5-009dad56",
        "0296d39c-5960-451d-a54c-9f4f89f5d6a5-009db058",
        "0296d39c-5960-451d-a54c-9f4f89f5d6a5-009db35a",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009db668",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009dc272",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009dc57d",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009dc87f",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009dcb81",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009dce83",
        "16de4120-2bbb-41f7-8903-3ff4bb510bee-009dd185",
        "fb72068b-ee73-4c85-9504-328463c444b7-009dd504",
        "fb72068b-ee73-4c85-9504-328463c444b7-009ddb09",
        "fb72068b-ee73-4c85-9504-328463c444b7-009dde0c",
        "fb72068b-ee73-4c85-9504-328463c444b7-009de10f",
        "38c615a3-9675-4bd7-8388-bd7a78e95acd-009deb5e",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e68da",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e6bdd",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e6ee0",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e74e6",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e77e9",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e7aec",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e7def",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e80f2",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e83f5",
        "ca1d0fa7-d6e9-4bc3-931b-e239c07c8909-009e86f8",
        "20c31112-f666-4c90-9835-ddb71f020545-009e9222",
        "20c31112-f666-4c90-9835-ddb71f020545-009e9b2b",
        "e5b8957e-9ddb-4ed1-9232-e5a7b2411edc-009ea080",
        "d50c00b5-79a3-44ce-9426-991dd3dd0e19-009ea43a",
        "d50c00b5-79a3-44ce-9426-991dd3dd0e19-009ea73d",
        "d50c00b5-79a3-44ce-9426-991dd3dd0e19-009eb043",
        "d50c00b5-79a3-44ce-9426-991dd3dd0e19-009eb345",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009eb858",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009ebe5e",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009ec464",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009ec767",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009ecd6d",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009edc7c",
        "385ccfdf-74b8-40db-ae60-0f7271c9f83f-009edf7f",
        "edad5aa0-af56-451f-a28e-a708532f101b-009ee3d3",
        "5c99f08b-6ebf-48ca-978b-414a92f228d2-009f41fc",
        "5c99f08b-6ebf-48ca-978b-414a92f228d2-009f44ff",
        "b0fbeef3-4889-483c-9168-627589b39902-009f5043",
        "b0fbeef3-4889-483c-9168-627589b39902-009f5346",
        "b0fbeef3-4889-483c-9168-627589b39902-009f5648",
        "b0fbeef3-4889-483c-9168-627589b39902-009f594a",
        "b0fbeef3-4889-483c-9168-627589b39902-009f5c4c",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1d105",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1d408",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1d70b",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1da0e",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1dd11",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1e014",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1e317",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1e61a",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1e940",
        "4f8c5658-4537-4ef0-afd4-d53d41f39a43-00a1ef46",
        "ee7572fa-6f25-4207-9204-9cc9d6d57249-00a1f5b3",
        "87c0b7ce-6289-4d6e-b9f7-7ceae4103790-00a8dc18",
        "1215fc56-e507-43da-a418-24bde9e94015-00b21b7b",
        "bee44bb9-5242-4093-8e43-0e26aefd9106-00c4220f",
        "07476ffa-1b83-48a6-8752-6eab2e633a06-00c43d76",
        "07476ffa-1b83-48a6-8752-6eab2e633a06-00c44514",
        "07476ffa-1b83-48a6-8752-6eab2e633a06-00c448aa",
        "07476ffa-1b83-48a6-8752-6eab2e633a06-00c44c0f",
        "07476ffa-1b83-48a6-8752-6eab2e633a06-00c44fa5",
        "0c6c6145-211e-4294-b190-a11a0e4810dd-00c46c90",
        "0c6c6145-211e-4294-b190-a11a0e4810dd-00c484ca",
        "0c6c6145-211e-4294-b190-a11a0e4810dd-00c492f3",
        "ca61a392-3d66-4cd4-8f4d-fa7fbb2f8337-00c4a52d",
        "ca61a392-3d66-4cd4-8f4d-fa7fbb2f8337-00c4b37e",
        "ca61a392-3d66-4cd4-8f4d-fa7fbb2f8337-00c4cb14",
        "ca61a392-3d66-4cd4-8f4d-fa7fbb2f8337-00c4ceb5",
        "ca61a392-3d66-4cd4-8f4d-fa7fbb2f8337-00c4d215",
        "ca61a392-3d66-4cd4-8f4d-fa7fbb2f8337-00c4d567",
        "fefb98ed-103b-4a53-9ab3-7303b9c60a9a-00c4e384",
        "fefb98ed-103b-4a53-9ab3-7303b9c60a9a-00c4e759",
        "fefb98ed-103b-4a53-9ab3-7303b9c60a9a-00c4eaac",
        "fefb98ed-103b-4a53-9ab3-7303b9c60a9a-00c4f20b",
        "fefb98ed-103b-4a53-9ab3-7303b9c60a9a-00c4fc41",
        "4b5823ee-993f-44a5-9a3a-7bd3feba18f5-00c526b6",
        "56a2ba2d-4516-498c-b8ac-309052c62c46-00c573be",
        "56a2ba2d-4516-498c-b8ac-309052c62c46-00c57a4c",
        "56a2ba2d-4516-498c-b8ac-309052c62c46-00c57d91",
        "56a2ba2d-4516-498c-b8ac-309052c62c46-00c5986d",
        "bd53dc97-1ffd-4f53-903c-f9e208dc889e-00c59c67",
        "bd53dc97-1ffd-4f53-903c-f9e208dc889e-00c59fca",
        "e08156b1-87c8-43be-a58d-45d04fa1bc1e-00c5b097",
        "e08156b1-87c8-43be-a58d-45d04fa1bc1e-00c5dc5f",
        "e08156b1-87c8-43be-a58d-45d04fa1bc1e-00c5dfba",
        "e08156b1-87c8-43be-a58d-45d04fa1bc1e-00c5e307",
        "77784744-cc62-4bb4-9813-96d61c5974e0-00c7ba01",
        "77784744-cc62-4bb4-9813-96d61c5974e0-00c7c0eb",
        "77784744-cc62-4bb4-9813-96d61c5974e0-00c7c7a6",
        "77784744-cc62-4bb4-9813-96d61c5974e0-00c7cb27",
        "77784744-cc62-4bb4-9813-96d61c5974e0-00c7d578",
        "77784744-cc62-4bb4-9813-96d61c5974e0-00c7dc33",
        "b8fcf19e-d0a2-4d0c-8066-4d7b5f7f7de0-00ca04f4",
        "810bd38a-fe02-44f0-9f40-16597b79786d-00ca4ce7",
        "810bd38a-fe02-44f0-9f40-16597b79786d-00ca5030",
        "810bd38a-fe02-44f0-9f40-16597b79786d-00ca52e6",
        "238db8fe-f35c-44d3-9a25-dacce70f7d2e-00ca5a98",
        "238db8fe-f35c-44d3-9a25-dacce70f7d2e-00ca5b64",
        "17107a03-68ca-4c16-b568-06376a22f114-00ca5d59",
        "17107a03-68ca-4c16-b568-06376a22f114-00ca5db1",
        "17107a03-68ca-4c16-b568-06376a22f114-00ca5f27",
        "17107a03-68ca-4c16-b568-06376a22f114-00ca5f9d"
      ],
      "Id": "930ea120b6e24d899bfc91ae663cec2b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c409c7f1da034aa4a804d894fe3b211f",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.Elements.GetParameterValueByNameTypeOrInstance@Revit.Elements.Element,string",
      "Id": "dd48e3e0198442f69f7fc9652430b903",
      "Inputs": [
        {
          "Id": "27525c57d3494432b0045a5ab4f428b1",
          "Name": "element",
          "Description": "The element to get parameter from.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5728edab7c7e440fafc26725d91f5ea7",
          "Name": "parameterName",
          "Description": "The parameter name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83d5bc5f632e46099dd1d6bd795fa50b",
          "Name": "value",
          "Description": "The parameter value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will get the parameter as instance or type.\n\nElements.GetParameterValueByNameTypeOrInstance (element: Element, parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"B6_1D_Element_Category\";",
      "Id": "f7634d6a78d4462986aca202221b56ae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cdba790423c0455cb2e9d957b6e77df5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "01d439e00adc4d94ae23b026f30926f2",
      "Inputs": [
        {
          "Id": "3a1cba5cced0494087026e2211ab4cef",
          "Name": "str",
          "Description": "String to search in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6dcebbc672da47dcaa3c2822d0282c81",
          "Name": "searchFor",
          "Description": "Substring to search for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bc2db5443584432a6babe6046ea08d7",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f0fda2b4aff46c9a89ca383f7f03130",
          "Name": "bool",
          "Description": "Whether the string contains the substring.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"rib\";\ntrue;",
      "Id": "2afe3a86a4824782b52315f429006743",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ffefe77589884980baedaee596a02504",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15d0300683854ff886f9d9a35a0bbb0c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "43098590f51c4abf8741108989992fd0",
      "Inputs": [
        {
          "Id": "0f55bfce5f794f88b5274b162295c7db",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a501d39eed54ea1bd6124dea274ce6f",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "204e6002153c4976a3a05a25ded30a88",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "466f52e9793b41f6bd994dcfd417cfa6",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "!=@var[]..[],var[]..[]",
      "Id": "621e7d3242db4fdf96dcc55381ea596d",
      "Inputs": [
        {
          "Id": "57ad789034d6463aabb96ab38c087aa5",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00973723d24e4ac391467c019917936c",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a445d8a4a7cb474a9cc2a44532e250fc",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "x doesn't equal y.\n\n!= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "d9b4e7db5b464047a491fcee2ba00291",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dbefe69679be4c8f9a90eb444bc8af18",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "3c9d2b5d7874429c812b8e45ee26ffc5",
      "Inputs": [
        {
          "Id": "ea4c39dcd07d4a4584efc46f8209208b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2ae948d710b40a69b6af0ce0c6483bb",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c942ed6833064203877c63d976d72416",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcb9f20161bd4914a6d6f8fa2d7f0b06",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "c6a094d7316742489833e047051f84e2",
      "Inputs": [
        {
          "Id": "106bc0426beb4f909c31b59b9c38a3c2",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3702a6a61784b6a9a891c67e21600e5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "bd5a5e7d20014eb08271a221870ca83c",
      "Inputs": [
        {
          "Id": "ffa64b4311344862aa5bbd647991ac68",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d68c199eae94e4e88333a62a14a171b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Element.IntersectsElement@Revit.Elements.Element[],Revit.Elements.Element[]",
      "Id": "003ac9f4a4764af2be7c15581b66c965",
      "Inputs": [
        {
          "Id": "4e04815a67504c8b93bc38a045f5b34e",
          "Name": "elementSetA",
          "Description": "Input a list of Revit elements to perform the interference check.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b4b8b6441a84600be3ab00255e3f15b",
          "Name": "elementSetB",
          "Description": "Input a list of Revit elements to test for interference against elementSetA.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5e9691c8ed24d9a9cb27754a4aea175",
          "Name": "Element[][]",
          "Description": "Element[][]\r\rEach sublist store elements from elementSetB that clash with elementSetA",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "666ae443c5294ee8989be430db45e586",
          "Name": "intersectsWith[]",
          "Description": "Element[]\r\rMap the indices from this list to the corresponding indices in the Element[][] output to group the clashing elements.\r\rVisit bimorph.com/bimorph-nodes for support",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds intersections (clash detection) between two sets of elements. Elements in set B that intersect set A are ouput into sublists (the clash result). Self-intersection is automatically prevented if an element is found in both lists.\r\rThe node is optimsed to output rapid results up to 99.5% faster than any other intersection technique.\r\rUse IsElementSupported to check that elements are supported by the node.\r\rVisit bimorph.com/bimorph-nodes for support\n\nElement.IntersectsElement (elementSetA: Element[], elementSetB: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "4c825db1ea4548d49760b80449093bd0",
      "Inputs": [
        {
          "Id": "f53f6bc81513480195948978ab19a4df",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5d99b9614e94b4ca4c176086ecd3f34",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[1];",
      "Id": "74afc9dd1e7e46378855afcb1475e944",
      "Inputs": [
        {
          "Id": "09a36895be7542be96880d5ab2d64626",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a8ba8b5ecfb4d9ea1df9b83d8a2a454",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nwalls=IN[0]\r\nribs=IN[1]\r\nribsf=[]\r\nwallsf=[]\r\nfor ind, i in enumerate(walls):\r\n\tif i!=[] and i!=\"\" and i!=None:\r\n\t\twallsf.append(i)\r\n\t\tribsf.append(ribs[ind])\r\n\r\nOUT=wallsf, ribsf",
      "VariableInputPorts": true,
      "Id": "c7fe24593e754f3eb6969be07cac91e2",
      "Inputs": [
        {
          "Id": "ec9bd7481f2d4605afaa16e94eea8a15",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "355d1850a67e4602be4b3b46fd47ee51",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5215e35d8da443b98342995ada615e73",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nwalls=IN[0]\r\nribs=IN[1]\r\n\r\nfaces=[]\r\nribsf=[]\r\nindexw=[]\r\nindexr=[]\r\nfor ind, i in enumerate(ribs):\r\n\tsubw=[]\r\n\tsubr=[]\r\n\tsubiw=[]\r\n\tsubri=[]\r\n\tif i!=None and i!=[] and i!='':\r\n\t\tface=walls[ind]\r\n\t\tif face!=None and face!=[] and face!=\"\":\t\t\r\n\t\t\tfor ind1, j in enumerate(face):\r\n\t\t\t\tif j!=None and j!=[]:\r\n\t\t\t\t\tboo=i.DoesIntersect(j)\r\n\t\t\t\t\tif boo==True:\r\n\t\t\t\t\t\tsubw.append(j)\r\n\t\t\t\t\t\tsubiw.append(ind1)\r\n\t\t\tribsf.append(i)\r\n\t\t\tindexr.append(ind)\t\t\t\r\n\t\t\tfaces.append(subw)\r\n\t\t\tindexw.append(subiw)\r\n\r\nOUT= indexr, ribsf, indexw, faces\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "ce510e46045a41d1bfdfae1eee258fcd",
      "Inputs": [
        {
          "Id": "5f43204c33824920be4385fd3a848969",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47450027ead946a8aa2e5af5ffd53c1e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee77a1a905da469fb68fa869f60f5085",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "4d19d86b33ca4b3f90c04f59772575dc",
      "Inputs": [
        {
          "Id": "b6f3f7cc30b0403091849c8a481ed070",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e33519e3d6364e5c88b10ec00195c624",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[1];",
      "Id": "a5db88132bc74ac29a9e5a3eff39729a",
      "Inputs": [
        {
          "Id": "fd36b5d4d7a24e0392dfff2fa9a26b66",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2bc26796cc924ef686cf38172bd71776",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[2];",
      "Id": "fcc354a4de064f1a8155002d0a2233ab",
      "Inputs": [
        {
          "Id": "d9db579991c64ea6bde5e1184463ac77",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47700eb36f4d460abf2039f03a1a24ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[3];",
      "Id": "b8a4ac26a01a46328d8442d523851850",
      "Inputs": [
        {
          "Id": "87f943eb24d440fda96080ea8456116a",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "660f33f3d8df46e48d6b930db9109f67",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nribs=IN[0]\r\nsurface=IN[1]\r\nsurfaces=[]\r\nfor ind, i in enumerate(ribs):\r\n\tsurf=surface[ind]\r\n\tsub=[]\r\n\tif surf!=[] and surf!=None and surf!='':\r\n\t\ttry:\r\n\t\t\tfor j in surf:\r\n\t\t\t\tx=Geometry.Intersect(i,j)\r\n\t\t\t\tsub.append(x)\r\n\t\t\tsurfaces.append(sub)\r\n\t\texcept:\r\n\t\t\tsurfaces.append([])\r\nOUT=surfaces\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "44b041d3c2994b82a5278d3409cbb76a",
      "Inputs": [
        {
          "Id": "82c408fdd1ab40c180114f1f63ca25db",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2119669bb5704ee083741e7b3baeaca9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc087f96ebec4eb5bab80cf5418e8d3b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Solids",
      "Id": "746d59de82844ab684835e97b0e6fd6f",
      "Inputs": [
        {
          "Id": "a7e4504f47cb4c14a5c68c91718b67ec",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e27c40a7e7d4bad93ac88f25d2afdc3",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Solids",
      "Id": "80304841cf274a1f964f1313758a148b",
      "Inputs": [
        {
          "Id": "13736001eb994b0bb9f0a50bc65d3728",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6513c000abed4a40824c90e0fa6a07f5",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c04289896fbd4ad3bb295c5708c3158b",
      "Inputs": [
        {
          "Id": "1b11834bb10343018e2b1c7ac5ce177c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cd548d335db4a65a0ba3853fadd1a95",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ff9dd186b934622a60bbc6525febf58",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ngeom=IN[0]\r\nfrom functools import reduce\r\n\r\nfinal=[]\r\nfor i in geom:\r\n\tif i!=None and i!=[]:\r\n\t\tx=reduce(lambda x,y:x+y,i)\r\n\t\tfinal.append(x)\r\n\telse:\r\n\t\tfinal.append([])\r\nOUT=final\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "df22f8fd412a400c96c8fe1a2b8c166f",
      "Inputs": [
        {
          "Id": "efe9b1c69ab3400f9a45c484a9e6f721",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6c316f795ad43429bf2a9cd8ef727aa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nwalls=IN[0]\r\nfinal=[]\r\nfor i in walls:\r\n\tsub=[]\r\n\tif i!=None and i!=[]:\r\n\t\tfor j in i:\r\n\t\t\tif j!=[] and j!=None:\r\n\t\t\t\tsub.append(j)\r\n\t\tfinal.append(sub)\r\nOUT= final\t\t\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "13b64284a15c4ba2822df98d2c1bb01b",
      "Inputs": [
        {
          "Id": "8affe68a9c6a47b1a71c3d820ff7c448",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb9f1e1031b444988e7cebd31d5f9b4d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "bd5f159ccf014baf8f12ebc208dd3c82",
      "Inputs": [
        {
          "Id": "81393bec8c33434aabd84c803f9539cf",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ab36fb0042646eea4ebe0d52763c626",
          "Name": "name",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets an element's name. Unlike the OOTB node, this node should work for all Revit elements that have names and will also return the localized names of system parameters, parameter groups, display unit types, parameter types, unit symbol types and unit types."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ecae02913bc2418091d26a7a38f1f999",
      "Inputs": [
        {
          "Id": "ec5b396e5fc14ff1acdc04d326c90dac",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "979eaaf7efc74cfda448ad4a72a12fa6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1b6be2ea4644af9b789ac17c4d823b2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 256,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "bc8581ec3f9c46c1a33468f0e547d4a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "01d8c74a007d4e9e98d93098dc11062a",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "562d4e1d23054a3183847c83408bcee4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "047b9da17b7040eba3c42fa06329ed22",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecdb3729-0de2-4c50-bdca-28fe881027a2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "02d354c120d9410bbd5c04ad81fc3236",
      "Inputs": [
        {
          "Id": "b5e31a1f92fe437696626c578a192471",
          "Name": "geometry",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d532d77c8ddf450dbf64ea3db0895aa0",
          "Name": "familyTemplatePath",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f44986cc752b4e9290830f5252b76af0",
          "Name": "familyName",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0e232c409e447a1b5e29df963fe175b",
          "Name": "category",
          "Description": "var[]\nDefault value : Revit.Elements.Category.ByName(\"OST_GenericModel\")",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c29fe9e50f24f88a0157858e0743764",
          "Name": "materialName",
          "Description": "var[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1021e4ca76c145d68d05a76e132750af",
          "Name": "isVoid",
          "Description": "var[]\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fec93dc6aa84b40931bd674680942d1",
          "Name": "subcategoryName",
          "Description": "var[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7763b4aeac3403faf516caecb33718e",
          "Name": "instance",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21df1b7fc22f4ed2bee6706c29cf18f7",
          "Name": "family",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "You must provide a valid family template path that will be used for all input geometry objects. The project units(and not the templates) will be used to determine the size of the output geometry.\r\nThe provided category will be used only if the family template supports it. If not, the default template category will be used instead.\r\nLikewise, the family material(provided as a string) will be set only if a material with that name exists in the template. If not, the default material will be used instead (\"By Category\").\r\nFor void cuts, the material settings will be ignored.\r\nThe Subcategory name is an optional input. If you'd like to skip assigning a Subcategory to any new instance, simply use null.\r\nThe node expects a unique family name for each geometry object. The rest of the input lists will be processed as if the node lacing is set to longest."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\ProgramData\\Autodesk\\RVT 2021\\Family Templates\\English\\Metric Generic Model.rft",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\ProgramData\\Autodesk\\RVT 2021\\Family Templates\\English\\Metric Generic Model.rft",
      "NodeType": "ExtensionNode",
      "Id": "3499da9d6efe4c38b9d469832fa07a26",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2a1d67aaab04cfca1059fb32e5f8eb2",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nsol=IN[0]\r\n\r\nl=len(sol)\r\n\r\nnames=[]\r\nfor i in sol:\r\n\tname=i+\"_new\"\r\n\tif name not in names:\r\n\t\tnames.append(name)\r\n\telse:\r\n\t\tnames.append(name+'1')\r\n# Assign your output to the OUT variable.\r\nOUT = names",
      "VariableInputPorts": true,
      "Id": "7b3f3436a3904b9aa9b9af908ce44a42",
      "Inputs": [
        {
          "Id": "a2637f02de234ebdb86c53ed6a8a2105",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59ff617b2aa84309b5b4927a3ebc79c6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3ba5836-4456-4ae9-a346-781cacf6ef07",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "cc8bc712d24344ee809f515f45b0e910",
      "Inputs": [
        {
          "Id": "17b8eadbb45c4ba4b8a9b70ab14eabfb",
          "Name": "ElemsOrIDs",
          "Description": "Elements or IDs\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e889950df614353b6002996124509b0",
          "Name": "Elems",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select elements in Revit by Element or ID"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "ff3ec7bfc3ce4a0980528663de7daa4e",
      "Inputs": [
        {
          "Id": "d6615778d1f740248bbb85b6dc59f7c2",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "026970e0ee14419fb1a667dbdb289315",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f25c94b295dd4b75ae855c92534ff542",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c878887847b44df4b13521b014b4d542",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23da9644958740e7bd4fc7b032945826",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 256,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "bd3013e9681c4a30956940de38536f93",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bc2c6991cddf4320806d49142d716eb1",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Orchid.E.RevitMaterial.Material, OrchidRE",
      "SelectedIndex": 39,
      "SelectedString": "Concrete, Cast In Situ",
      "NodeType": "ExtensionNode",
      "Id": "23210eec9c2b4a1184e4c870f8c460d6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "839334e6616e441da749183ed8901148",
          "Name": "Material",
          "Description": "The selected Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Dropdown for materials"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3ba5836-4456-4ae9-a346-781cacf6ef07",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "78574696d03a46dc9641acda83f61b29",
      "Inputs": [
        {
          "Id": "65f5550efcad42249ce6b7003aed8371",
          "Name": "ElemsOrIDs",
          "Description": "Elements or IDs\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e1931784ba04817be0845549554d17c",
          "Name": "Elems",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select elements in Revit by Element or ID"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Centroid",
      "Id": "97f60bf3f3cf4233831ad25c56cfb16e",
      "Inputs": [
        {
          "Id": "62b4aae7f4264902bfcc50778a649dd5",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d185c02df4b446ca1c88b12ae7fa457",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The centroid of the Solid\n\nSolid.Centroid ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Faces",
      "Id": "fb6d85dd82614afdb032158645404282",
      "Inputs": [
        {
          "Id": "632db8747e564d5a8cd8652971f1bb81",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2501cf634a34addb6ad6beb8632b8b5",
          "Name": "Surface[]",
          "Description": "Surface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces in this Element\n\nElement.Faces: Surface[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "cf951ae7d1c54063a37f831aa68bf5df",
      "Inputs": [
        {
          "Id": "1cb369a615724106a19a1ce4d6300174",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "717c61cefd1e45838438273621d17ffe",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\narea=IN[0]\r\nsurface=IN[1]\r\nfinal=[]\r\nfor ind, i in enumerate(area):\r\n\tsurf=surface[ind]\r\n\tx=max(i)\r\n\tind1=i.index(x)\r\n\tfinal.append(surf[ind1])\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "9b0e73b3ebc146a2a539bbda751bf480",
      "Inputs": [
        {
          "Id": "8a2e4b04aef04e8386606686a5131fa8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d5b7842bc4f425ca211c12442abeafd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43519ec3b4c041f7bcfc2ea42acddf9c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "fba9d8e4-0358-49e1-b306-da38076bf26d",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "00f306674ca24d5fae6c22ccefe85453",
      "Inputs": [
        {
          "Id": "9b5d8381acf94845adbbb551cf1de666",
          "Name": "InputSurfaces",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a8158f275d240259b105e46bcd1ae32",
          "Name": "Planes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "(Sastrugi_Geometry) This node will extract a plane that best fits a surface."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "fca5d08bb9dd41f7bbde4e21fc542d0e",
      "Inputs": [
        {
          "Id": "7313ef515e1a46ffb4a3b95a1b1ae599",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d747174aa8942778bdaefd574181d0a",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8601891e33604f4fbdeca530c742627b",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dbe54bf3d0941189bccf5c9bc65c274",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47dc907f8aae4cb5b6e88ee12de8f08b",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "1e4326ce8a8849928f82d91288acea19",
      "Inputs": [
        {
          "Id": "d111c370f77440168ad59902c7b9dc1d",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45d3fcc56053478fac0a11c88979349d",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "82423bcc25c84ed1a6e0bd10fdd759a6",
      "Inputs": [
        {
          "Id": "634cf8082c0b4f559005c4e5f414fe61",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2bdf24bdd5a40808ad2381130a17581",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "dfb21117fde4494cac85bfe1237007a1",
      "Inputs": [
        {
          "Id": "db4be74e20d344489eec84501e7ff79d",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "878757317b7f4c3cb3a9e78f3ea35825",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength@Autodesk.DesignScript.Geometry.Plane,double,double",
      "Id": "8070c7d972674be5b51275c95f344fab",
      "Inputs": [
        {
          "Id": "06ef61747886496eadd59ae7600214c6",
          "Name": "plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e90763425ae4c8e8ed46b0a870abe9f",
          "Name": "width",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64b97c9e2fab45268cbc621fef473365",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e24799d9e4af44ec95a16fb7eb622a72",
          "Name": "Rectangle",
          "Description": "Rectangle",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Rectangle centered at input Plane root, with input width (Plane X axis length), and length (Plane Y axis length).\n\nRectangle.ByWidthLength (plane: Plane, width: double = 1, length: double = 1): Rectangle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "7bf7e6768b6b4afe95f37d1dda88c517",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ac5a6e0369449c5b40f899ff3d180a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Origin",
      "Id": "1f8f705d42a4452795cfa5eb19f779ec",
      "Inputs": [
        {
          "Id": "3355c3637472453fb6ba541c37b04bfa",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2ed2f2d5e79432794c5d380e4092f1d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the origin of the Plane.\n\nPlane.Origin: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "842838c55bae424fa17f5ba1346cc291",
      "Inputs": [
        {
          "Id": "03278557167644dc9d4f58a736c5240f",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "391df0aa652f409abfc9f080f4e9e860",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "a723a50b1c0249029f5e2412c16e479f",
      "Inputs": [
        {
          "Id": "daf94ee655754aaebcea9f7b1461747a",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05757d29ffbc437e9ff7f51578579602",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "5264ef61a1fb4cf4996d06957948d320",
      "Inputs": [
        {
          "Id": "38d6d910974f48098f3ef8ee26f3c340",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00a1fbcc36c3445da802ec4daa22ca14",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.XAxis",
      "Id": "c28dca244b8f471aac79904e6990fca4",
      "Inputs": [
        {
          "Id": "0230490f86c34238a646c923b60c2226",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b73abcdc41634ddd9fb489409c99d993",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The X basis of the Plane\n\nPlane.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Rotate@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "d83a517972084dc2b8e08c4388626702",
      "Inputs": [
        {
          "Id": "3ae2fdb7a32e4b8a9cb0d8647a5802fc",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00b60171d275440bb917f94343294cc0",
          "Name": "origin",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8283ec2959734aaf865fa95216fa5582",
          "Name": "axis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06c3e90b766e439a86e9ac198b388d35",
          "Name": "degrees",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4265b1e44424df6bfd1cb2a6880d6d6",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rotates an object around an origin and an axis by a specified degree\n\nGeometry.Rotate (origin: Point, axis: Vector, degrees: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Normal",
      "Id": "844d8f591ec24cda891b35839766b4f9",
      "Inputs": [
        {
          "Id": "993656016bd94edfb7c7f12490df5477",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5379212fbf924adaa5447247b2db3ab6",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the normal direction of the Plane.\n\nPlane.Normal: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-a;",
      "Id": "fdf512819be94d59ba2b0a52b6ecf4a0",
      "Inputs": [
        {
          "Id": "1a64f856dc44494db8933582b437f05f",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78f1645606c441e78de8fb5dd35e16ad",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "b31d0637642147c98f38849b2b127c43",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7de516625d8940e186f2c1f7d8188b06",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "9bd7f8d0b682401a86317bbd96bd2683",
      "Inputs": [
        {
          "Id": "04d5d3484a144798888401ee0a3132ab",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a385ec4edfc5408f9bf99b64166ff47c",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40c64f5632644157ad8d56dfc1aab980",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a25fcdf730054464b6bc13a747ddd997",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "50;",
      "Id": "b782d256d52a44d684a1cdf7d6bee848",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34c7054cf0014d1f8f2a6cf441b8a3dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.YAxis",
      "Id": "2df62c4526664c1c80a08193a5753be4",
      "Inputs": [
        {
          "Id": "e34f0596c63f4c1d80b5c8cc855c44e3",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2eb2d3d1c34464ca223e0dbb868780e",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Y basis of the Plane\n\nPlane.YAxis: Vector"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nribs=IN[0]\r\nsolids=IN[1]\r\nfinal=[]\r\nfor ind, i in enumerate(solids):\r\n\trib=ribs[ind]\r\n\ttry:\r\n\t\tr1=Solid.Difference(rib,i[0])\r\n\t\tfinal.append(r1)\r\n\texcept:\r\n\t\tfinal.append([])\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "35bb8393fab44866bd64baf8c806ee7b",
      "Inputs": [
        {
          "Id": "2b003a06f79d42f4a437e20bc0151678",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1b4c801b14a411a978fdde806592cbe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a9b19bbeaf44156b89e67a4a452aec8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "e06f430af08447e8b5537bbe04adfe9d",
      "Inputs": [
        {
          "Id": "cfe4d2ef15f644d48dbfe5d906cbea38",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f81970e7b5ae46818e328afe3d5f1d74",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a028556007e406ebc439c096a04b836",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3893f85afd5c41108d91bfdbd106b123",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the angle between the two Vectors, in the range [0, 360] degrees. It uses axis of rotation to determine the direction of the angle.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "e4e7961854bf483884fd7b69f4cb7626",
      "Inputs": [
        {
          "Id": "5558b985422a4d91909b766c0327193e",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f755c300b36422aaccb565dfe76d07d",
          "Name": "direction",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cbf76f707054726bad27e2822742d8c",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e5f3a93fe094c48a0468871e5a89df6",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "8d63ef677fd74d748f1dc704bd5d0ade",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b36695485fa43f1b6db3fdff91a9210",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Origin",
      "Id": "cb6be7a1fa14452aade30829c733add7",
      "Inputs": [
        {
          "Id": "ccfc8e5ba11a40e6b8c76600848b7760",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb78b84a1b82413691990f405ff47957",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the origin of the Plane.\n\nPlane.Origin: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "c0ba69ef20b140219b135406fe20e688",
      "Inputs": [
        {
          "Id": "bf2b6cb844d2466b95bc4f4414683581",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f3e97af5df34ef6ac834a1ed9b8ec39",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8403a83f29114aafb6f91e57d31c15d9",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ec0dc1f529b4053bb5f1f74e6167b0f",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "50;",
      "Id": "5be8a2415c084a3b901b74938d601dce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b98a4789cb1d4f9fa01f23bf7f9d1a1e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nribs=IN[0]\r\nsolids=IN[1]\r\nfinal=[]\r\nfor ind, i in enumerate(solids):\r\n\trib=ribs[ind]\r\n\ttry:\r\n\t\tr1=Solid.Difference(rib,i[0])\r\n\t\tfinal.append(r1)\r\n\texcept:\r\n\t\tfinal.append([])\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "9fe1e541736f427280e469c99a3d2f2c",
      "Inputs": [
        {
          "Id": "e1fded2a26aa408c8e718986e46b79b7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0eeb21ad29e458cbd9b8f2e7340ad84",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fc778c913714fe19df8fea6ba1affce",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.YAxis",
      "Id": "a07a511bea3d44c7b58da6f69a1f32f5",
      "Inputs": [
        {
          "Id": "bba8e97716b148768fb16e42360eadaa",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ea5a4e98b254e49aadc4105436a1f08",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Y basis of the Plane\n\nPlane.YAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "8279bab69db046beaf9f32bac856db29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5f7e355bf1b40e799e8d1f8b4a39a5d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "a623484e12a94d35900d5e37ee891773",
      "Inputs": [
        {
          "Id": "c158972f93084c0db7707c4fe4dfbca6",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1c5141d2dcf45f789e9356175ae6cdc",
          "Name": "direction",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86a2c577132f41229bf7fd1cd4b2e5a0",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4934694ad32464bb5f201eb4e9ce0b5",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Origin",
      "Id": "ecc4480a30384019936764c2ee8a801f",
      "Inputs": [
        {
          "Id": "04852d2022124983a17347b9968c69a0",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05036f4a4e424bc68f1e9a432038f286",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the origin of the Plane.\n\nPlane.Origin: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "7dccf1e9ab534abaa383542f01b45497",
      "Inputs": [
        {
          "Id": "5b15ff3181be4b37a27d669e09855d89",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8525a73e54d346be85fa2cc1de4b3b5f",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nribs=IN[0]\r\nsolids=IN[1]\r\nfinal=[]\r\nfor ind, i in enumerate(solids):\r\n\trib=ribs[ind]\r\n\ttry:\r\n\t\tr1=Solid.Difference(rib,i)\r\n\t\tfinal.append(r1)\r\n\texcept:\r\n\t\tfinal.append([])\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "9b58e7d3d64f4a53a048d5995bcdcdab",
      "Inputs": [
        {
          "Id": "97c48b3bccc3496f861bc8eeafa4a2a4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e51a51a7f7a447e19ca34b6081c41e0c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "848db699a6944cd0acd7d242b735c751",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Volume",
      "Id": "15189bdc845a4ecbb8d6a5b2d9104635",
      "Inputs": [
        {
          "Id": "1754c1938214497299b825d257b474cc",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7a4a7dc267d4eb18bf368f449eb645c",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total volume of the Solid\n\nSolid.Volume: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Volume",
      "Id": "da6c3e7185314cc685ab842da3488494",
      "Inputs": [
        {
          "Id": "93ece62e866c4f849a1db627b68baa57",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e832b5219c7743519e25328e820ad76e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total volume of the Solid\n\nSolid.Volume: double"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nsol1=IN[0]\r\nvol1=IN[1]\r\nsol2=IN[2]\r\nvol2=IN[3]\r\nsol=[]\r\nfor ind, i in enumerate(sol1):\r\n\tvol1s=vol1[ind]\r\n\tsol2s=sol2[ind]\r\n\tvol2s=vol2[ind]\r\n\tif i!=[] and i!=None and sol2s!=[] and sol2s!=None:\r\n\t\tif vol1s<vol2s:\r\n\t\t\tsol.append(sol2s)\r\n\t\telse:\r\n\t\t\tsol.append(i)\r\n\telse:\r\n\t\tsol.append([])\r\nOUT=sol",
      "VariableInputPorts": true,
      "Id": "57fa0daed35e4c57bd470253222cf58f",
      "Inputs": [
        {
          "Id": "5791cd1bf8ba46f792abb9b3cc117721",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "065469b91a464619b85d6fc9cf1b2e16",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14fe96c10fdd4566af5d05e3ebf50ef2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80e771b9e9da47d6bf19a2bbf01684cd",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc7f28b49e7740f9806eb592cebef150",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Orchid.E.RevitMaterial.Material, OrchidRE",
      "SelectedIndex": 39,
      "SelectedString": "Concrete, Cast In Situ",
      "NodeType": "ExtensionNode",
      "Id": "73b572cb398146cbb9fcd6c9c2779472",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ea06f282229482fad11dd8361371e19",
          "Name": "Material",
          "Description": "The selected Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Dropdown for materials"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Id": "e3e37df2e9794e19b46d3c1850a02606",
      "Inputs": [
        {
          "Id": "fa3f5c2701e54d7eb94a14d8c354163e",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2ebd0c0e33d491390ff885168f1f4ba",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "a2d2f1b8bafd400a89994a33245fa0d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "938de1d5487f4dba9d0f236298def227",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "ec0062e36b914eeaac810be02a72e79f",
      "Inputs": [
        {
          "Id": "5610bd159d154c78a563708927cf12de",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86d8c3d8d3814980b6221d7ed623c759",
          "Name": "direction",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acd22d81718e4e68a072357d80b73bf6",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cf94a7e91b6460080be893c0c7e94b2",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Origin",
      "Id": "d11a7038afdb4630b31534be3fa59481",
      "Inputs": [
        {
          "Id": "9498a0ef11624ce78ee8f011e87fedc9",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "653866b5323342c9836eec25bdb7126f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the origin of the Plane.\n\nPlane.Origin: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "a3b7f92890354464b87f577209f846a4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27614492d26e4f2cac9eb714a350d127",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "32a6d9a910664074912aab5f8ed857ca",
      "Inputs": [
        {
          "Id": "365bd183d75d404094c609f50be6f72e",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52a513c4a9b94a5fbce6906e7530d65c",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "6f4a0df2a9c74aac93eab9654d81b396",
      "Inputs": [
        {
          "Id": "215492d2826148f492ab1db6e999ff48",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32a23cbfabff4330a7ebb0ffa04fd871",
          "Name": "direction",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a39503949eef45a5ab60dae325f37469",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82dc16fac5704ff6b2b77c7182e037ef",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Origin",
      "Id": "baac2b9623ca453f8aad614dee7beb15",
      "Inputs": [
        {
          "Id": "2afd9c16b4e347e5a449911a837f93e3",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f5b9359830e46deabcfbce1bf1daa03",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the origin of the Plane.\n\nPlane.Origin: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Normal",
      "Id": "c86ea9e060bd41889b7bcc059045b472",
      "Inputs": [
        {
          "Id": "2c0f429f59f24ac0a2d9fc7cbc65084f",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd16e971979345a4aeaf8b21402055b8",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the normal direction of the Plane.\n\nPlane.Normal: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Normal",
      "Id": "aa6947b80d184ddba4468e9e4795c49e",
      "Inputs": [
        {
          "Id": "5cb76d661d044c389582a0b8f07ab513",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b1b268fd956462fa0500334af8dacf6",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the normal direction of the Plane.\n\nPlane.Normal: Vector"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN varif\r\n\r\nfrom functools import reduce\r\n\r\nsolids=IN[0]\r\nfinal=[]\r\nfor i in solids:\r\n\tif i!=[] and i!=None:\r\n\t\tx=reduce(lambda x,y : x+y, i)\r\n\t\tfinal.append(x)\r\n\telse:\r\n\t\tfinal.append([])\r\nsol=[]\r\nfor i in final:\r\n\tif i==[]:\r\n\t\tsol.append([])\r\n\t\r\n\telif len(i)==1:\r\n\t\tsol.append(i[0])\r\n\telse:\r\n\t\tini=i[0]\r\n\t\tsub=[ini]\r\n\t\tfor j in range(1,len(i)-1):\r\n\t\t\tini1=Solid.Union(sub[0],i[j])\r\n\t\t\tsub[0]=ini1\r\n\t\tsol.append(sub[0])\r\n\t\t\r\nOUT=sol\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "8e27eb8a0b594db6861da6f47952c7aa",
      "Inputs": [
        {
          "Id": "b61a0bf04c83477ca5f6d5ab668624e9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "522d760143ca4e43801417e68ce5d00c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nx=[]\r\ny=[]\r\nz=[]\r\nfor ind, i in enumerate(IN[0]):\r\n\ty1=IN[1][ind]\r\n\tz1=IN[2][ind]\r\n\tx2=IN[3][ind]\r\n\ty2=IN[4][ind]\r\n\tz2=IN[5][ind]\r\n\tif i!=[] and y1!=[] and z1!=[] and x2!='' and y2!=\"\" and z2!='':\r\n\t\tx.append(x2-i)\r\n\t\ty.append(y2-y1)\r\n\t\tz.append(z2-z1)\r\nOUT=x, y, z\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "50850273e99a4e5c9fa77cf81da3817a",
      "Inputs": [
        {
          "Id": "ca292e25dcad4e14b445cc85084358d5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef67b33fef25403cabd67261a2f7dfab",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45648c77d84f47b99519efa75c89430d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0500b044cba4977837ab4275870944e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c8a59d879ff4a30ae6f66bfc824fde4",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5fe60385e924df9b75e17e0708178ab",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9456299670c142698ebabf99a7e48f94",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "02bd66aade7e4d2586878fc8337cd0b5",
      "Inputs": [
        {
          "Id": "c0d1be0547b14bd1916eac679ccd9b33",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf29d093a65c46fea86917c2476175a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[1];",
      "Id": "9d21fe2043c94512873528a508609986",
      "Inputs": [
        {
          "Id": "92dfe07b932041fcb83f9c249c6426a4",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d9b7cd3aa884bc59c9e1b4ac6a81d16",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[2];",
      "Id": "05eb6e3d0f1a4e28880eb4ecd96b37a8",
      "Inputs": [
        {
          "Id": "b6894c8c563c4587892a2d50737d58c8",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0814da076dd942a995c595967ff4144b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ec20b3ce256d44968a3bc2872206842e",
      "Inputs": [
        {
          "Id": "928798cb98a04fc7987daa0780cffe28",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21618af99c844e859a32a214a1de2355",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b11592aaa73040adb056ed156ec9864f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9cfa2578e89247d9a71261d4bf7281f5",
      "Inputs": [
        {
          "Id": "1b70b34d3fc34daf8775d50662fe7883",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ca80caf7b824e6a87a1f32b9be4d004",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2528df383be04826831e070aedeb0dd9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1a4d276fca5b4c9c8931883147b13373",
      "Inputs": [
        {
          "Id": "087b52ad554047aea598cb51fee38d1d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b5f33aa0fc64517845384e85a2ffc00",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d3fadbc5b4f4945a4edaf8839edca67",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nribs=IN[0]\r\nsolids=IN[1]\r\nfinal=[]\r\nfor ind, i in enumerate(solids):\r\n\trib=ribs[ind]\r\n\ttry:\r\n\t\tr1=Solid.Difference(rib,i)\r\n\t\tfinal.append(r1)\r\n\texcept:\r\n\t\tfinal.append([])\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "26061834cd894816ae7339293b127b4f",
      "Inputs": [
        {
          "Id": "0ffa80d9dfab4b49b4babf536b08917f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bd83d0ec8a04aa7a45e0cb923ea3837",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd60945017744a6d9bdcd9028344e956",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Orchid.E.RevitMaterial.Material, OrchidRE",
      "SelectedIndex": 39,
      "SelectedString": "Concrete, Cast In Situ",
      "NodeType": "ExtensionNode",
      "Id": "e279011ae7e44144b2bc11b43a67a80a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "835d869f20704dc5a025a0c39503a521",
          "Name": "Material",
          "Description": "The selected Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Dropdown for materials"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "ea03d9c8cc0b4e44a5c4fd8286d7d407",
      "Inputs": [
        {
          "Id": "3aea8c27d36e47678daabf328b2e9b99",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5769d83a4e024fe18a1c66b6950e4084",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16e13b5cf3ea4e2fb49adf709c2178e1",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcbce0cb815342689be1981aff8176a8",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7d979d6367b464881c4aaeff9850309",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3ba5836-4456-4ae9-a346-781cacf6ef07",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "23f91eaae10c4b8b99aa11fb8ea56c94",
      "Inputs": [
        {
          "Id": "11990035f9df4ee9b540b6e73a224163",
          "Name": "ElemsOrIDs",
          "Description": "Elements or IDs\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38d0a98d05f946fb8f561892a8b95b02",
          "Name": "Elems",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select elements in Revit by Element or ID"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 256,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "3e89829cee5348a38f19605e49ed843f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "92f7bd124a2c40dd9eb452213ebd8480",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    }
  ],
  "Connectors": [
    {
      "Start": "c409c7f1da034aa4a804d894fe3b211f",
      "End": "0f55bfce5f794f88b5274b162295c7db",
      "Id": "6fbfa12fae89422dbe16443208d289a8"
    },
    {
      "Start": "c409c7f1da034aa4a804d894fe3b211f",
      "End": "ea4c39dcd07d4a4584efc46f8209208b",
      "Id": "6ff9fdcf9d9d48d69958b5e25f7cabb9"
    },
    {
      "Start": "c409c7f1da034aa4a804d894fe3b211f",
      "End": "27525c57d3494432b0045a5ab4f428b1",
      "Id": "b862902624af4fc6b2f9962385c11a5c"
    },
    {
      "Start": "83d5bc5f632e46099dd1d6bd795fa50b",
      "End": "3a1cba5cced0494087026e2211ab4cef",
      "Id": "40d6229e1ef04f83865bfee384be13cd"
    },
    {
      "Start": "cdba790423c0455cb2e9d957b6e77df5",
      "End": "5728edab7c7e440fafc26725d91f5ea7",
      "Id": "348ce9eac0564c339b33fed55a03b6ae"
    },
    {
      "Start": "4f0fda2b4aff46c9a89ca383f7f03130",
      "End": "1a501d39eed54ea1bd6124dea274ce6f",
      "Id": "543e435ec4534fabae403ebd07389d44"
    },
    {
      "Start": "4f0fda2b4aff46c9a89ca383f7f03130",
      "End": "57ad789034d6463aabb96ab38c087aa5",
      "Id": "8a34aa80edac474a92f04c26e86beeb8"
    },
    {
      "Start": "ffefe77589884980baedaee596a02504",
      "End": "6dcebbc672da47dcaa3c2822d0282c81",
      "Id": "cb4b1deef72c481bb42876756838e8ff"
    },
    {
      "Start": "15d0300683854ff886f9d9a35a0bbb0c",
      "End": "3bc2db5443584432a6babe6046ea08d7",
      "Id": "85e9281f449a4731a449bb0c4028552f"
    },
    {
      "Start": "204e6002153c4976a3a05a25ded30a88",
      "End": "106bc0426beb4f909c31b59b9c38a3c2",
      "Id": "4670cf808b35405d82bd0a9093466be5"
    },
    {
      "Start": "a445d8a4a7cb474a9cc2a44532e250fc",
      "End": "b2ae948d710b40a69b6af0ce0c6483bb",
      "Id": "d93ec61e1d0449d0ade085f67ea01df7"
    },
    {
      "Start": "dbefe69679be4c8f9a90eb444bc8af18",
      "End": "00973723d24e4ac391467c019917936c",
      "Id": "b6794acc97264ef9b5d1594695b1bf36"
    },
    {
      "Start": "c942ed6833064203877c63d976d72416",
      "End": "ffa64b4311344862aa5bbd647991ac68",
      "Id": "d3682e948b564e6bb737a972555cd0a0"
    },
    {
      "Start": "a3702a6a61784b6a9a891c67e21600e5",
      "End": "4e04815a67504c8b93bc38a045f5b34e",
      "Id": "c63d1e93c2a6412aa5b0ea7757af6288"
    },
    {
      "Start": "5d68c199eae94e4e88333a62a14a171b",
      "End": "6b4b8b6441a84600be3ab00255e3f15b",
      "Id": "12463bc4a2f0409a90c69a1d84b95951"
    },
    {
      "Start": "a5e9691c8ed24d9a9cb27754a4aea175",
      "End": "ec9bd7481f2d4605afaa16e94eea8a15",
      "Id": "2e843d4d46c746c2bfe395a3881e3f5a"
    },
    {
      "Start": "666ae443c5294ee8989be430db45e586",
      "End": "355d1850a67e4602be4b3b46fd47ee51",
      "Id": "c30e720b8a844662b68b63c642481463"
    },
    {
      "Start": "f5d99b9614e94b4ca4c176086ecd3f34",
      "End": "13736001eb994b0bb9f0a50bc65d3728",
      "Id": "f5544bc5e92d4211a41f395ccc0107c6"
    },
    {
      "Start": "9a8ba8b5ecfb4d9ea1df9b83d8a2a454",
      "End": "a7e4504f47cb4c14a5c68c91718b67ec",
      "Id": "624868a6cf5b4f6f87804d711008c11f"
    },
    {
      "Start": "9a8ba8b5ecfb4d9ea1df9b83d8a2a454",
      "End": "ec5b396e5fc14ff1acdc04d326c90dac",
      "Id": "e1543ddd0ea548cc83fc030870ab1568"
    },
    {
      "Start": "5215e35d8da443b98342995ada615e73",
      "End": "f53f6bc81513480195948978ab19a4df",
      "Id": "63b0d1a19bb143a784ca891e52d3365f"
    },
    {
      "Start": "5215e35d8da443b98342995ada615e73",
      "End": "09a36895be7542be96880d5ab2d64626",
      "Id": "7c2f44f62d7e4ef48197592342645187"
    },
    {
      "Start": "ee77a1a905da469fb68fa869f60f5085",
      "End": "b6f3f7cc30b0403091849c8a481ed070",
      "Id": "b5f9e1cbcc5e46dca8a6720b7cf41cd2"
    },
    {
      "Start": "ee77a1a905da469fb68fa869f60f5085",
      "End": "fd36b5d4d7a24e0392dfff2fa9a26b66",
      "Id": "2cbbea3db1e54874af31eeff618bc8e4"
    },
    {
      "Start": "ee77a1a905da469fb68fa869f60f5085",
      "End": "d9db579991c64ea6bde5e1184463ac77",
      "Id": "140afc3e1bda408798585f9599fb2a3c"
    },
    {
      "Start": "ee77a1a905da469fb68fa869f60f5085",
      "End": "87f943eb24d440fda96080ea8456116a",
      "Id": "a70771338cdb42cdb40767d9cdb7d6f9"
    },
    {
      "Start": "e33519e3d6364e5c88b10ec00195c624",
      "End": "979eaaf7efc74cfda448ad4a72a12fa6",
      "Id": "e18ce27ee95e4b89a159aac934fc62cc"
    },
    {
      "Start": "2bc26796cc924ef686cf38172bd71776",
      "End": "82c408fdd1ab40c180114f1f63ca25db",
      "Id": "cc5866db0bb748058f72389c95be5a48"
    },
    {
      "Start": "2bc26796cc924ef686cf38172bd71776",
      "End": "97c48b3bccc3496f861bc8eeafa4a2a4",
      "Id": "29ea2744158c468c9cb8697454f683f8"
    },
    {
      "Start": "2bc26796cc924ef686cf38172bd71776",
      "End": "0ffa80d9dfab4b49b4babf536b08917f",
      "Id": "ff030825e08942a7b943918d1bd56947"
    },
    {
      "Start": "660f33f3d8df46e48d6b930db9109f67",
      "End": "2119669bb5704ee083741e7b3baeaca9",
      "Id": "e4df5aad4ba5436286307a6cec8cbf1c"
    },
    {
      "Start": "cc087f96ebec4eb5bab80cf5418e8d3b",
      "End": "b61a0bf04c83477ca5f6d5ab668624e9",
      "Id": "3daf160d291546909254d59cfeaa88fc"
    },
    {
      "Start": "9e27c40a7e7d4bad93ac88f25d2afdc3",
      "End": "1b11834bb10343018e2b1c7ac5ce177c",
      "Id": "484defccb2254ed49013e22825e630c0"
    },
    {
      "Start": "6513c000abed4a40824c90e0fa6a07f5",
      "End": "8affe68a9c6a47b1a71c3d820ff7c448",
      "Id": "2c4fb96a5b5246cf994da5c17455e569"
    },
    {
      "Start": "9ff9dd186b934622a60bbc6525febf58",
      "End": "47450027ead946a8aa2e5af5ffd53c1e",
      "Id": "b30e035c59ed49c2a10c06429ed437f3"
    },
    {
      "Start": "b6c316f795ad43429bf2a9cd8ef727aa",
      "End": "5f43204c33824920be4385fd3a848969",
      "Id": "ac8b5c11379a40938110e6bed3581085"
    },
    {
      "Start": "fb9f1e1031b444988e7cebd31d5f9b4d",
      "End": "efe9b1c69ab3400f9a45c484a9e6f721",
      "Id": "62bce678c4a94ffaa91929610b729b22"
    },
    {
      "Start": "0ab36fb0042646eea4ebe0d52763c626",
      "End": "a2637f02de234ebdb86c53ed6a8a2105",
      "Id": "2d58b24c1f544cceab086aefe2b32179"
    },
    {
      "Start": "e1b6be2ea4644af9b789ac17c4d823b2",
      "End": "81393bec8c33434aabd84c803f9539cf",
      "Id": "f8044542f02b4c62aae0c8facec332d7"
    },
    {
      "Start": "e1b6be2ea4644af9b789ac17c4d823b2",
      "End": "632db8747e564d5a8cd8652971f1bb81",
      "Id": "cbc27c4779ef4f458a92e88ad7220611"
    },
    {
      "Start": "01d8c74a007d4e9e98d93098dc11062a",
      "End": "d0e232c409e447a1b5e29df963fe175b",
      "Id": "ff68c2cf464a42a7ad9d9e22a1ca866e"
    },
    {
      "Start": "c2a1d67aaab04cfca1059fb32e5f8eb2",
      "End": "d532d77c8ddf450dbf64ea3db0895aa0",
      "Id": "ac342d2b664b4a129760d7f6de836555"
    },
    {
      "Start": "59ff617b2aa84309b5b4927a3ebc79c6",
      "End": "c878887847b44df4b13521b014b4d542",
      "Id": "aca523e108404f79af3ae96e8e08b383"
    },
    {
      "Start": "59ff617b2aa84309b5b4927a3ebc79c6",
      "End": "f44986cc752b4e9290830f5252b76af0",
      "Id": "74cff7b3aa754e3ea7ceff2cc6694803"
    },
    {
      "Start": "59ff617b2aa84309b5b4927a3ebc79c6",
      "End": "dcbce0cb815342689be1981aff8176a8",
      "Id": "18324f3c2151464b8c7d5d1addd5f20a"
    },
    {
      "Start": "23da9644958740e7bd4fc7b032945826",
      "End": "65f5550efcad42249ce6b7003aed8371",
      "Id": "8f6fff423e7d4113b618bd47b369e72c"
    },
    {
      "Start": "bc2c6991cddf4320806d49142d716eb1",
      "End": "026970e0ee14419fb1a667dbdb289315",
      "Id": "6ffaf0adb848456eb996d774623750b5"
    },
    {
      "Start": "839334e6616e441da749183ed8901148",
      "End": "f25c94b295dd4b75ae855c92534ff542",
      "Id": "b81a7910dd714703915bb8ddc8479941"
    },
    {
      "Start": "0d185c02df4b446ca1c88b12ae7fa457",
      "End": "d111c370f77440168ad59902c7b9dc1d",
      "Id": "acf80904db7547628180d39f189c42e2"
    },
    {
      "Start": "0d185c02df4b446ca1c88b12ae7fa457",
      "End": "634cf8082c0b4f559005c4e5f414fe61",
      "Id": "70f927f41d424d77831003149ac3c41f"
    },
    {
      "Start": "0d185c02df4b446ca1c88b12ae7fa457",
      "End": "db4be74e20d344489eec84501e7ff79d",
      "Id": "7357a78cf6464c6faef3ab86eba00d39"
    },
    {
      "Start": "d2501cf634a34addb6ad6beb8632b8b5",
      "End": "1cb369a615724106a19a1ce4d6300174",
      "Id": "7743b9ff241d4c3b82cdc611c9fd9516"
    },
    {
      "Start": "d2501cf634a34addb6ad6beb8632b8b5",
      "End": "8d5b7842bc4f425ca211c12442abeafd",
      "Id": "31b9cb30f1e24e9497372ac1569dbd13"
    },
    {
      "Start": "717c61cefd1e45838438273621d17ffe",
      "End": "8a2e4b04aef04e8386606686a5131fa8",
      "Id": "66a4f77bbe094ac9bee9d209ce6f7cb9"
    },
    {
      "Start": "43519ec3b4c041f7bcfc2ea42acddf9c",
      "End": "9b5d8381acf94845adbbb551cf1de666",
      "Id": "12491717d9e944b0898a16d4fe520514"
    },
    {
      "Start": "5a8158f275d240259b105e46bcd1ae32",
      "End": "3355c3637472453fb6ba541c37b04bfa",
      "Id": "9da82f00c7064ea09d8e870de1f4a352"
    },
    {
      "Start": "5a8158f275d240259b105e46bcd1ae32",
      "End": "0230490f86c34238a646c923b60c2226",
      "Id": "82d1d5389a3f42c78bd9836eb115f338"
    },
    {
      "Start": "5a8158f275d240259b105e46bcd1ae32",
      "End": "3ae2fdb7a32e4b8a9cb0d8647a5802fc",
      "Id": "291801bf8f304bb1b5d0d810ce23912f"
    },
    {
      "Start": "5a8158f275d240259b105e46bcd1ae32",
      "End": "993656016bd94edfb7c7f12490df5477",
      "Id": "dc5906071a9b4ba79a30af7963a12167"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "06ef61747886496eadd59ae7600214c6",
      "Id": "e14247d27eaf4d97b3a2ebddc0ae287a"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "e34f0596c63f4c1d80b5c8cc855c44e3",
      "Id": "39ba0c73de844cf28389749a14a41ecb"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "ccfc8e5ba11a40e6b8c76600848b7760",
      "Id": "e9e70335b0a548028e579bad989da310"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "bba8e97716b148768fb16e42360eadaa",
      "Id": "0bd0b22f890348ec9c72c73a15e0ce08"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "04852d2022124983a17347b9968c69a0",
      "Id": "2fd254055a0440979f10adf7a5c0c34c"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "9498a0ef11624ce78ee8f011e87fedc9",
      "Id": "334c03a18cfa46aa9c36139938e31903"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "2afd9c16b4e347e5a449911a837f93e3",
      "Id": "ceff4e84b7714efeb39f1043d8e90f3f"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "2c0f429f59f24ac0a2d9fc7cbc65084f",
      "Id": "ca8b41bcdbba4c81886fd83ecb6e1324"
    },
    {
      "Start": "47dc907f8aae4cb5b6e88ee12de8f08b",
      "End": "5cb76d661d044c389582a0b8f07ab513",
      "Id": "7aa3d4013f0a466ea1faeac5a47153ae"
    },
    {
      "Start": "45d3fcc56053478fac0a11c88979349d",
      "End": "ef67b33fef25403cabd67261a2f7dfab",
      "Id": "632474c624ba48d6a9485ef5ad0ced47"
    },
    {
      "Start": "d2bdf24bdd5a40808ad2381130a17581",
      "End": "b0500b044cba4977837ab4275870944e",
      "Id": "66e9d52d70324a5f8c80681ee21cf9ac"
    },
    {
      "Start": "878757317b7f4c3cb3a9e78f3ea35825",
      "End": "b5fe60385e924df9b75e17e0708178ab",
      "Id": "05005de994d64188b5f25389bcf39e32"
    },
    {
      "Start": "8ac5a6e0369449c5b40f899ff3d180a1",
      "End": "64b97c9e2fab45268cbc621fef473365",
      "Id": "21aef850e66b4a94bac1851a8a26fdb4"
    },
    {
      "Start": "8ac5a6e0369449c5b40f899ff3d180a1",
      "End": "8e90763425ae4c8e8ed46b0a870abe9f",
      "Id": "4b765a6e8b9c46c7ad659e0b34a8db97"
    },
    {
      "Start": "a2ed2f2d5e79432794c5d380e4092f1d",
      "End": "03278557167644dc9d4f58a736c5240f",
      "Id": "006c2169991e4980bebe50715a5759dd"
    },
    {
      "Start": "a2ed2f2d5e79432794c5d380e4092f1d",
      "End": "daf94ee655754aaebcea9f7b1461747a",
      "Id": "ebc850cd90604808aeb0ac8b1aa350b4"
    },
    {
      "Start": "a2ed2f2d5e79432794c5d380e4092f1d",
      "End": "38d6d910974f48098f3ef8ee26f3c340",
      "Id": "7df57eec9053438fbdf4b7bcc9c023e5"
    },
    {
      "Start": "a2ed2f2d5e79432794c5d380e4092f1d",
      "End": "00b60171d275440bb917f94343294cc0",
      "Id": "09548290ebf74e90b6bbb3b19bef8a9a"
    },
    {
      "Start": "391df0aa652f409abfc9f080f4e9e860",
      "End": "1b70b34d3fc34daf8775d50662fe7883",
      "Id": "89208f0e45514080a8c0bf2344ae1e9b"
    },
    {
      "Start": "05757d29ffbc437e9ff7f51578579602",
      "End": "087b52ad554047aea598cb51fee38d1d",
      "Id": "653cf2f28465464c917488237f71f101"
    },
    {
      "Start": "00a1fbcc36c3445da802ec4daa22ca14",
      "End": "928798cb98a04fc7987daa0780cffe28",
      "Id": "845d35c76a044f94868f3484b9875f5f"
    },
    {
      "Start": "b73abcdc41634ddd9fb489409c99d993",
      "End": "f81970e7b5ae46818e328afe3d5f1d74",
      "Id": "53a15d8f58354d26beaeaf3ad3d747f4"
    },
    {
      "Start": "f4265b1e44424df6bfd1cb2a6880d6d6",
      "End": "7313ef515e1a46ffb4a3b95a1b1ae599",
      "Id": "178f7fff9b1a42ae911475b4752a3f1e"
    },
    {
      "Start": "5379212fbf924adaa5447247b2db3ab6",
      "End": "8283ec2959734aaf865fa95216fa5582",
      "Id": "7b33deb64c71496ca29992e7a444cb4d"
    },
    {
      "Start": "5379212fbf924adaa5447247b2db3ab6",
      "End": "3a028556007e406ebc439c096a04b836",
      "Id": "7584c0af828a4e16935be1266de929de"
    },
    {
      "Start": "78f1645606c441e78de8fb5dd35e16ad",
      "End": "06c3e90b766e439a86e9ac198b388d35",
      "Id": "588fe1b152ed4ad6b847890983444dbb"
    },
    {
      "Start": "7de516625d8940e186f2c1f7d8188b06",
      "End": "cfe4d2ef15f644d48dbfe5d906cbea38",
      "Id": "6d4a3419f3fa469195ac3d641d610a2b"
    },
    {
      "Start": "a25fcdf730054464b6bc13a747ddd997",
      "End": "a1b4c801b14a411a978fdde806592cbe",
      "Id": "dd0f087366904197b290a8bd3d455855"
    },
    {
      "Start": "34c7054cf0014d1f8f2a6cf441b8a3dc",
      "End": "40c64f5632644157ad8d56dfc1aab980",
      "Id": "ddf986c7d5cb4880a64596b5566e0b26"
    },
    {
      "Start": "d2eb2d3d1c34464ca223e0dbb868780e",
      "End": "a385ec4edfc5408f9bf99b64166ff47c",
      "Id": "9f81362a273c4c29b12bcc6ceed95c94"
    },
    {
      "Start": "d2eb2d3d1c34464ca223e0dbb868780e",
      "End": "4f755c300b36422aaccb565dfe76d07d",
      "Id": "fdd0b2407b1349c1bbb046ed0c6adb47"
    },
    {
      "Start": "4a9b19bbeaf44156b89e67a4a452aec8",
      "End": "5791cd1bf8ba46f792abb9b3cc117721",
      "Id": "12c18ff350a24151a9ba8f34963973ba"
    },
    {
      "Start": "4a9b19bbeaf44156b89e67a4a452aec8",
      "End": "1754c1938214497299b825d257b474cc",
      "Id": "72406d6209a84776b839ccd06cb90ed4"
    },
    {
      "Start": "3893f85afd5c41108d91bfdbd106b123",
      "End": "1a64f856dc44494db8933582b437f05f",
      "Id": "cbefd48eb80f4af38b9dc8a330ed55f3"
    },
    {
      "Start": "0b36695485fa43f1b6db3fdff91a9210",
      "End": "1cbf76f707054726bad27e2822742d8c",
      "Id": "61e9c2a022054078a727f9afb837887c"
    },
    {
      "Start": "fb78b84a1b82413691990f405ff47957",
      "End": "5558b985422a4d91909b766c0327193e",
      "Id": "09024d1cec4c4422be597022181c9865"
    },
    {
      "Start": "7ec0dc1f529b4053bb5f1f74e6167b0f",
      "End": "b0eeb21ad29e458cbd9b8f2e7340ad84",
      "Id": "bf323dd051eb4537a44a4d672f75d1a1"
    },
    {
      "Start": "b98a4789cb1d4f9fa01f23bf7f9d1a1e",
      "End": "8403a83f29114aafb6f91e57d31c15d9",
      "Id": "bd9851d515f94a368cf84aca4334d545"
    },
    {
      "Start": "3fc778c913714fe19df8fea6ba1affce",
      "End": "14fe96c10fdd4566af5d05e3ebf50ef2",
      "Id": "ae9244808f404874b23ba11e352d15b5"
    },
    {
      "Start": "3fc778c913714fe19df8fea6ba1affce",
      "End": "93ece62e866c4f849a1db627b68baa57",
      "Id": "764610f13a714829844509aa9a0079b0"
    },
    {
      "Start": "1ea5a4e98b254e49aadc4105436a1f08",
      "End": "5b15ff3181be4b37a27d669e09855d89",
      "Id": "4c121a64bf614ecabd3e8ba0a4419769"
    },
    {
      "Start": "c5f7e355bf1b40e799e8d1f8b4a39a5d",
      "End": "86a2c577132f41229bf7fd1cd4b2e5a0",
      "Id": "0d8a6d22409243eaae7f436e3509f91d"
    },
    {
      "Start": "05036f4a4e424bc68f1e9a432038f286",
      "End": "c158972f93084c0db7707c4fe4dfbca6",
      "Id": "1afc37de08f4433dba66a4b9e0be44c3"
    },
    {
      "Start": "8525a73e54d346be85fa2cc1de4b3b5f",
      "End": "4f3e97af5df34ef6ac834a1ed9b8ec39",
      "Id": "fc5a5e510e6c46039650974649119eca"
    },
    {
      "Start": "8525a73e54d346be85fa2cc1de4b3b5f",
      "End": "a1c5141d2dcf45f789e9356175ae6cdc",
      "Id": "86e09dbee0ac40edb023b6131fa9c7e3"
    },
    {
      "Start": "848db699a6944cd0acd7d242b735c751",
      "End": "b5e31a1f92fe437696626c578a192471",
      "Id": "3602ae7fd6c24b4f8ff3f62736303984"
    },
    {
      "Start": "848db699a6944cd0acd7d242b735c751",
      "End": "2b003a06f79d42f4a437e20bc0151678",
      "Id": "db71e21edbe64de398e2bed5fc54fd22"
    },
    {
      "Start": "848db699a6944cd0acd7d242b735c751",
      "End": "e1fded2a26aa408c8e718986e46b79b7",
      "Id": "0d079bf2ea6a46ea9734705e81019a27"
    },
    {
      "Start": "e7a4a7dc267d4eb18bf368f449eb645c",
      "End": "065469b91a464619b85d6fc9cf1b2e16",
      "Id": "c3c69322d88e46469c2f80caa7c8159e"
    },
    {
      "Start": "e832b5219c7743519e25328e820ad76e",
      "End": "80e771b9e9da47d6bf19a2bbf01684cd",
      "Id": "7f418c0b1504462ebf65adc44af4143c"
    },
    {
      "Start": "fc7f28b49e7740f9806eb592cebef150",
      "End": "d6615778d1f740248bbb85b6dc59f7c2",
      "Id": "5ca5689c0c80474a8aefe7b298658807"
    },
    {
      "Start": "4ea06f282229482fad11dd8361371e19",
      "End": "fa3f5c2701e54d7eb94a14d8c354163e",
      "Id": "3adebc25b7dd40ab852f5e49a2113261"
    },
    {
      "Start": "a2ebd0c0e33d491390ff885168f1f4ba",
      "End": "5c29fe9e50f24f88a0157858e0743764",
      "Id": "5e375e551cbc4433932ac1659593934a"
    },
    {
      "Start": "938de1d5487f4dba9d0f236298def227",
      "End": "acd22d81718e4e68a072357d80b73bf6",
      "Id": "e2e10cefd675495595aafc0a942a44cc"
    },
    {
      "Start": "653866b5323342c9836eec25bdb7126f",
      "End": "5610bd159d154c78a563708927cf12de",
      "Id": "4a64157d99354bf6a80109d558fc1236"
    },
    {
      "Start": "27614492d26e4f2cac9eb714a350d127",
      "End": "a39503949eef45a5ab60dae325f37469",
      "Id": "90d407897fef4cdb9daea01e3419c400"
    },
    {
      "Start": "52a513c4a9b94a5fbce6906e7530d65c",
      "End": "32a23cbfabff4330a7ebb0ffa04fd871",
      "Id": "28c1dfe85bc74edaa6aef6152b13dc75"
    },
    {
      "Start": "1f5b9359830e46deabcfbce1bf1daa03",
      "End": "215492d2826148f492ab1db6e999ff48",
      "Id": "7cd172faaa82446eb3f777db6778effe"
    },
    {
      "Start": "bd16e971979345a4aeaf8b21402055b8",
      "End": "365bd183d75d404094c609f50be6f72e",
      "Id": "2a145f96f6fa4232b13e48bf3aeedfed"
    },
    {
      "Start": "9b1b268fd956462fa0500334af8dacf6",
      "End": "86d8c3d8d3814980b6221d7ed623c759",
      "Id": "542ecae2910646a6933a30a03281f93b"
    },
    {
      "Start": "522d760143ca4e43801417e68ce5d00c",
      "End": "e51a51a7f7a447e19ca34b6081c41e0c",
      "Id": "5b22ac2d35f0466aaa36cea379e2e9ab"
    },
    {
      "Start": "522d760143ca4e43801417e68ce5d00c",
      "End": "62b4aae7f4264902bfcc50778a649dd5",
      "Id": "6828f4f29bc242fbb9aa8db212273712"
    },
    {
      "Start": "522d760143ca4e43801417e68ce5d00c",
      "End": "bf2b6cb844d2466b95bc4f4414683581",
      "Id": "0ad8611f4182417087ca76d8be5db886"
    },
    {
      "Start": "522d760143ca4e43801417e68ce5d00c",
      "End": "04d5d3484a144798888401ee0a3132ab",
      "Id": "68f368597aee4be48b196e4349f3523b"
    },
    {
      "Start": "522d760143ca4e43801417e68ce5d00c",
      "End": "7bd83d0ec8a04aa7a45e0cb923ea3837",
      "Id": "c33bb092b6d441409f10fec11abaa477"
    },
    {
      "Start": "9456299670c142698ebabf99a7e48f94",
      "End": "c0d1be0547b14bd1916eac679ccd9b33",
      "Id": "d9e33742e8e04ec28dfc275c605ea173"
    },
    {
      "Start": "9456299670c142698ebabf99a7e48f94",
      "End": "92dfe07b932041fcb83f9c249c6426a4",
      "Id": "86ba713a2ac043edb5386ae5cb8446c7"
    },
    {
      "Start": "9456299670c142698ebabf99a7e48f94",
      "End": "b6894c8c563c4587892a2d50737d58c8",
      "Id": "233db55991734fb3bad1df4731160143"
    },
    {
      "Start": "bf29d093a65c46fea86917c2476175a1",
      "End": "0d747174aa8942778bdaefd574181d0a",
      "Id": "415184d60d684fc39edbe9d438363249"
    },
    {
      "Start": "9d9b7cd3aa884bc59c9e1b4ac6a81d16",
      "End": "8601891e33604f4fbdeca530c742627b",
      "Id": "fe15262654c64b2080acf346968463ed"
    },
    {
      "Start": "0814da076dd942a995c595967ff4144b",
      "End": "4dbe54bf3d0941189bccf5c9bc65c274",
      "Id": "2403198347f146498c23d975e64805b4"
    },
    {
      "Start": "b11592aaa73040adb056ed156ec9864f",
      "End": "ca292e25dcad4e14b445cc85084358d5",
      "Id": "307f9d946bda4898b45ca246c9d16353"
    },
    {
      "Start": "2528df383be04826831e070aedeb0dd9",
      "End": "9c8a59d879ff4a30ae6f66bfc824fde4",
      "Id": "23dbc2e6a6044b56bda1923a430afae3"
    },
    {
      "Start": "1d3fadbc5b4f4945a4edaf8839edca67",
      "End": "45648c77d84f47b99519efa75c89430d",
      "Id": "d3f428ae35d64c0db451321a064b1d1d"
    },
    {
      "Start": "dd60945017744a6d9bdcd9028344e956",
      "End": "3aea8c27d36e47678daabf328b2e9b99",
      "Id": "d2dd4507de5c4a2bb4ab74b8bdbfe750"
    },
    {
      "Start": "835d869f20704dc5a025a0c39503a521",
      "End": "16e13b5cf3ea4e2fb49adf709c2178e1",
      "Id": "9afa9f6fe222484e9714c8ee6dae6b3f"
    },
    {
      "Start": "d7d979d6367b464881c4aaeff9850309",
      "End": "11990035f9df4ee9b540b6e73a224163",
      "Id": "19e2d985569c47709e36936a9fdd05c3"
    },
    {
      "Start": "92f7bd124a2c40dd9eb452213ebd8480",
      "End": "5769d83a4e024fe18a1c66b6950e4084",
      "Id": "1c01819b8d83455cb8a33aa27ddac7c7"
    }
  ],
  "Dependencies": [
    "9266cc47-e982-46fc-9fd4-59bd7fb19a53",
    "ecdb3729-0de2-4c50-bdca-28fe881027a2",
    "c3ba5836-4456-4ae9-a346-781cacf6ef07",
    "fba9d8e4-0358-49e1-b306-da38076bf26d"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Rhythm",
      "Version": "2020.1.22",
      "ReferenceType": "Package",
      "Nodes": [
        "dd48e3e0198442f69f7fc9652430b903"
      ]
    },
    {
      "Name": "bimorphNodes",
      "Version": "3.0.3",
      "ReferenceType": "Package",
      "Nodes": [
        "003ac9f4a4764af2be7c15581b66c965",
        "746d59de82844ab684835e97b0e6fd6f",
        "80304841cf274a1f964f1313758a148b"
      ]
    },
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "bd5f159ccf014baf8f12ebc208dd3c82"
      ]
    },
    {
      "Name": "spring nodes",
      "Version": "204.1.0",
      "ReferenceType": "Package",
      "Nodes": [
        "02d354c120d9410bbd5c04ad81fc3236"
      ]
    },
    {
      "Name": "Modelical",
      "Version": "2.2.19",
      "ReferenceType": "Package",
      "Nodes": [
        "cc8bc712d24344ee809f515f45b0e910",
        "78574696d03a46dc9641acda83f61b29",
        "23f91eaae10c4b8b99aa11fb8ea56c94"
      ]
    },
    {
      "Name": "Orchid",
      "Version": "203.3.0.7815",
      "ReferenceType": "Package",
      "Nodes": [
        "23210eec9c2b4a1184e4c870f8c460d6",
        "73b572cb398146cbb9fcd6c9c2779472",
        "e279011ae7e44144b2bc11b43a67a80a"
      ]
    },
    {
      "Name": "Sastrugi",
      "Version": "2.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "00f306674ca24d5fae6c22ccefe85453"
      ]
    }
  ],
  "Bindings": [
    {
      "NodeId": "ff3ec7bf-c3ce-4a09-8052-8663de7daa4e",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_ff3ec7bf-c3ce-4a09-8052-8663de7daa4e": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.0.7460",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 715828.14531574666,
      "EyeY": 376814.68418024562,
      "EyeZ": 179154.84331625962,
      "LookX": -646513.41357763042,
      "LookY": -374530.99769110559,
      "LookZ": -233898.92261232017,
      "UpX": -0.2623496397191446,
      "UpY": 0.96029368567702655,
      "UpZ": -0.094914191711724438
    },
    "NodeViews": [
      {
        "Id": "930ea120b6e24d899bfc91ae663cec2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Select Model Elements",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 82.265186352654837,
        "Y": 279.32798690077897
      },
      {
        "Id": "dd48e3e0198442f69f7fc9652430b903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ʳʰʸᵗʰᵐ|Elements.GetParameterValueByNameTypeOrInstance",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 478.63173838686657,
        "Y": 272.6047789238587
      },
      {
        "Id": "f7634d6a78d4462986aca202221b56ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 80.566433951902638,
        "Y": 496.17440614122279
      },
      {
        "Id": "01d439e00adc4d94ae23b026f30926f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1012.0390774340442,
        "Y": 320.42311069222558
      },
      {
        "Id": "2afe3a86a4824782b52315f429006743",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 761.73669996045135,
        "Y": 391.83228126235895
      },
      {
        "Id": "43098590f51c4abf8741108989992fd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1358.0655426650569,
        "Y": 281.70232214127179
      },
      {
        "Id": "621e7d3242db4fdf96dcc55381ea596d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "!=",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1359.8661334163733,
        "Y": 444.37783023876653
      },
      {
        "Id": "d9b4e7db5b464047a491fcee2ba00291",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1144.8879759857364,
        "Y": 473.6196169253401
      },
      {
        "Id": "3c9d2b5d7874429c812b8e45ee26ffc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1591.428876894463,
        "Y": 418.14764256716347
      },
      {
        "Id": "c6a094d7316742489833e047051f84e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1591.1544521427927,
        "Y": 286.15287657153181
      },
      {
        "Id": "bd5a5e7d20014eb08271a221870ca83c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1842.4919869994883,
        "Y": 422.3837670000903
      },
      {
        "Id": "003ac9f4a4764af2be7c15581b66c965",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.IntersectsElement",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2044.4964836608856,
        "Y": 286.59296675754524
      },
      {
        "Id": "4c825db1ea4548d49760b80449093bd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2677.5810517963464,
        "Y": 205.07217729321411
      },
      {
        "Id": "74afc9dd1e7e46378855afcb1475e944",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2666.79698628728,
        "Y": 412.991011629788
      },
      {
        "Id": "c7fe24593e754f3eb6969be07cac91e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2478.7241720059933,
        "Y": 287.60538944578042
      },
      {
        "Id": "ce510e46045a41d1bfdfae1eee258fcd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3716.3494348351837,
        "Y": 286.46825646399537
      },
      {
        "Id": "4d19d86b33ca4b3f90c04f59772575dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ribs index",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4172.8056454104371,
        "Y": 124.02103848741666
      },
      {
        "Id": "a5db88132bc74ac29a9e5a3eff39729a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ribs solids",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4174.2045327892365,
        "Y": 277.60189150606425
      },
      {
        "Id": "fcc354a4de064f1a8155002d0a2233ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "surface index",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4172.4928622412372,
        "Y": 384.15546038544585
      },
      {
        "Id": "b8a4ac26a01a46328d8442d523851850",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "surface ",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4173.8186298360624,
        "Y": 490.70902926482751
      },
      {
        "Id": "44b041d3c2994b82a5278d3409cbb76a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4419.4177855634443,
        "Y": 302.29435262782226
      },
      {
        "Id": "746d59de82844ab684835e97b0e6fd6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "LinkElement.Solids",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3132.1166195815531,
        "Y": 461.40952075598307
      },
      {
        "Id": "80304841cf274a1f964f1313758a148b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "LinkElement.Solids",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3130.6084550091518,
        "Y": 101.25272679229522
      },
      {
        "Id": "c04289896fbd4ad3bb295c5708c3158b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3459.2122774228646,
        "Y": 460.05711548250241
      },
      {
        "Id": "df22f8fd412a400c96c8fe1a2b8c166f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3517.7456962585989,
        "Y": 100.49942362823322
      },
      {
        "Id": "13b64284a15c4ba2822df98d2c1bb01b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 3375.4386347687955,
        "Y": 100.95657436262036
      },
      {
        "Id": "bd5f159ccf014baf8f12ebc208dd3c82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Name+",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8561.3553502402719,
        "Y": 96.298318261231543
      },
      {
        "Id": "ecae02913bc2418091d26a7a38f1f999",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4414.0836710694975,
        "Y": 87.545953951989645
      },
      {
        "Id": "bc8581ec3f9c46c1a33468f0e547d4a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10159.77313583131,
        "Y": 782.39419605708451
      },
      {
        "Id": "562d4e1d23054a3183847c83408bcee4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Boolean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10181.023466704699,
        "Y": 908.14364727521524
      },
      {
        "Id": "02d354c120d9410bbd5c04ad81fc3236",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ꟿ FamilyInstance.ByGeometry",
        "ShowGeometry": false,
        "Excluded": true,
        "X": 10695.33881120472,
        "Y": 625.74996390189517
      },
      {
        "Id": "3499da9d6efe4c38b9d469832fa07a26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "File Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10009.232945462609,
        "Y": 698.68054512510525
      },
      {
        "Id": "7b3f3436a3904b9aa9b9af908ce44a42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8913.9071284395559,
        "Y": 95.0642045578104
      },
      {
        "Id": "cc8bc712d24344ee809f515f45b0e910",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "SelectInRevit",
        "ShowGeometry": true,
        "Excluded": true,
        "X": 3123.1817079087714,
        "Y": 801.24977432013031
      },
      {
        "Id": "ff3ec7bfc3ce4a0980528663de7daa4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 11546.660260518305,
        "Y": -818.55137088469883
      },
      {
        "Id": "bd3013e9681c4a30956940de38536f93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11075.462838293133,
        "Y": -812.70090624609111
      },
      {
        "Id": "23210eec9c2b4a1184e4c870f8c460d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Materials",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11049.710861589578,
        "Y": -731.24472055569322
      },
      {
        "Id": "78574696d03a46dc9641acda83f61b29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "SelectInRevit",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11915.893858050382,
        "Y": -815.03088750143752
      },
      {
        "Id": "97f60bf3f3cf4233831ad25c56cfb16e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Solid.Centroid",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5210.1747929883186,
        "Y": 689.84447753945415
      },
      {
        "Id": "fb6d85dd82614afdb032158645404282",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Faces",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4579.4101320255,
        "Y": -741.63851252736754
      },
      {
        "Id": "cf951ae7d1c54063a37f831aa68bf5df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Surface.Area",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4854.3243842759121,
        "Y": -864.46336479524666
      },
      {
        "Id": "9b0e73b3ebc146a2a539bbda751bf480",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5137.59419542759,
        "Y": -767.54488179395025
      },
      {
        "Id": "00f306674ca24d5fae6c22ccefe85453",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "❄_Surface Plane",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5357.8972821027328,
        "Y": -766.68867790508125
      },
      {
        "Id": "fca5d08bb9dd41f7bbde4e21fc542d0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7574.7466205815672,
        "Y": -244.73218980471881
      },
      {
        "Id": "1e4326ce8a8849928f82d91288acea19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.X",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6369.2954102239419,
        "Y": 625.66172499628453
      },
      {
        "Id": "82423bcc25c84ed1a6e0bd10fdd759a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6369.8923287618063,
        "Y": 707.79235369780508
      },
      {
        "Id": "dfb21117fde4494cac85bfe1237007a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6368.830474772888,
        "Y": 790.866801313741
      },
      {
        "Id": "8070c7d972674be5b51275c95f344fab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Rectangle.ByWidthLength",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7917.8504339518086,
        "Y": -171.59313503508088
      },
      {
        "Id": "7bf7e6768b6b4afe95f37d1dda88c517",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7748.318812263582,
        "Y": -81.938414012008366
      },
      {
        "Id": "1f8f705d42a4452795cfa5eb19f779ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Origin",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 6055.5119450479033,
        "Y": -775.65770386750023
      },
      {
        "Id": "842838c55bae424fa17f5ba1346cc291",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6368.72814889867,
        "Y": 535.914186936922
      },
      {
        "Id": "a723a50b1c0249029f5e2412c16e479f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6369.3933448496455,
        "Y": 444.53352122423132
      },
      {
        "Id": "5264ef61a1fb4cf4996d06957948d320",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.X",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6368.7964263117856,
        "Y": 360.32633799852238
      },
      {
        "Id": "c28dca244b8f471aac79904e6990fca4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.XAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6046.9514383440828,
        "Y": -862.03864123705625
      },
      {
        "Id": "d83a517972084dc2b8e08c4388626702",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Rotate",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7321.9091719172193,
        "Y": -768.92289136261434
      },
      {
        "Id": "844d8f591ec24cda891b35839766b4f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Normal",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6045.9773215650648,
        "Y": -689.25891099907756
      },
      {
        "Id": "fdf512819be94d59ba2b0a52b6ecf4a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6744.0650304149176,
        "Y": -885.78274202416026
      },
      {
        "Id": "b31d0637642147c98f38849b2b127c43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.ZAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6146.3845302041245,
        "Y": -951.09197028218534
      },
      {
        "Id": "9bd7f8d0b682401a86317bbd96bd2683",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 8795.46208357497,
        "Y": -508.769356480173
      },
      {
        "Id": "b782d256d52a44d684a1cdf7d6bee848",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8598.19195428102,
        "Y": -455.872914253133
      },
      {
        "Id": "2df62c4526664c1c80a08193a5753be4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.YAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8516.7301446917663,
        "Y": -798.98165873315145
      },
      {
        "Id": "35bb8393fab44866bd64baf8c806ee7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 9320.0731199560814,
        "Y": -1120.7453206800762
      },
      {
        "Id": "e06f430af08447e8b5537bbe04adfe9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.AngleAboutAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6368.483818912091,
        "Y": -888.80029634290781
      },
      {
        "Id": "e4e7961854bf483884fd7b69f4cb7626",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8989.5323771479016,
        "Y": -943.863338243923
      },
      {
        "Id": "8d63ef677fd74d748f1dc704bd5d0ade",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8874.4806213114625,
        "Y": -845.6124615550043
      },
      {
        "Id": "cb6be7a1fa14452aade30829c733add7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Origin",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8517.6950027733365,
        "Y": -975.11562372510866
      },
      {
        "Id": "c0ba69ef20b140219b135406fe20e688",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 8799.9518097051641,
        "Y": -1227.0250902823968
      },
      {
        "Id": "5be8a2415c084a3b901b74938d601dce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8602.681680411215,
        "Y": -1174.1286480553567
      },
      {
        "Id": "9fe1e541736f427280e469c99a3d2f2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 9321.3881301335532,
        "Y": -672.94690890590914
      },
      {
        "Id": "a07a511bea3d44c7b58da6f69a1f32f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.YAxis",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8508.9837322380481,
        "Y": -1510.7484890054079
      },
      {
        "Id": "8279bab69db046beaf9f32bac856db29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8956.7496873351574,
        "Y": -1375.2361275550643
      },
      {
        "Id": "a623484e12a94d35900d5e37ee891773",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9243.6752829750585,
        "Y": -1697.6702735528461
      },
      {
        "Id": "ecc4480a30384019936764c2ee8a801f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Origin",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8511.1595557537912,
        "Y": -1688.0934194315364
      },
      {
        "Id": "7dccf1e9ab534abaa383542f01b45497",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8745.4911029415853,
        "Y": -1510.4315462358927
      },
      {
        "Id": "9b58e7d3d64f4a53a048d5995bcdcdab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 5508.456502734869,
        "Y": -166.11878506967196
      },
      {
        "Id": "15189bdc845a4ecbb8d6a5b2d9104635",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Solid.Volume",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9596.4011133551867,
        "Y": -1197.4400489808795
      },
      {
        "Id": "da6c3e7185314cc685ab842da3488494",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Solid.Volume",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9637.4714720095653,
        "Y": -638.42046044409085
      },
      {
        "Id": "57fa0daed35e4c57bd470253222cf58f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9989.8311170278284,
        "Y": -959.53874747969292
      },
      {
        "Id": "73b572cb398146cbb9fcd6c9c2779472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Materials",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10073.269200035515,
        "Y": 1004.6942476425581
      },
      {
        "Id": "e3e37df2e9794e19b46d3c1850a02606",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Material.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10398.597376364038,
        "Y": 1005.4926434126673
      },
      {
        "Id": "a2d2f1b8bafd400a89994a33245fa0d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8864.5603732821455,
        "Y": -2441.8652491259681
      },
      {
        "Id": "ec0062e36b914eeaac810be02a72e79f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8979.6121291185846,
        "Y": -2540.1161258148873
      },
      {
        "Id": "d11a7038afdb4630b31534be3fa59481",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Origin",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8507.7747547440249,
        "Y": -2571.3684112960732
      },
      {
        "Id": "a3b7f92890354464b87f577209f846a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8946.8294393058441,
        "Y": -2971.488915126024
      },
      {
        "Id": "32a6d9a910664074912aab5f8ed857ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8735.5708549122755,
        "Y": -3106.6843338068543
      },
      {
        "Id": "6f4a0df2a9c74aac93eab9654d81b396",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9233.7550349457451,
        "Y": -3293.9230611238145
      },
      {
        "Id": "baac2b9623ca453f8aad614dee7beb15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Origin",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8501.2393077244742,
        "Y": -3284.3462070025043
      },
      {
        "Id": "c86ea9e060bd41889b7bcc059045b472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Normal",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8494.6499992044282,
        "Y": -3111.3821375298949
      },
      {
        "Id": "aa6947b80d184ddba4468e9e4795c49e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Plane.Normal",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8502.6284221387014,
        "Y": -2465.9413547122258
      },
      {
        "Id": "8e27eb8a0b594db6861da6f47952c7aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 4748.3050481820692,
        "Y": 305.570936355975
      },
      {
        "Id": "50850273e99a4e5c9fa77cf81da3817a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6951.8295517670567,
        "Y": 527.046284068394
      },
      {
        "Id": "02bd66aade7e4d2586878fc8337cd0b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7124.37110652051,
        "Y": 508.5553260254851
      },
      {
        "Id": "9d21fe2043c94512873528a508609986",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7124.6600413154129,
        "Y": 612.66864558701411
      },
      {
        "Id": "05eb6e3d0f1a4e28880eb4ecd96b37a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7122.9489761103159,
        "Y": 716.89528471007236
      },
      {
        "Id": "ec20b3ce256d44968a3bc2872206842e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6669.027491183826,
        "Y": 273.2018915952728
      },
      {
        "Id": "9cfa2578e89247d9a71261d4bf7281f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6665.3587816909776,
        "Y": 502.4706010881211
      },
      {
        "Id": "1a4d276fca5b4c9c8931883147b13373",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6666.53902765105,
        "Y": 392.20122781636928
      },
      {
        "Id": "26061834cd894816ae7339293b127b4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 9522.14957769892,
        "Y": 2062.398683406027
      },
      {
        "Id": "e279011ae7e44144b2bc11b43a67a80a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Materials",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9986.00049627277,
        "Y": 2172.4860646589132
      },
      {
        "Id": "ea03d9c8cc0b4e44a5c4fd8286d7d407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 10482.949895201471,
        "Y": 2085.1794143299071
      },
      {
        "Id": "23f91eaae10c4b8b99aa11fb8ea56c94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "SelectInRevit",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10852.183492733571,
        "Y": 2088.699897713168
      },
      {
        "Id": "3e89829cee5348a38f19605e49ed843f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10011.752472976272,
        "Y": 2091.0298789685153
      }
    ],
    "Annotations": [
      {
        "Id": "aa226a7c6d954a0cbf0d6f6611fc0d16",
        "Title": "Ribs",
        "Nodes": [
          "a5db88132bc74ac29a9e5a3eff39729a"
        ],
        "Left": 4164.2045327892365,
        "Top": 224.40189150606426,
        "Width": 111.2,
        "Height": 145.79999999999998,
        "FontSize": 36.0,
        "InitialTop": 277.60189150606425,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "041c76d5c6c74b649d7baeff4d152c87",
        "Title": "Wall Inter. Centroid",
        "Nodes": [
          "97f60bf3f3cf4233831ad25c56cfb16e"
        ],
        "Left": 5200.1747929883186,
        "Top": 593.44447753945417,
        "Width": 198.4,
        "Height": 188.99999999999997,
        "FontSize": 36.0,
        "InitialTop": 689.84447753945415,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.4,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9d339093b18e421c9477d22d28cb8101",
        "Title": "New Names",
        "Nodes": [
          "bd5f159ccf014baf8f12ebc208dd3c82",
          "7b3f3436a3904b9aa9b9af908ce44a42"
        ],
        "Left": 8551.3553502402719,
        "Top": 41.864204557810396,
        "Width": 497.35177819928396,
        "Height": 147.03411370342116,
        "FontSize": 36.0,
        "InitialTop": 95.0642045578104,
        "InitialHeight": 146.23411370342114,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "53c8cb9c48674f6ba38dab2c05b9157e",
        "Title": "Walls Solids",
        "Nodes": [
          "80304841cf274a1f964f1313758a148b",
          "df22f8fd412a400c96c8fe1a2b8c166f",
          "13b64284a15c4ba2822df98d2c1bb01b"
        ],
        "Left": 3120.6084550091518,
        "Top": 47.299423628233214,
        "Width": 531.937241249447,
        "Height": 146.55330316406202,
        "FontSize": 36.0,
        "InitialTop": 100.49942362823322,
        "InitialHeight": 145.753303164062,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b5237e2158094b2194d33d7b155e61bb",
        "Title": "Ribs",
        "Nodes": [
          "746d59de82844ab684835e97b0e6fd6f",
          "c04289896fbd4ad3bb295c5708c3158b"
        ],
        "Left": 3122.1166195815531,
        "Top": 406.85711548250242,
        "Width": 532.69565784131157,
        "Height": 171.39999999999995,
        "FontSize": 36.0,
        "InitialTop": 460.05711548250241,
        "InitialHeight": 146.35240527348066,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "53a4dcbfbdab491088d10880dec3ceba",
        "Title": "Intersection Checker",
        "Nodes": [
          "ce510e46045a41d1bfdfae1eee258fcd"
        ],
        "Left": 3706.3494348351837,
        "Top": 190.06825646399537,
        "Width": 196.61666666666667,
        "Height": 214.60000000000002,
        "FontSize": 36.0,
        "InitialTop": 286.46825646399537,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.4,
        "Background": "#FFC1D676"
      },
      {
        "Id": "93466b4f4c7047ff846e8f2445606957",
        "Title": "Intersection Volume Out",
        "Nodes": [
          "44b041d3c2994b82a5278d3409cbb76a"
        ],
        "Left": 4409.4177855634443,
        "Top": 205.89435262782226,
        "Width": 196.61666666666667,
        "Height": 214.60000000000002,
        "FontSize": 36.0,
        "InitialTop": 302.29435262782226,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.4,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6fb117c3f60b4c3db4ffdd6b7ad8a63d",
        "Title": "Planes with max. area",
        "Nodes": [
          "fb6d85dd82614afdb032158645404282",
          "cf951ae7d1c54063a37f831aa68bf5df",
          "9b0e73b3ebc146a2a539bbda751bf480",
          "00f306674ca24d5fae6c22ccefe85453"
        ],
        "Left": 4569.4101320255,
        "Top": -917.66336479524671,
        "Width": 1040.8871500772325,
        "Height": 268.62485226787919,
        "FontSize": 36.0,
        "InitialTop": -864.46336479524666,
        "InitialHeight": 267.82485226787912,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e1cf44c11602475ca0a9a289118ff75b",
        "Title": "1. Wall Translation by 5 units",
        "Nodes": [
          "9bd7f8d0b682401a86317bbd96bd2683",
          "b782d256d52a44d684a1cdf7d6bee848"
        ],
        "Left": 8588.19195428102,
        "Top": -561.969356480173,
        "Width": 454.870129293951,
        "Height": 198.69644222704002,
        "FontSize": 36.0,
        "InitialTop": -508.769356480173,
        "InitialHeight": 197.89644222703998,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c94ec14c7c4143ffb80c627167c36fd6",
        "Title": "Plane origin and centroid of intersection difference",
        "Nodes": [
          "1e4326ce8a8849928f82d91288acea19",
          "82423bcc25c84ed1a6e0bd10fdd759a6",
          "dfb21117fde4494cac85bfe1237007a1",
          "842838c55bae424fa17f5ba1346cc291",
          "a723a50b1c0249029f5e2412c16e479f",
          "5264ef61a1fb4cf4996d06957948d320"
        ],
        "Left": 6358.72814889867,
        "Top": 134.32633799852238,
        "Width": 213.96417986313628,
        "Height": 749.14046331521865,
        "FontSize": 36.0,
        "InitialTop": 360.32633799852238,
        "InitialHeight": 575.54046331521863,
        "TextblockHeight": 216.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9d939d4182e545baa2c159becb27e57f",
        "Title": "Angle between Plane and Original Z axis",
        "Nodes": [
          "1f8f705d42a4452795cfa5eb19f779ec",
          "c28dca244b8f471aac79904e6990fca4",
          "844d8f591ec24cda891b35839766b4f9",
          "b31d0637642147c98f38849b2b127c43",
          "e06f430af08447e8b5537bbe04adfe9d"
        ],
        "Left": 6035.9773215650648,
        "Top": -1047.4919702821853,
        "Width": 576.90649734702617,
        "Height": 450.83305928310779,
        "FontSize": 36.0,
        "InitialTop": -951.09197028218534,
        "InitialHeight": 406.83305928310779,
        "TextblockHeight": 86.4,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9f2b356fffe74254a8aed146dff06e4e",
        "Title": "1. Wall Translation by 5 units",
        "Nodes": [
          "c0ba69ef20b140219b135406fe20e688",
          "5be8a2415c084a3b901b74938d601dce"
        ],
        "Left": 8592.681680411215,
        "Top": -1280.2250902823969,
        "Width": 454.87012929394916,
        "Height": 198.69644222704014,
        "FontSize": 36.0,
        "InitialTop": -1227.0250902823968,
        "InitialHeight": 197.8964422270401,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7369ca89329a49639352277b6c216e5b",
        "Title": "Refined Families",
        "Nodes": [
          "bc8581ec3f9c46c1a33468f0e547d4a7",
          "562d4e1d23054a3183847c83408bcee4",
          "02d354c120d9410bbd5c04ad81fc3236",
          "3499da9d6efe4c38b9d469832fa07a26"
        ],
        "Left": 9999.2329454626088,
        "Top": 572.54996390189513,
        "Width": 996.50586574211081,
        "Height": 403.39368337332013,
        "FontSize": 36.0,
        "InitialTop": 625.74996390189517,
        "InitialHeight": 517.33887929218008,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dc6a88b011c74730b8b856bdd0bc28cc",
        "Title": "Refined Instances",
        "Nodes": [
          "ff3ec7bfc3ce4a0980528663de7daa4e",
          "78574696d03a46dc9641acda83f61b29",
          "23210eec9c2b4a1184e4c870f8c460d6",
          "bd3013e9681c4a30956940de38536f93"
        ],
        "Left": 11039.710861589578,
        "Top": -848.55137088469883,
        "Width": 1111.782996460804,
        "Height": 209.9066503290056,
        "FontSize": 36.0,
        "InitialTop": -818.55137088469883,
        "InitialHeight": 232.30665032900549,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "22efc0be701347ec9a47e85a6ac76dd1",
        "Title": "Line To visualise Axis",
        "Nodes": [
          "e4e7961854bf483884fd7b69f4cb7626",
          "8d63ef677fd74d748f1dc704bd5d0ade"
        ],
        "Left": 8864.4806213114625,
        "Top": -997.063338243923,
        "Width": 355.05175583643904,
        "Height": 244.05087668891869,
        "FontSize": 36.0,
        "InitialTop": -943.863338243923,
        "InitialHeight": 243.25087668891865,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1bb8a55bbd3246babb79e0d83ea80929",
        "Title": "Vector ",
        "Nodes": [
          "a07a511bea3d44c7b58da6f69a1f32f5",
          "ecc4480a30384019936764c2ee8a801f",
          "7dccf1e9ab534abaa383542f01b45497"
        ],
        "Left": 8498.9837322380481,
        "Top": -1741.2934194315364,
        "Width": 451.70737070353715,
        "Height": 323.46187319564376,
        "FontSize": 36.0,
        "InitialTop": -1688.0934194315364,
        "InitialHeight": 322.66187319564369,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "718a10738f0942edb0895760946483fe",
        "Title": "Translating Plane",
        "Nodes": [
          "fca5d08bb9dd41f7bbde4e21fc542d0e",
          "8070c7d972674be5b51275c95f344fab",
          "7bf7e6768b6b4afe95f37d1dda88c517"
        ],
        "Left": 7564.7466205815672,
        "Top": -297.9321898047188,
        "Width": 579.10381337024137,
        "Height": 308.5937757927104,
        "FontSize": 36.0,
        "InitialTop": -244.73218980471881,
        "InitialHeight": 307.79377579271045,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a5746bf3e1c747ae9c3bb3f88a589e62",
        "Title": "Plane Rotation",
        "Nodes": [
          "d83a517972084dc2b8e08c4388626702"
        ],
        "Left": 7311.9091719172193,
        "Top": -822.12289136261438,
        "Width": 257.6,
        "Height": 222.60000000000005,
        "FontSize": 36.0,
        "InitialTop": -768.92289136261434,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2e150099b79243f59fa41c2e6d7365c4",
        "Title": "Line To visualise Axis",
        "Nodes": [
          "ec0062e36b914eeaac810be02a72e79f",
          "a2d2f1b8bafd400a89994a33245fa0d4"
        ],
        "Left": 8854.5603732821455,
        "Top": -2593.3161258148871,
        "Width": 355.05175583643904,
        "Height": 244.05087668891892,
        "FontSize": 36.0,
        "InitialTop": -2540.1161258148873,
        "InitialHeight": 220.850876688919,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a8a6f12c1591480297d427b18ce541e2",
        "Title": "Vector ",
        "Nodes": [
          "baac2b9623ca453f8aad614dee7beb15",
          "32a6d9a910664074912aab5f8ed857ca"
        ],
        "Left": 8491.2393077244742,
        "Top": -3337.5462070025042,
        "Width": 449.53154718780132,
        "Height": 323.4618731956499,
        "FontSize": 36.0,
        "InitialTop": -3284.3462070025043,
        "InitialHeight": 300.26187319565008,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5b93943dd7384bbcb13e28fa9d306f24",
        "Title": "union",
        "Nodes": [
          "8e27eb8a0b594db6861da6f47952c7aa"
        ],
        "Left": 4738.3050481820692,
        "Top": 252.370936355975,
        "Width": 144.8,
        "Height": 145.79999999999998,
        "FontSize": 36.0,
        "InitialTop": 305.570936355975,
        "InitialHeight": 122.6,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cdba4368c2b0427d825013216562f4eb",
        "Title": "Non_ Refined Instances",
        "Nodes": [
          "26061834cd894816ae7339293b127b4f",
          "e279011ae7e44144b2bc11b43a67a80a",
          "ea03d9c8cc0b4e44a5c4fd8286d7d407",
          "23f91eaae10c4b8b99aa11fb8ea56c94",
          "3e89829cee5348a38f19605e49ed843f"
        ],
        "Left": 9512.14957769892,
        "Top": 2009.1986834060269,
        "Width": 1575.6339150346516,
        "Height": 255.88738125288623,
        "FontSize": 36.0,
        "InitialTop": 2062.398683406027,
        "InitialHeight": 232.68738125288618,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      }
    ],
    "X": -2811.1442506168078,
    "Y": -44.701409295175722,
    "Zoom": 0.34441219027820968
  }
}