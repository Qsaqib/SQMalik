{
  "Uuid": "b53b0b7b-a2fe-4a48-880c-6e2644ab8d39",
  "IsCustomNode": false,
  "Description": null,
  "Name": "V3",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "a6bdfef5-1ac4-4e18-8f51-c22ea5f3ea47-003ed48a",
        "018e4353-adf6-490a-ae52-c665c993c7f3-00530192",
        "018e4353-adf6-490a-ae52-c665c993c7f3-0053019b",
        "018e4353-adf6-490a-ae52-c665c993c7f3-005301a4",
        "74355c3b-a85c-4d60-b2c0-d8f68f714ed3-005356f3",
        "fe3e8379-8fce-4f2b-9f36-02ba9deb2190-0053e9cc",
        "2e889739-7f67-4313-879d-ef26312f7c29-00575bee",
        "2e889739-7f67-4313-879d-ef26312f7c29-00575bf7",
        "aeb082ed-8d91-4158-8744-ea32bc5f2458-005cd34b",
        "aeb082ed-8d91-4158-8744-ea32bc5f2458-005cd4d0"
      ],
      "Id": "61d13dd652e04b7996b392f581420886",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f5066d5db7c4c388d88fec7433d91ad",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "74355c3b-a85c-4d60-b2c0-d8f68f714ed3-00535667",
        "74355c3b-a85c-4d60-b2c0-d8f68f714ed3-00535669",
        "913a0c6e-d5bc-4aa7-b774-0cb9456a5643-00542a33",
        "6e4952b7-699a-43ba-ae3d-a3dbf94677cf-0055f763",
        "8bf778a3-405c-4613-8bc5-ca46af0fc820-0057167a",
        "5e21f78b-2c06-45a7-bcda-862c881ad665-0059aeab",
        "5e21f78b-2c06-45a7-bcda-862c881ad665-0059aead",
        "5e21f78b-2c06-45a7-bcda-862c881ad665-0059aeaf",
        "5e21f78b-2c06-45a7-bcda-862c881ad665-0059aeb1",
        "5e21f78b-2c06-45a7-bcda-862c881ad665-0059aeb3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca80f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca813",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca815",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca817",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca819",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca81b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca81d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca821",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca823",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca825",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca827",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca829",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca82b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca82d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca82f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca831",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca833",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca835",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca837",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca839",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca83b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca83d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca83f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca841",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca843",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca845",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca847",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca849",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca84b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca84d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca84f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca851",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca853",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca855",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca857",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca859",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca85b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca85d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca85f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca861",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca863",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca865",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca867",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca869",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca86b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca86d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca86f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca871",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca873",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca875",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca877",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca879",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca87b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca87d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca87f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca881",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca883",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca885",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca887",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca889",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca88b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca88d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca88f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca891",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca893",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca895",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca897",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca899",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca89b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca89d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca89f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8a1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8a3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8a5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8a7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8a9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8ab",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8ad",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8af",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8b1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8b3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8b5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8b7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8b9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8bb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8bd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8bf",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8c1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8c3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8c5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8c7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8c9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8cb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8cd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8cf",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8d1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8d3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8d5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8d7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8d9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8db",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8dd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8df",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8e1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8e3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8e5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8e7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8e9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8eb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8ed",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8ef",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8f1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8f3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8f5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8f7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8f9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8fb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8fd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca8ff",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca901",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca903",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca905",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca907",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca909",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca90b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca90d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca90f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca911",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca913",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca915",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca917",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca919",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca91b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca91d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca91f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca921",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca923",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca925",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca927",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca929",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca92b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca92d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca92f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca931",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca933",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca935",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca937",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca939",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca93b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca93d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca93f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca941",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca943",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca945",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca947",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca949",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca94b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca94d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca94f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca951",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca953",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca955",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca957",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca959",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca95b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca95d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca95f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca961",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca963",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca965",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca967",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca969",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca96b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca96d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca96f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca971",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca973",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca975",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca977",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca979",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca97b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca97d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca97f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca981",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca983",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca985",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca987",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca989",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca98b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca98d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca98f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca991",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca993",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca995",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca997",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca999",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca99b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca99d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca99f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9a1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9a3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9a5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9a7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9a9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9ab",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9ad",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9af",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9b1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9b3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9b5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9b7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9b9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9bb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9bd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9bf",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9c1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9c3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9c5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9c7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9c9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9cb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9cd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9cf",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9d1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9d3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9d5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9d7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9d9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9db",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9dd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9df",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9e1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9e3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9e5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9e7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9e9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9eb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9ed",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9ef",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9f1",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9f3",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9f5",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9f7",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9f9",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9fb",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9fd",
        "d17f415d-f872-4675-95be-5bbae05396f9-005ca9ff",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa01",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa03",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa05",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa07",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa09",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa0b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa0d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa0f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa19",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa1b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa1d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa1f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa21",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa23",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa25",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa27",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa29",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa2b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa2d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa2f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa31",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa33",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa35",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa37",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa39",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa3b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa3d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa3f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa41",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa43",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa45",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa47",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa49",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa4b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa4d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa4f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa51",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa53",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa55",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa57",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa59",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa5b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa5d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa5f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa61",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa63",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa65",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa67",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa69",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa6b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa6d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa6f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa71",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa73",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa75",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa77",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa79",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa7b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa7d",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa7f",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa81",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa83",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa85",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa87",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa89",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa8b",
        "d17f415d-f872-4675-95be-5bbae05396f9-005caa8d",
        "85306221-5db6-4543-80a9-1f5d22cb19d3-005cb5f4",
        "85306221-5db6-4543-80a9-1f5d22cb19d3-005cb5f6",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd10",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd12",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd14",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd16",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd18",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd1a",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd1c",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd1e",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd20",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd22",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd24",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd26",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd28",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd2a",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd2c",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd2e",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd30",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd32",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd37",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd3a",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd3c",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd3e",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd40",
        "b11bda26-bf87-4d8e-a688-4de4a45d53fb-005cdd42",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce347",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce349",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce34b",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce34d",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce34f",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce351",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce353",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce355",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce357",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce359",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce35b",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce35d",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce35f",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce361",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce363",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce365",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce36a",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce36d",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce36f",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce371",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce373",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce375",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce377",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce379",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce37b",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce37d",
        "fe20a527-fe32-4ea7-9d9b-da5de017badd-005ce382",
        "cf89a7da-6120-4ca4-9413-496599f29076-005cf1ec",
        "cf89a7da-6120-4ca4-9413-496599f29076-005cf1ee",
        "cf89a7da-6120-4ca4-9413-496599f29076-005cf1f0",
        "4bc87750-9580-4404-82b1-2364135b8478-005d4756"
      ],
      "Id": "0ffed6556145478d95a0e66363f29521",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cdf02a78e99f4ecdba45545380d37744",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Element.IntersectsElement@Revit.Elements.Element[],Revit.Elements.Element[]",
      "Id": "3cfd3e218569445daa9c26f07accfafb",
      "Inputs": [
        {
          "Id": "432714fbbf6744518d323c3566dd7508",
          "Name": "elementSetA",
          "Description": "Input a list of Revit elements to perform the interference check.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edff11b52ed54418908a30059971e06e",
          "Name": "elementSetB",
          "Description": "Input a list of Revit elements to test for interference against elementSetA.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aba0a187015347c6a7a4f22cbd00cf11",
          "Name": "Element[][]",
          "Description": "Element[][]\r\rEach sublist store elements from elementSetB that clash with elementSetA",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a396bfac944548bd9e42c951612a1c4d",
          "Name": "intersectsWith[]",
          "Description": "Element[]\r\rMap the indices from this list to the corresponding indices in the Element[][] output to group the clashing elements.\r\rVisit bimorph.com/bimorph-nodes for support",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds intersections (clash detection) between two sets of elements. Elements in set B that intersect set A are ouput into sublists (the clash result). Self-intersection is automatically prevented if an element is found in both lists.\r\rThe node is optimsed to output rapid results up to 99.5% faster than any other intersection technique.\r\rUse IsElementSupported to check that elements are supported by the node.\r\rVisit bimorph.com/bimorph-nodes for support\n\nElement.IntersectsElement (elementSetA: Element[], elementSetB: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "f49298ba8c6b4e34abd6c630799d9578",
      "Inputs": [
        {
          "Id": "8e83a16209ef4470ab99f42d2808cf55",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "156aa393b3254b5b93cb97a6ac2acca5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "0829e2bfc8504c07b9222ead9d7b7d09",
      "Inputs": [
        {
          "Id": "cfc50260b06846ccb26c6b712747279a",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f50608366bb64eebbb3ee8423d8beba6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nfloors=IN[0]\r\ninters=IN[1]\r\nfinal=[]\r\n\r\nfor ind, i in enumerate(floors):\r\n\tl=len(inters[ind])\r\n\tx=[i]*l\r\n\tfinal.append(x)\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "f67dca3711194a24a1ed60d1eef6edad",
      "Inputs": [
        {
          "Id": "266cfdaf2eb647089d83b331d903ed69",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb797c86f3914e6f86be80b24c157bc3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bae2c753817d41b8b1bbd4ff549ce8be",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0f062be6a90447d28fd02e4469989acc",
      "Inputs": [
        {
          "Id": "27f38ecc6438499085f020802afb2ef1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "161411bc4c3d469d9da723e1de24b734",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95bca56198e44d1a8e3d9728f4183f12",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Rhythm.Revit.Elements.HostObject.TopSurface@Revit.Elements.Element",
      "Id": "f85aeae507c94a9cbfb242e37982d086",
      "Inputs": [
        {
          "Id": "9a56cbb59da047f8b3bb589db8630041",
          "Name": "hostObject",
          "Description": "The host object to retrieve top faces for.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c23fb6bccb6943b3bcef159d20b7a668",
          "Name": "Surface[][]",
          "Description": "Surface[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will return the bottom face or faces for the input host object. This particular method works for ceilings, roofs, or floors.\n\nHostObject.TopSurface (hostObject: Element): Surface[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fe935e4f192a485e98220153c38bfee0",
      "Inputs": [
        {
          "Id": "d0bbdd082d81474ab9a078bce9476bf5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3df8e1a9ff494feaa93a523eff94986b",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3281789ec64740849de465308d2a90df",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Solids",
      "Id": "f9c45faf4bcb45daba82fc43615d2bcf",
      "Inputs": [
        {
          "Id": "6830e3b490b945f6a9436701eeeb0575",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "136abc7d363f4fd48124a4177b6d4ec3",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this Element\n\nElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9e2ac2b22da64c64a25a53c3ca8bc6ca",
      "Inputs": [
        {
          "Id": "1a022698bf0d4739b92500e815ae04a3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04bd429c28614b7fbf68058eb3eb6455",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10db53329541490581b6a5f2796d235f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "007565285b3c4610bac7b6c2ffc540e9",
      "Inputs": [
        {
          "Id": "119fa1d6dd094f74919d47ff549e771b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f186a5ca7654bd6b6bd84b5559a9f4f",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b717436fe924ac490400e4741ed41ba",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "fba9d8e4-0358-49e1-b306-da38076bf26d",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "b0b136e86ed24220b38a99d12ab9f03a",
      "Inputs": [
        {
          "Id": "d317df8a0f3248cf8658197ba0da527d",
          "Name": "InputSurfaces",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b3cfa4ca26c493ba92e8b1dbc5bb1d1",
          "Name": "Planes",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "(Sastrugi_Geometry) This node will extract a plane that best fits a surface."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "6f3b0f6bd7bf41fabd1005c4541433c0",
      "Inputs": [
        {
          "Id": "522cbdc5b09247e69dc8329b555d928c",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5edbb7697f0646adb5cbe4a552425de0",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0804958918d04ca6903a86762e78bc0b",
      "Inputs": [
        {
          "Id": "d79d1f94bd6e45369a0803a4b0d308b4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0031120460174e4282f4988a781b3b42",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82ccdb392e8b4bcd833203ff5c573940",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nsurf=IN[0]\r\nfinal=[]\r\n\r\nfor i in surf:\r\n\tx=i[0][0]\r\n\tif len(x)==1:\r\n\t\tfinal.append(x[0])\r\n\telse:\r\n\t\tfinal.append(x[0])\r\nOUT=final\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "ebd582306059409b98842ddaf2ac11d3",
      "Inputs": [
        {
          "Id": "006b34fe7837486f95e0814e06b52d4c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f39578dc646b470bb4ac4400ea0df7f9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.Offset@double",
      "Id": "300ced66641f4e7a90cf6c4fe21e47e7",
      "Inputs": [
        {
          "Id": "ca27ea434cc440c2acfa94b1dce2a696",
          "Name": "plane",
          "Description": "Autodesk.DesignScript.Geometry.Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c89f59b2476a41aa99a58177f304e211",
          "Name": "dist",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbd12ca6d50a49978c35cad03f8f25ac",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a new Plane offset by this Plane in the normal direction by the specified distance.\n\nPlane.Offset (dist: double = 1): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-100;",
      "Id": "6097d90994654ccfb3ae5a3c2e910858",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27c2069a27c144658bca92c10cd9aefc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ncurves=IN[0]\r\nfinal=[]\r\nfor i in curves:\r\n\ttry:\r\n\t\t\r\n\t\tx=i[0]\r\n\t\tif len(x)==8:\r\n\t\t\tfinal.append(x[0:4])\r\n\t\telse:\r\n\t\t\tfinal.append(x[0])\r\n\texcept:\r\n\t\tfinal.append(None)\r\n\t\t\r\nOUT=final",
      "VariableInputPorts": true,
      "Id": "4d8b7773c95e49959df2b5c461061051",
      "Inputs": [
        {
          "Id": "d4f680f0941946d591ca401536450500",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9dcf0b431ec49d79d5c6e567a2ae009",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "36c12209a8d0465fb9b18b022de6a03a",
      "Inputs": [
        {
          "Id": "2bdf956b6b9d4f51a0e4fc4787996260",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dba92306e40a451f88558a1ec0979b0a",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a16a47f43eb24ca69979e62ecac1e2b7",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "72e087ef-bcf0-47d6-b97e-3cab964e7e96",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "6afd51b5d6eb46a8a0e03081da304555",
      "Inputs": [
        {
          "Id": "fe28dbe3e93b4220ab2a1d4671d90591",
          "Name": "Host",
          "Description": "Floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8fe81c1da154816831e669e35540125",
          "Name": "polycurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c051dd82f08f431e85ef250151b661ba",
          "Name": "Floor",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "383b54d62ceb4332abe5a7b69b44f646",
          "Name": "Opening",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create openings on host floor from given internal closed polycurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a;",
      "Id": "7d6d03765726466b8304598f108be12f",
      "Inputs": [
        {
          "Id": "45432109f86243f48e1d9a3fe029a6a1",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c79b45f09b914d0283f4299b06df2329",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nfloors=IN[0]\r\ncurves=IN[1]\r\n\r\nfinal=[]\r\ncurvf=[]\r\nfor ind, i in enumerate(floors):\r\n\tcurve=curves[ind]\r\n\tif type(curve)!=list:\r\n\t\tcurvf.append(curve)\r\n\t\tfinal.append(i)\t\t\r\nOUT=final, curvf\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "be32b2af12fb48149f3af9b68723eb1a",
      "Inputs": [
        {
          "Id": "6187f2f12c3c46798ca8e0bf76f1b2a5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "504f50553322480dbbbc7904e744957a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3a2617a10d04062b79022c679e506cb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];\na[1];",
      "Id": "799f28b20e36402c90818c31c3d85867",
      "Inputs": [
        {
          "Id": "fa99d05b52614abd8b98253d5cc1396d",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "096c09729aab44bbb4b48a479c6ccc59",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c57ff972424445d58dde60c4cbf91139",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "1a9cee12592f46cb855363b36996e379",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b70daf494a24bd7a48576cc55acaf5e",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "99926f0f6cfb49d8af25490b18a639dc",
      "Inputs": [
        {
          "Id": "34e6dd55a91a4fe381e27c866c632ff4",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bf587a832f946eeb389c7fb74a0dde4",
          "Name": "direction",
          "Description": "Vector to extrude along\n\nVector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4dc583996074a24ab50c0c84bc4dad6",
          "Name": "distance",
          "Description": "Distance to extrude\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "518bef34381b4328855a15d9a5edc303",
          "Name": "Solid",
          "Description": "The extruded Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extrudes a Curve in the specified direction, by the specified distance. Curve must be closed.\n\nCurve.ExtrudeAsSolid (direction: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1), distance: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "150;",
      "Id": "01b22857914744e296111370ae6f86b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1df81428d0af4fbea2f1b930fed0cf94",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "68afb57674ea4b40a88f4b1670e402a3",
      "Inputs": [
        {
          "Id": "21be911bcaaf41e19ffb9f6dabbd4e39",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c72706ea259b4a4b9a4c4fe26c159ab5",
          "Name": "direction",
          "Description": "Vector to extrude along\n\nVector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e2307b48bea4b41bc6978b679e6cd8f",
          "Name": "distance",
          "Description": "Distance to extrude\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "179d83e30b4545359d04ebc92f4e1553",
          "Name": "Solid",
          "Description": "The extruded Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extrudes a Curve in the specified direction, by the specified distance. Curve must be closed.\n\nCurve.ExtrudeAsSolid (direction: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1), distance: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "ee92773b17e3475a9ed5b46ee8cd0fea",
      "Inputs": [
        {
          "Id": "71780b0063164a6891a107a55fb6439f",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e5832734fe24715b588188958884efc",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6f3a6a7118bc4b0a8f83bebcdfc12392",
      "Inputs": [
        {
          "Id": "76ca332e1fd84ce4aa4a7ca94896743a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b697e7d68b6a468a945d50b9aeacf04a",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04a5f50e3a0942fdb91b1ea3bb947a88",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "e6554fb664034f75b7aa65db856d3824",
      "Inputs": [
        {
          "Id": "d8c40f2a405d48bfb687ecf544a2503e",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe68e1e3c71542aaac3dd7774e509096",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "d57f090222e64d9d9d1a7da2798bf4ca",
      "Inputs": [
        {
          "Id": "d19f1fc06b4f4e839e51cb61fdb7e182",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f8211f2c9e242968427299e58208646",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 303,
      "SelectedString": "OST_Mass",
      "NodeType": "ExtensionNode",
      "Id": "c13517069300410bab688d9130cbb661",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8a7ff68be6249089fedc11674089a49",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Orchid.E.RevitMaterial.Material, OrchidRE",
      "SelectedIndex": 34,
      "SelectedString": "Glass",
      "NodeType": "ExtensionNode",
      "Id": "1aaf1917eb084a23a0a3292ac5b1bfbf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "07f299a2df374be5bcebbaedd58cf5e5",
          "Name": "Material",
          "Description": "The selected Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Dropdown for materials"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nOUT=[\"Solid\"+str(i) for i in range(1,len(IN[0])+1)]",
      "VariableInputPorts": true,
      "Id": "37317180b175460e9af860f76c2fbcd8",
      "Inputs": [
        {
          "Id": "88b667139d0840e9bb7b50584f0a2345",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10f99346026649388a50333a993b5d70",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3c14adfb8081448490551bf18482160a",
      "Inputs": [
        {
          "Id": "b840865cbf674901b7012599c67f05ef",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2088d444e1134c1cb8a2c1d68546dfa6",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac8688bd566c4d6fbd68e4f654e61f6a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "04a7ecdd429a42c8a797a74bc39f1e1a",
      "Inputs": [
        {
          "Id": "c8a9db2f5122492da8ffd108d04deb9b",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bafc76d6d95a4cd3a392f4607936495c",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9e364b7472e4eb68f67447306672f8b",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b5f233b527f4ddc84dac6b95d1d65f3",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0fcfc179861498da388f69ceca4512d",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "66f78539-8a80-402e-81dc-28a0737ab127",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "62a631d275614fea97670e90640ebb54",
      "Inputs": [
        {
          "Id": "1283358e3cc94c0d80534ad4c31ad0fd",
          "Name": "elementToBeCut",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5eafb616a6284df189e6e1c5a99aabe8",
          "Name": "cuttingElement",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2536a049501c4b88a5f33745618281ac",
          "Name": "success",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfd2596a54a04751af7a8708a9d517f5",
          "Name": "elementToBeCut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac1215a6cd8045b791da37b1aece5d83",
          "Name": "cuttingElement",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds a solid-solid cut for two model elements (if possible). "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3ba5836-4456-4ae9-a346-781cacf6ef07",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "bdd88c49233c47e087471f4e9b354d2c",
      "Inputs": [
        {
          "Id": "60f9a76d6675420f8f7f9be0c4c1f496",
          "Name": "ElemsOrIDs",
          "Description": "Elements or IDs\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "310614e149f34d758d408fc9abfe3778",
          "Name": "Elems",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select elements in Revit by Element or ID"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "75b95f70-bef0-4e03-b7d0-56a82b06d5c2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "e5a4578b94d84b84b63d47530f431f4e",
      "Inputs": [
        {
          "Id": "89d47bd4c784416b9f1b8d0b1e2d9db3",
          "Name": "element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35ecc10c5efb4b3ea7f5be5bf24c80e8",
          "Name": "Level",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afb2241b77ca4598af8f42dcc86ed231",
          "Name": "Above Level",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the residing and above levels of given element, combined functions from Clockwork and ArchiLab"
    }
  ],
  "Connectors": [
    {
      "Start": "3f5066d5db7c4c388d88fec7433d91ad",
      "End": "432714fbbf6744518d323c3566dd7508",
      "Id": "1c7582207a63460292001d4d9de4c334"
    },
    {
      "Start": "cdf02a78e99f4ecdba45545380d37744",
      "End": "edff11b52ed54418908a30059971e06e",
      "Id": "93decfa089554e5d885ff7085f9297a9"
    },
    {
      "Start": "aba0a187015347c6a7a4f22cbd00cf11",
      "End": "8e83a16209ef4470ab99f42d2808cf55",
      "Id": "799dad2ba2df40de8a714b0cda0e5faa"
    },
    {
      "Start": "a396bfac944548bd9e42c951612a1c4d",
      "End": "cfc50260b06846ccb26c6b712747279a",
      "Id": "ca70fb1394664ee8af9c5cadfcbc7e57"
    },
    {
      "Start": "156aa393b3254b5b93cb97a6ac2acca5",
      "End": "fb797c86f3914e6f86be80b24c157bc3",
      "Id": "2d189ae2d7954377941d2f1bfc88b0c5"
    },
    {
      "Start": "156aa393b3254b5b93cb97a6ac2acca5",
      "End": "6830e3b490b945f6a9436701eeeb0575",
      "Id": "c4e9927266c249b7bb114dbadd1d48b0"
    },
    {
      "Start": "156aa393b3254b5b93cb97a6ac2acca5",
      "End": "b840865cbf674901b7012599c67f05ef",
      "Id": "ed5e19ebd0fb4d58a579780e28cfc47d"
    },
    {
      "Start": "156aa393b3254b5b93cb97a6ac2acca5",
      "End": "89d47bd4c784416b9f1b8d0b1e2d9db3",
      "Id": "d2986b290d0e4b8db74dbb8c0c4795a2"
    },
    {
      "Start": "f50608366bb64eebbb3ee8423d8beba6",
      "End": "266cfdaf2eb647089d83b331d903ed69",
      "Id": "622182eafa6d4f9d9230cb519dfca610"
    },
    {
      "Start": "bae2c753817d41b8b1bbd4ff549ce8be",
      "End": "27f38ecc6438499085f020802afb2ef1",
      "Id": "7e46fd9ca3df4da08975eec30d8d6f59"
    },
    {
      "Start": "95bca56198e44d1a8e3d9728f4183f12",
      "End": "9a56cbb59da047f8b3bb589db8630041",
      "Id": "2bcb22c311c04eb5955d18a15e24f587"
    },
    {
      "Start": "95bca56198e44d1a8e3d9728f4183f12",
      "End": "fe28dbe3e93b4220ab2a1d4671d90591",
      "Id": "21713eb678ad42abbe7e18d46f65b434"
    },
    {
      "Start": "95bca56198e44d1a8e3d9728f4183f12",
      "End": "6187f2f12c3c46798ca8e0bf76f1b2a5",
      "Id": "500f71408c9d4777914f03dffb91c0c4"
    },
    {
      "Start": "c23fb6bccb6943b3bcef159d20b7a668",
      "End": "d0bbdd082d81474ab9a078bce9476bf5",
      "Id": "a883f022227645eb855da3d9fd365599"
    },
    {
      "Start": "c23fb6bccb6943b3bcef159d20b7a668",
      "End": "d317df8a0f3248cf8658197ba0da527d",
      "Id": "ac670e1a5e164c7488784a5952a22e4c"
    },
    {
      "Start": "136abc7d363f4fd48124a4177b6d4ec3",
      "End": "1a022698bf0d4739b92500e815ae04a3",
      "Id": "22fc441b65dd49598b8af5a4dc3a5573"
    },
    {
      "Start": "10db53329541490581b6a5f2796d235f",
      "End": "119fa1d6dd094f74919d47ff549e771b",
      "Id": "d6efe42b94a5460683face91e2b1a4e8"
    },
    {
      "Start": "2b717436fe924ac490400e4741ed41ba",
      "End": "522cbdc5b09247e69dc8329b555d928c",
      "Id": "f0128359a3cf4c76a3725ad60859df40"
    },
    {
      "Start": "7b3cfa4ca26c493ba92e8b1dbc5bb1d1",
      "End": "d79d1f94bd6e45369a0803a4b0d308b4",
      "Id": "c168ca988933442fad98b6eccdae9c11"
    },
    {
      "Start": "7b3cfa4ca26c493ba92e8b1dbc5bb1d1",
      "End": "006b34fe7837486f95e0814e06b52d4c",
      "Id": "e3c8fc5e1225478db2931700c94e4cb1"
    },
    {
      "Start": "5edbb7697f0646adb5cbe4a552425de0",
      "End": "d4f680f0941946d591ca401536450500",
      "Id": "a85fa02999bd4ae4aedc97e46076d763"
    },
    {
      "Start": "f39578dc646b470bb4ac4400ea0df7f9",
      "End": "ca27ea434cc440c2acfa94b1dce2a696",
      "Id": "0fedfbbcbd4a488ab4b189427663b54d"
    },
    {
      "Start": "bbd12ca6d50a49978c35cad03f8f25ac",
      "End": "0f186a5ca7654bd6b6bd84b5559a9f4f",
      "Id": "e5c0c530b98f4f73ba139f3cf8426fd5"
    },
    {
      "Start": "27c2069a27c144658bca92c10cd9aefc",
      "End": "c89f59b2476a41aa99a58177f304e211",
      "Id": "a7812d79f39944189067a606297fd8a3"
    },
    {
      "Start": "f9dcf0b431ec49d79d5c6e567a2ae009",
      "End": "2bdf956b6b9d4f51a0e4fc4787996260",
      "Id": "5ef74087b1834b64b3270fc511bc99b1"
    },
    {
      "Start": "f9dcf0b431ec49d79d5c6e567a2ae009",
      "End": "504f50553322480dbbbc7904e744957a",
      "Id": "135f0cfedf2342d5aa7e15a7d710eb2e"
    },
    {
      "Start": "a16a47f43eb24ca69979e62ecac1e2b7",
      "End": "c8fe81c1da154816831e669e35540125",
      "Id": "e2d174e4d5334a8aaee37b2056e297d7"
    },
    {
      "Start": "383b54d62ceb4332abe5a7b69b44f646",
      "End": "45432109f86243f48e1d9a3fe029a6a1",
      "Id": "485000bb1e27464384787756e5526c2f"
    },
    {
      "Start": "d3a2617a10d04062b79022c679e506cb",
      "End": "fa99d05b52614abd8b98253d5cc1396d",
      "Id": "7792de84211a4044acc7d8f7a05eba67"
    },
    {
      "Start": "c57ff972424445d58dde60c4cbf91139",
      "End": "34e6dd55a91a4fe381e27c866c632ff4",
      "Id": "e5d70b9ed73f437aa1700320fcbe196b"
    },
    {
      "Start": "c57ff972424445d58dde60c4cbf91139",
      "End": "21be911bcaaf41e19ffb9f6dabbd4e39",
      "Id": "7f4353d13ae74b9baa227420d978d8b9"
    },
    {
      "Start": "2b70daf494a24bd7a48576cc55acaf5e",
      "End": "1bf587a832f946eeb389c7fb74a0dde4",
      "Id": "a8a17d70ffa44060b06594c1ab352858"
    },
    {
      "Start": "2b70daf494a24bd7a48576cc55acaf5e",
      "End": "71780b0063164a6891a107a55fb6439f",
      "Id": "239e21d83494472ea84f564668bfc696"
    },
    {
      "Start": "518bef34381b4328855a15d9a5edc303",
      "End": "b697e7d68b6a468a945d50b9aeacf04a",
      "Id": "c69a39af445240bcb342f2f4285127c8"
    },
    {
      "Start": "1df81428d0af4fbea2f1b930fed0cf94",
      "End": "e4dc583996074a24ab50c0c84bc4dad6",
      "Id": "eb011d22c2e049ce9b9fa5337ff8f12c"
    },
    {
      "Start": "1df81428d0af4fbea2f1b930fed0cf94",
      "End": "5e2307b48bea4b41bc6978b679e6cd8f",
      "Id": "4820927d845a408d9dbc40f1360eb8c5"
    },
    {
      "Start": "179d83e30b4545359d04ebc92f4e1553",
      "End": "76ca332e1fd84ce4aa4a7ca94896743a",
      "Id": "a18a3835e5bf400fb0131b66e83ee1ed"
    },
    {
      "Start": "3e5832734fe24715b588188958884efc",
      "End": "c72706ea259b4a4b9a4c4fe26c159ab5",
      "Id": "297508a6833246c09378e8d1270e6964"
    },
    {
      "Start": "04a5f50e3a0942fdb91b1ea3bb947a88",
      "End": "d8c40f2a405d48bfb687ecf544a2503e",
      "Id": "a9dd8d4d296643af8cdc4079f5b945b9"
    },
    {
      "Start": "fe68e1e3c71542aaac3dd7774e509096",
      "End": "d19f1fc06b4f4e839e51cb61fdb7e182",
      "Id": "4d11ce39a9024a71ad87853c3e5644b4"
    },
    {
      "Start": "0f8211f2c9e242968427299e58208646",
      "End": "88b667139d0840e9bb7b50584f0a2345",
      "Id": "3812643803e541fda36f3953e486971c"
    },
    {
      "Start": "0f8211f2c9e242968427299e58208646",
      "End": "c8a9db2f5122492da8ffd108d04deb9b",
      "Id": "77e5b7965286474b8d7d75c247812e2f"
    },
    {
      "Start": "d8a7ff68be6249089fedc11674089a49",
      "End": "bafc76d6d95a4cd3a392f4607936495c",
      "Id": "7455c673a5f643d792ca2de83ab67fbb"
    },
    {
      "Start": "07f299a2df374be5bcebbaedd58cf5e5",
      "End": "a9e364b7472e4eb68f67447306672f8b",
      "Id": "cbcf9886e7f34b0aadad14bf621fd1c3"
    },
    {
      "Start": "10f99346026649388a50333a993b5d70",
      "End": "7b5f233b527f4ddc84dac6b95d1d65f3",
      "Id": "29a44c86beb6455b9e79324092bdbda7"
    },
    {
      "Start": "a0fcfc179861498da388f69ceca4512d",
      "End": "60f9a76d6675420f8f7f9be0c4c1f496",
      "Id": "8de40ab734854c2295e5760ccfb09809"
    }
  ],
  "Dependencies": [
    "fba9d8e4-0358-49e1-b306-da38076bf26d",
    "72e087ef-bcf0-47d6-b97e-3cab964e7e96",
    "66f78539-8a80-402e-81dc-28a0737ab127",
    "c3ba5836-4456-4ae9-a346-781cacf6ef07",
    "75b95f70-bef0-4e03-b7d0-56a82b06d5c2"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "3.0.3",
      "ReferenceType": "Package",
      "Nodes": [
        "3cfd3e218569445daa9c26f07accfafb"
      ]
    },
    {
      "Name": "Rhythm",
      "Version": "2020.1.22",
      "ReferenceType": "Package",
      "Nodes": [
        "f85aeae507c94a9cbfb242e37982d086"
      ]
    },
    {
      "Name": "Sastrugi",
      "Version": "2.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "b0b136e86ed24220b38a99d12ab9f03a"
      ]
    },
    {
      "Name": "Chynamo",
      "Version": "0.8.5",
      "ReferenceType": "Package",
      "Nodes": [
        "6afd51b5d6eb46a8a0e03081da304555",
        "e5a4578b94d84b84b63d47530f431f4e"
      ]
    },
    {
      "Name": "Orchid",
      "Version": "203.3.0.7815",
      "ReferenceType": "Package",
      "Nodes": [
        "1aaf1917eb084a23a0a3292ac5b1bfbf"
      ]
    },
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "62a631d275614fea97670e90640ebb54"
      ]
    },
    {
      "Name": "Modelical",
      "Version": "2.2.19",
      "ReferenceType": "Package",
      "Nodes": [
        "bdd88c49233c47e087471f4e9b354d2c"
      ]
    }
  ],
  "Bindings": [
    {
      "NodeId": "04a7ecdd-429a-42c8-a797-a74bc39f1e1a",
      "Binding": {
        "ByGeometry_InClassDecl-1_InFunctionScope-1_Instance1_04a7ecdd-429a-42c8-a797-a74bc39f1e1a": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.0.7460",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 57228.890512278558,
      "EyeY": 244495.76777041552,
      "EyeZ": 67054.9056265451,
      "LookX": 645.6283201858605,
      "LookY": -9525.058575106581,
      "LookZ": -11586.480110661403,
      "UpX": 0.025258329144407052,
      "UpY": 0.891006524188378,
      "UpZ": -0.45328731579716869
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Select Model Elements",
        "Id": "61d13dd652e04b7996b392f581420886",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 189.60000000000008,
        "Y": 212.00000000000003
      },
      {
        "ShowGeometry": true,
        "Name": "Select Model Elements",
        "Id": "0ffed6556145478d95a0e66363f29521",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 188.00000000000011,
        "Y": 375.19999999999993
      },
      {
        "ShowGeometry": true,
        "Name": "Element.IntersectsElement",
        "Id": "3cfd3e218569445daa9c26f07accfafb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 640.98733557431183,
        "Y": 269.463694965226
      },
      {
        "ShowGeometry": true,
        "Name": "Void",
        "Id": "f49298ba8c6b4e34abd6c630799d9578",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1138.1707829701224,
        "Y": 341.75666173935747
      },
      {
        "ShowGeometry": true,
        "Name": "Floor",
        "Id": "0829e2bfc8504c07b9222ead9d7b7d09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1138.7738514656444,
        "Y": 170.48017497478321
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f67dca3711194a24a1ed60d1eef6edad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1294.9402519658759,
        "Y": 126.15639456457194
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "0f062be6a90447d28fd02e4469989acc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1504.6812151883357,
        "Y": 125.8876448355428
      },
      {
        "ShowGeometry": false,
        "Name": "ʳʰʸᵗʰᵐ|HostObject.TopSurface",
        "Id": "f85aeae507c94a9cbfb242e37982d086",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1779.9492655627978,
        "Y": 125.39435622754374
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "fe935e4f192a485e98220153c38bfee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2100.4664660724447,
        "Y": 132.32878566911495
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Solids",
        "Id": "f9c45faf4bcb45daba82fc43615d2bcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1359.4951978696809,
        "Y": 460.52641897387127
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "9e2ac2b22da64c64a25a53c3ca8bc6ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1695.474458132979,
        "Y": 459.10720671338049
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Intersect",
        "Id": "007565285b3c4610bac7b6c2ffc540e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3184.3698680626208,
        "Y": 442.37748791083521
      },
      {
        "ShowGeometry": true,
        "Name": "❄_Surface Plane",
        "Id": "b0b136e86ed24220b38a99d12ab9f03a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2111.89244111201,
        "Y": 238.16247037822953
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PerimeterCurves",
        "Id": "6f3b0f6bd7bf41fabd1005c4541433c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3641.49223764612,
        "Y": 441.712451169663
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "0804958918d04ca6903a86762e78bc0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2641.7228188473864,
        "Y": 232.4135069748009
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "ebd582306059409b98842ddaf2ac11d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2461.7685360311989,
        "Y": 477.03046008713278
      },
      {
        "ShowGeometry": true,
        "Name": "Plane.Offset",
        "Id": "300ced66641f4e7a90cf6c4fe21e47e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2737.40050998267,
        "Y": 487.1196108365707
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6097d90994654ccfb3ae5a3c2e910858",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2506.2562419467477,
        "Y": 560.37860112312364
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "4d8b7773c95e49959df2b5c461061051",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3988.42433341743,
        "Y": 440.470863951503
      },
      {
        "ShowGeometry": true,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "36c12209a8d0465fb9b18b022de6a03a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4227.1367235696407,
        "Y": 442.66391772756953
      },
      {
        "ShowGeometry": true,
        "Name": "OpeningByClosedPolyCurve",
        "Id": "6afd51b5d6eb46a8a0e03081da304555",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4575.6728912053741,
        "Y": 386.35698890840911
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7d6d03765726466b8304598f108be12f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4907.7083922261454,
        "Y": 403.18755373110832
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "be32b2af12fb48149f3af9b68723eb1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4124.8813891890277,
        "Y": 146.16530183184634
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "799f28b20e36402c90818c31c3d85867",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4394.8006767574789,
        "Y": 90.59185751261748
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "1a9cee12592f46cb855363b36996e379",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4395.5966072124629,
        "Y": 184.23128645271322
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.ExtrudeAsSolid",
        "Id": "99926f0f6cfb49d8af25490b18a639dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4781.50129674701,
        "Y": 17.77111475714247
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "01b22857914744e296111370ae6f86b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4406.934556355427,
        "Y": 264.28451203599263
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.ExtrudeAsSolid",
        "Id": "68afb57674ea4b40a88f4b1670e402a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4779.616160165463,
        "Y": -250.6182317469549
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.Reverse",
        "Id": "ee92773b17e3475a9ed5b46ee8cd0fea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4425.5699037545746,
        "Y": -214.4858287687382
      },
      {
        "ShowGeometry": false,
        "Name": "List Create",
        "Id": "6f3a6a7118bc4b0a8f83bebcdfc12392",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5101.8596272407221,
        "Y": -71.476755249922121
      },
      {
        "ShowGeometry": false,
        "Name": "List.Transpose",
        "Id": "e6554fb664034f75b7aa65db856d3824",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5336.051582205364,
        "Y": -103.81754903075347
      },
      {
        "ShowGeometry": false,
        "Name": "Solid.ByUnion",
        "Id": "d57f090222e64d9d9d1a7da2798bf4ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5551.6473898229178,
        "Y": -121.2193032166893
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "c13517069300410bab688d9130cbb661",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5566.8383591426664,
        "Y": -39.999132539944128
      },
      {
        "ShowGeometry": true,
        "Name": "Materials",
        "Id": "1aaf1917eb084a23a0a3292ac5b1bfbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5572.1447898311153,
        "Y": 40.355389313701892
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "37317180b175460e9af860f76c2fbcd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5778.0062050294127,
        "Y": -121.80606765811447
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "3c14adfb8081448490551bf18482160a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1375.9267637583737,
        "Y": 619.56771772230957
      },
      {
        "ShowGeometry": false,
        "Name": "DirectShape.ByGeometry",
        "Id": "04a7ecdd429a42c8a797a74bc39f1e1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6069.9329503778645,
        "Y": 54.032590161297435
      },
      {
        "ShowGeometry": true,
        "Name": "Element.CutGeometry",
        "Id": "62a631d275614fea97670e90640ebb54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6476.9723477487541,
        "Y": -219.521160625579
      },
      {
        "ShowGeometry": true,
        "Name": "SelectInRevit",
        "Id": "bdd88c49233c47e087471f4e9b354d2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6449.3018510145312,
        "Y": 52.19420698661753
      },
      {
        "ShowGeometry": true,
        "Name": "Levels",
        "Id": "e5a4578b94d84b84b63d47530f431f4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1782.4752216891707,
        "Y": 760.30997919863444
      }
    ],
    "Annotations": [],
    "X": -2586.017835527321,
    "Y": 257.73315346042284,
    "Zoom": 0.67457976690019084
  }
}