{
  "Uuid": "c80838fa-a808-40a3-a6f5-caea5c067e8c",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Creating Views",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\130\\Desktop\\WIP\\29. Creating Views with scope box assigned and placing them according to view types\\VIEW.xlsx",
      "InputValue": ".\\VIEW.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "dcdeb5c7fd8f4abb9feb29d0f9d01c7d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e4b5e98f6e9d417cb2e9f7ee6fb312b4",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ffe306b930604483b6199a016ce1bfc8",
      "Inputs": [
        {
          "Id": "c5042237bed84f43af71f45568b97052",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e7f5a02c79c4ef298dc36bbc6b0afd2",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "7331d0937edc49cf8ab9b0b853da1139",
      "Inputs": [
        {
          "Id": "a3c1e6ac6e9d49739bd5320426c874db",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d7c279a67ad4445a29fb0c6f9571f9a",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e634879a78b403ea8bec2d1720e5231",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40bc9f64df934449919bc44506f8868b",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd05773e55584371bb06b33fcffa8f6a",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";",
      "Id": "ceb4c691406a4c2d8e717307c9818a9c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25e318c4c2fb4e47a06ee9c19a1b04ce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "562f3fd1750c47bd98c0e964dd1ad29d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1a3df918f794f9c98bdbb194bb741a2",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "e8d75f049b2a4687aeb4d859852e7b2c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e19cd5197cff4d8fb41972231083907a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "a668b366b31f4d4aa732114578ce1185",
      "Inputs": [
        {
          "Id": "4e840a2c19da468ab9c725593db61f45",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89e73a2c03fd4a858e6900cb1f6e15bc",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "feb6b6bf6d154a07a6c48929d65ab6d2",
      "Inputs": [
        {
          "Id": "21304a0936dd4a9cb48c79ae1c572040",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "110f2b07533f4070a8c292707696cfb5",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr #This is .NET's Common Language Runtime. It's an execution environment\r\n#that is able to execute code from several different languages.\r\nimport sys #sys is a fundamental Python library - here, we're using it to load in\r\n#the standard IronPython libraries\r\nsys.path.append('C:\\Program Files (x86)\\IronPython 2.7\\Lib') #Imports the\r\n#standard IronPython libraries, which cover everything from servers and\r\n#encryption through to regular expressions.\r\nimport System #The System namespace at the root of .NET\r\nfrom System import Array #.NET class for handling array information\r\nfrom System.Collections.Generic import * #Lets you handle generics. Revit's API\r\n#sometimes wants hard-typed 'generic' lists, called ILists. If you don't need\r\n#these you can delete this line.\r\nclr.AddReference('ProtoGeometry')  #A Dynamo library for its proxy geometry\r\n#classes. You'll only need this if you're interacting with geometry.\r\nfrom Autodesk.DesignScript.Geometry import * #Loads everything in Dynamo's\r\n#geometry library\r\nclr.AddReference(\"RevitNodes\") #Dynamo's nodes for Revit\r\nimport Revit #Loads in the Revit namespace in RevitNodes\r\nclr.ImportExtensions(Revit.Elements) #More loading of Dynamo's Revit libraries\r\nclr.ImportExtensions(Revit.GeometryConversion) #More loading of Dynamo's\r\n#Revit libraries. You'll only need this if you're interacting with geometry.\r\nclr.AddReference(\"RevitServices\") #Dynamo's classes for handling Revit documents\r\nimport RevitServices \r\nfrom RevitServices.Persistence import DocumentManager #An internal Dynamo class\r\n#that keeps track of the document that Dynamo is currently attached to\r\nfrom RevitServices.Transactions import TransactionManager #A Dynamo class for\r\n#opening and closing transactions to change the Revit document's database\r\n\r\nclr.AddReference(\"RevitAPI\") #Adding reference to Revit's API DLLs\r\nclr.AddReference(\"RevitAPIUI\") #Adding reference to Revit's API DLLs\r\n\r\nimport Autodesk #Loads the Autodesk namespace\r\nfrom Autodesk.Revit.DB import * #Loading Revit's API classes\r\nfrom Autodesk.Revit.UI import * #Loading Revit's API UI classes  \r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument #Finally, setting up handles to the active Revit document\r\nuiapp = DocumentManager.Instance.CurrentUIApplication #Setting a handle to the active Revit UI document\r\napp = uiapp.Application  #Setting a handle to the currently-open instance of the Revit application\r\nuidoc = uiapp.ActiveUIDocument #Setting a handle to the currently-open instance of the Revit UI application\r\n\r\n\r\n############################# INPUT\r\n\r\nlevel=IN[0][0]\r\nscope_box1=IN[0][1]\r\nfamily_type=IN[0][2]\r\nview_type=IN[0][3]\r\nview_name=IN[0][4]\r\n\r\n\r\n############################ View Creation\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\ncoll=FilteredElementCollector(doc).OfClass(ViewFamilyType).ToElements()\r\n\r\nlevel1=FilteredElementCollector(doc).OfClass(Level).ToElements()\r\nscope_boxes= FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_VolumeOfInterest).ToElements()\r\n\r\n\r\nviewTypeId1=[]\r\nfor name in view_type:\r\n\t\r\n\tfor i in coll:\r\n\t\tnam=i.get_Parameter(BuiltInParameter.ALL_MODEL_TYPE_NAME).AsString()\r\n\t\tif nam==name:\r\n\t\t\tviewTypeId1.append(i.Id)\r\n\t\t\t\r\nlevelId=[]\r\nfor name in level:\r\n\tfor j in level1:\r\n\t\tnam=j.Name\r\n\t\tid=j.Id\r\n\t\tif nam==name:\r\n\t\t\tlevelId.append(id)\r\n\r\nscope_box=[]\r\nscope_box_id=[]\r\nfor name in scope_box1:\r\n\tfor j in scope_boxes:\r\n\t\tnam=j.Name\r\n\t\tid=j.Id\r\n\t\tif nam==name:\r\n\t\t\tscope_box.append(j)\r\n\t\t\tscope_box_id.append(id)\r\nviews=[]\r\n\r\nfor index,name in enumerate(view_name):\r\n\tview=ViewPlan.Create(doc,viewTypeId1[index], levelId[index])\r\n\tview.Name=name\r\n\tview.CropBoxActive=False\r\n\tview.CropBoxVisible=False\r\n\tscope_box_param = view.get_Parameter(BuiltInParameter.VIEWER_VOLUME_OF_INTEREST_CROP)\r\n\tscope_box_param.Set(scope_box_id[index])\r\n\tviews.append(view)\t\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\t\r\n\r\n\r\nOUT= views, scope_box",
      "VariableInputPorts": true,
      "Id": "b5e0677122aa4b428cfade269e552959",
      "Inputs": [
        {
          "Id": "66c22e83cd6a444881bc7461da13bcaf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72661ee7447242f2a3be7f2b69284ae1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0caa2939d944003a98e2ddf558e1a43",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Family and Type\";\na[3];",
      "Id": "8955424141134672b9637664bb263265",
      "Inputs": [
        {
          "Id": "cb00eb079d9748258dfffca12b215f14",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e8abcb6b88e4c0ebc64b057bac88699",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "446e4333f3674e17907f2ec9bff0a0cb",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "RhythmUI.ViewFamilyTypes, RhythmUI",
      "SelectedIndex": -1,
      "SelectedString": "",
      "NodeType": "ExtensionNode",
      "Id": "30a83984881a4c9dbf72c6859c87125d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "77db8d06ffb14e9186677334cfe17cd4",
          "Name": "ViewFamilyTypes",
          "Description": "The selected ViewFamilyTypes",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a view family type from your file"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.ElementType.Duplicate@string",
      "Id": "0f45c3452efc4adfafab112317193ab6",
      "Inputs": [
        {
          "Id": "f3772a03b4fb4432a5d6402e3babf1c8",
          "Name": "elementType",
          "Description": "Revit.Elements.ElementType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f99443c83e7749ffb990cca12080d9bb",
          "Name": "name",
          "Description": "The new name of the element type.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cafcebdc352141fe80649fb8277cb29a",
          "Name": "ElementType",
          "Description": "The duplicated element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Duplicates an existing element type and assigns it a new name.\n\nElementType.Duplicate (name: string): ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "14fed58ec8bb4b879988e93183c2fc35",
      "Inputs": [
        {
          "Id": "18922b101c1f4ffd82d6c23295a3fcb7",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8a8653c02544108bd522b449fb4751b",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40ceea6377574ab387b6fa13e49b8e1b",
          "Name": "passThrough",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Views.Views.SetViewTemplate@Revit.Elements.Views.View,Revit.Elements.Views.View",
      "Id": "b45a92b0c9d84f6e9b9c8341b14df955",
      "Inputs": [
        {
          "Id": "4df785688d854d469c7909dfbfa4a62c",
          "Name": "view",
          "Description": "View that template will be applied to.\n\nView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8bd538ceb604dd29e1fb2b6a3f00e8e",
          "Name": "viewTemplate",
          "Description": "View Template that will be applied to View.\n\nView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f40be6c191e48db850cb9b7430b1d10",
          "Name": "View",
          "Description": "View",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set View Template for a View.\n\nViews.SetViewTemplate (view: View, viewTemplate: View): View"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[5];",
      "Id": "10682c50937b49cbaa9e47bb93439df6",
      "Inputs": [
        {
          "Id": "e409e40d9ea846bc987dc927b5053139",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3091f581686f4d1790d45ccbdbb5bc69",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Orchid.RevitProject.Views.ViewTemplate.All@bool",
      "Id": "a866c2cfbd0a476da7c73fc1b421a493",
      "Inputs": [
        {
          "Id": "527cee0eed88419190b825b5ef07bee7",
          "Name": "condense",
          "Description": "Condense to shortest feasible output?\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e30798816c74048bb5ea6ac3b064ad5",
          "Name": "ViewTemplate",
          "Description": "ViewTemplate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "All view template in current document Note: Due to limitations in dynamo will 3D templates fail!\n\nViewTemplate.All (condense: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr #This is .NET's Common Language Runtime. It's an execution environment\r\n#that is able to execute code from several different languages.\r\nimport sys #sys is a fundamental Python library - here, we're using it to load in\r\n#the standard IronPython libraries\r\nsys.path.append('C:\\Program Files (x86)\\IronPython 2.7\\Lib') #Imports the\r\n#standard IronPython libraries, which cover everything from servers and\r\n#encryption through to regular expressions.\r\nimport System #The System namespace at the root of .NET\r\nfrom System import Array #.NET class for handling array information\r\nfrom System.Collections.Generic import * #Lets you handle generics. Revit's API\r\n#sometimes wants hard-typed 'generic' lists, called ILists. If you don't need\r\n#these you can delete this line.\r\nclr.AddReference('ProtoGeometry')  #A Dynamo library for its proxy geometry\r\n#classes. You'll only need this if you're interacting with geometry.\r\nfrom Autodesk.DesignScript.Geometry import * #Loads everything in Dynamo's\r\n#geometry library\r\nclr.AddReference(\"RevitNodes\") #Dynamo's nodes for Revit\r\nimport Revit #Loads in the Revit namespace in RevitNodes\r\nclr.ImportExtensions(Revit.Elements) #More loading of Dynamo's Revit libraries\r\nclr.ImportExtensions(Revit.GeometryConversion) #More loading of Dynamo's\r\n#Revit libraries. You'll only need this if you're interacting with geometry.\r\nclr.AddReference(\"RevitServices\") #Dynamo's classes for handling Revit documents\r\nimport RevitServices \r\nfrom RevitServices.Persistence import DocumentManager #An internal Dynamo class\r\n#that keeps track of the document that Dynamo is currently attached to\r\nfrom RevitServices.Transactions import TransactionManager #A Dynamo class for\r\n#opening and closing transactions to change the Revit document's database\r\n\r\nclr.AddReference(\"RevitAPI\") #Adding reference to Revit's API DLLs\r\nclr.AddReference(\"RevitAPIUI\") #Adding reference to Revit's API DLLs\r\n\r\nimport Autodesk #Loads the Autodesk namespace\r\nfrom Autodesk.Revit.DB import * #Loading Revit's API classes\r\nfrom Autodesk.Revit.UI import * #Loading Revit's API UI classes  \r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument #Finally, setting up handles to the active Revit document\r\nuiapp = DocumentManager.Instance.CurrentUIApplication #Setting a handle to the active Revit UI document\r\napp = uiapp.Application  #Setting a handle to the currently-open instance of the Revit application\r\nuidoc = uiapp.ActiveUIDocument #Setting a handle to the currently-open instance of the Revit UI application\r\n\r\n\r\ntemp=[UnwrapElement(i) for i in IN[0]]\r\nviewtemp_name=IN[1]\r\nnames=[]\r\ntemp_new=[]\r\nfor tem in temp:\r\n\tname=tem.Name\r\n\t\r\n\tif name in viewtemp_name:\r\n\t\ttemp_new.append(tem)\r\n\t\r\n\tnames.append(name)\r\n\t\r\nOUT= names, temp_new",
      "VariableInputPorts": true,
      "Id": "518aecc2a53247c8932e045b01a9b6b1",
      "Inputs": [
        {
          "Id": "bbf6aeb2a8d94dbc87e873b125e2488b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ef17d61845b40538e097e52dc8cc77a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abb559426eb0493fafa52d4db8d75cdf",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "t[1];",
      "Id": "8712f56be4a2409b80dea724cfb33033",
      "Inputs": [
        {
          "Id": "77bd24c0c6cc417dbe606b02666f145e",
          "Name": "t",
          "Description": "t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7507eda431a2484d96793042e2a910cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "e4b5e98f6e9d417cb2e9f7ee6fb312b4",
      "End": "c5042237bed84f43af71f45568b97052",
      "Id": "d01a1ce54c474f20b9f9d43d88ce929c"
    },
    {
      "Start": "5e7f5a02c79c4ef298dc36bbc6b0afd2",
      "End": "a3c1e6ac6e9d49739bd5320426c874db",
      "Id": "a1569563421f46a0bda897c2a4629a3b"
    },
    {
      "Start": "fd05773e55584371bb06b33fcffa8f6a",
      "End": "4e840a2c19da468ab9c725593db61f45",
      "Id": "1aeab0fc69a04daaaa162a986e2f2da3"
    },
    {
      "Start": "25e318c4c2fb4e47a06ee9c19a1b04ce",
      "End": "8d7c279a67ad4445a29fb0c6f9571f9a",
      "Id": "616f874ea27049d8b5728a22c4b616ac"
    },
    {
      "Start": "d1a3df918f794f9c98bdbb194bb741a2",
      "End": "40bc9f64df934449919bc44506f8868b",
      "Id": "3c74416c675d4a25ace123c194e4541b"
    },
    {
      "Start": "e19cd5197cff4d8fb41972231083907a",
      "End": "3e634879a78b403ea8bec2d1720e5231",
      "Id": "9018f5c756b34d87915246f0738e8cae"
    },
    {
      "Start": "89e73a2c03fd4a858e6900cb1f6e15bc",
      "End": "21304a0936dd4a9cb48c79ae1c572040",
      "Id": "79ebfcc809444b4eabd6d5d1c695e536"
    },
    {
      "Start": "110f2b07533f4070a8c292707696cfb5",
      "End": "18922b101c1f4ffd82d6c23295a3fcb7",
      "Id": "c04bf1c9b4a24fc9b3bd016e5bff2ee9"
    },
    {
      "Start": "110f2b07533f4070a8c292707696cfb5",
      "End": "cb00eb079d9748258dfffca12b215f14",
      "Id": "52a0f229249144fb881c8459a614099a"
    },
    {
      "Start": "b0caa2939d944003a98e2ddf558e1a43",
      "End": "4df785688d854d469c7909dfbfa4a62c",
      "Id": "aebcd89143c144a99e48964e50b1d46b"
    },
    {
      "Start": "446e4333f3674e17907f2ec9bff0a0cb",
      "End": "f99443c83e7749ffb990cca12080d9bb",
      "Id": "e6d21825195f4daf919c51c8cb0b2f28"
    },
    {
      "Start": "77db8d06ffb14e9186677334cfe17cd4",
      "End": "f3772a03b4fb4432a5d6402e3babf1c8",
      "Id": "7d8934eb08144220a7f4f5e7e470774a"
    },
    {
      "Start": "cafcebdc352141fe80649fb8277cb29a",
      "End": "e8a8653c02544108bd522b449fb4751b",
      "Id": "0ed13d3ce0a24ed3b0f3238ac17650d3"
    },
    {
      "Start": "40ceea6377574ab387b6fa13e49b8e1b",
      "End": "66c22e83cd6a444881bc7461da13bcaf",
      "Id": "1936da05ace3484ebc642161c367224a"
    },
    {
      "Start": "40ceea6377574ab387b6fa13e49b8e1b",
      "End": "e409e40d9ea846bc987dc927b5053139",
      "Id": "4cdfe4d27ebb432da920fbbd0914609a"
    },
    {
      "Start": "3091f581686f4d1790d45ccbdbb5bc69",
      "End": "4ef17d61845b40538e097e52dc8cc77a",
      "Id": "d72ca386dbb84149a9570d5f8f962407"
    },
    {
      "Start": "0e30798816c74048bb5ea6ac3b064ad5",
      "End": "bbf6aeb2a8d94dbc87e873b125e2488b",
      "Id": "edaca3d3da9148eeb6721c821a35990a"
    },
    {
      "Start": "abb559426eb0493fafa52d4db8d75cdf",
      "End": "77bd24c0c6cc417dbe606b02666f145e",
      "Id": "dfef490823c34fd7881096ce7ddfa2fd"
    },
    {
      "Start": "7507eda431a2484d96793042e2a910cf",
      "End": "d8bd538ceb604dd29e1fb2b6a3f00e8e",
      "Id": "98fa972807c74871986fc147c61b8491"
    }
  ],
  "Dependencies": [
    "ecce77dc-1290-438e-a056-970b256fd553"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Rhythm",
      "Version": "2021.4.2",
      "ReferenceType": "Package",
      "Nodes": [
        "30a83984881a4c9dbf72c6859c87125d"
      ]
    },
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "14fed58ec8bb4b879988e93183c2fc35"
      ]
    },
    {
      "Name": "archi-lab.net",
      "Version": "2021.25.2621",
      "ReferenceType": "Package",
      "Nodes": [
        "b45a92b0c9d84f6e9b9c8341b14df955"
      ]
    },
    {
      "Name": "Orchid",
      "Version": "206.3.0.7800",
      "ReferenceType": "Package",
      "Nodes": [
        "a866c2cfbd0a476da7c73fc1b421a493"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "dcdeb5c7fd8f4abb9feb29d0f9d01c7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -382.09561902354221,
        "Y": 625.03571500895646
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "ffe306b930604483b6199a016ce1bfc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -64.3374980958929,
        "Y": 624.24117415498313
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "7331d0937edc49cf8ab9b0b853da1139",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 128.53963994883338,
        "Y": 624.495847110547
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ceb4c691406a4c2d8e717307c9818a9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -78.14011875561107,
        "Y": 711.82284840656757
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "562f3fd1750c47bd98c0e964dd1ad29d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -90.44210186675366,
        "Y": 863.24039372562652
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "e8d75f049b2a4687aeb4d859852e7b2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -91.117728027365843,
        "Y": 801.09998796248942
      },
      {
        "ShowGeometry": true,
        "Name": "List.RestOfItems",
        "Id": "a668b366b31f4d4aa732114578ce1185",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 425.47853242242536,
        "Y": 625.66435826484815
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "feb6b6bf6d154a07a6c48929d65ab6d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 661.629347746496,
        "Y": 625.55273305076855
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "b5e0677122aa4b428cfade269e552959",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1989.6141840126963,
        "Y": 624.62404053059811
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8955424141134672b9637664bb263265",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 915.46626775101777,
        "Y": 803.74824531783179
      },
      {
        "ShowGeometry": true,
        "Name": "ViewFamilyTypes",
        "Id": "30a83984881a4c9dbf72c6859c87125d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 918.341525209205,
        "Y": 721.2129809591022
      },
      {
        "ShowGeometry": true,
        "Name": "ElementType.Duplicate",
        "Id": "0f45c3452efc4adfafab112317193ab6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1226.6478298441771,
        "Y": 757.31332788732584
      },
      {
        "ShowGeometry": true,
        "Name": "Passthrough",
        "Id": "14fed58ec8bb4b879988e93183c2fc35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1557.5969173466203,
        "Y": 623.09982880455073
      },
      {
        "ShowGeometry": true,
        "Name": "Views.SetViewTemplate",
        "Id": "b45a92b0c9d84f6e9b9c8341b14df955",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2429.7153589249633,
        "Y": 623.10784746979368
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "10682c50937b49cbaa9e47bb93439df6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1864.6781452963894,
        "Y": 891.34847481161671
      },
      {
        "ShowGeometry": true,
        "Name": "ViewTemplate.All",
        "Id": "a866c2cfbd0a476da7c73fc1b421a493",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1720.0805305190438,
        "Y": 976.346668120554
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "518aecc2a53247c8932e045b01a9b6b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2083.7662898316,
        "Y": 975.57934298010593
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8712f56be4a2409b80dea724cfb33033",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2281.4549452173819,
        "Y": 979.3597500983185
      }
    ],
    "Annotations": [
      {
        "Id": "9a15012fc7ff4ae2a7d5693517eac390",
        "Title": "Excel Data",
        "Nodes": [
          "dcdeb5c7fd8f4abb9feb29d0f9d01c7d",
          "ffe306b930604483b6199a016ce1bfc8",
          "7331d0937edc49cf8ab9b0b853da1139",
          "ceb4c691406a4c2d8e717307c9818a9c",
          "562f3fd1750c47bd98c0e964dd1ad29d",
          "e8d75f049b2a4687aeb4d859852e7b2c",
          "a668b366b31f4d4aa732114578ce1185",
          "feb6b6bf6d154a07a6c48929d65ab6d2"
        ],
        "Left": -392.09561902354221,
        "Top": 571.24117415498313,
        "Width": 1230.7249667700382,
        "Height": 359.99921957064339,
        "FontSize": 36.0,
        "InitialTop": 624.24117415498313,
        "InitialHeight": 383.99921957064339,
        "TextblockHeight": 43.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "720b5c556c874b0481e23d766b797c74",
        "Title": "Duplicating Floor Plans",
        "Nodes": [
          "8955424141134672b9637664bb263265",
          "30a83984881a4c9dbf72c6859c87125d",
          "0f45c3452efc4adfafab112317193ab6"
        ],
        "Left": 905.46626775101777,
        "Top": 668.2129809591022,
        "Width": 608.1815620931593,
        "Height": 238.53526435872959,
        "FontSize": 36.0,
        "InitialTop": 721.2129809591022,
        "InitialHeight": 227.53526435872959,
        "TextblockHeight": 43.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "a1ef961efda54401809ac51fef6444f4",
        "Title": "Creating Views, Assigining SB and Organising in groups",
        "Nodes": [
          "b5e0677122aa4b428cfade269e552959"
        ],
        "Left": 1979.6141840126963,
        "Top": 528.62404053059811,
        "Width": 144.0,
        "Height": 215.0,
        "FontSize": 18.0,
        "InitialTop": 624.62404053059811,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "f82a21a4d5614d5bb9712a7b0da21012",
        "Title": "Extracting Templates according to excel",
        "Nodes": [
          "518aecc2a53247c8932e045b01a9b6b1"
        ],
        "Left": 2073.7662898316,
        "Top": 879.57934298010593,
        "Width": 144.0,
        "Height": 215.0,
        "FontSize": 18.0,
        "InitialTop": 975.57934298010593,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "05d7229f5cb74325a6e484d483b0d9cc",
        "Title": "Setting View Template",
        "Nodes": [
          "b45a92b0c9d84f6e9b9c8341b14df955"
        ],
        "Left": 2419.7153589249633,
        "Top": 527.10784746979368,
        "Width": 251.0,
        "Height": 215.0,
        "FontSize": 36.0,
        "InitialTop": 623.10784746979368,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "7a145a11819c443499177a8d7cdfd302",
        "Title": "The Excel Data has 6 columns\r\n1.  Level Names (must be present in document)\r\n2. ScopeBox Name (must be present in element)\r\n3. FamilyType (FloorPlan)\r\n4. ViewType Name (PLAN-GE etc)\r\n5. View Name\r\n6. ViewTemplate Name (must be present in document)",
        "Nodes": [],
        "Left": -392.04631122676267,
        "Top": 431.30771791412928,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 248.53324884819472,
    "Y": 102.14659855402596,
    "Zoom": 0.351047652043832
  }
}